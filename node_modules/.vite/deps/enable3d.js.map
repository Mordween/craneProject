{
  "version": 3,
  "sources": ["../../@yandeu/events/src/version.ts", "../../@yandeu/events/src/index.ts", "../../matter-js/build/matter.js", "../../three-csg-ts/lib/esm/NBuf.js", "../../three-csg-ts/lib/esm/Node.js", "../../three-csg-ts/lib/esm/Vector.js", "../../three-csg-ts/lib/esm/Plane.js", "../../three-csg-ts/lib/esm/Polygon.js", "../../three-csg-ts/lib/esm/Vertex.js", "../../three-csg-ts/lib/esm/CSG.js", "../../@enable3d/three-graphics/src/csg/index.ts", "../../three/examples/jsm/libs/fflate.module.js", "../../three/examples/jsm/curves/NURBSUtils.js", "../../three/examples/jsm/curves/NURBSCurve.js", "../../three/examples/jsm/loaders/FBXLoader.js", "../../three/examples/jsm/loaders/SVGLoader.js", "../../@enable3d/three-graphics/src/plugins/loaders.ts", "../../@enable3d/three-graphics/src/plugins/lights.ts", "../../@enable3d/common/src/extendedMesh.ts", "../../@enable3d/common/src/logger.ts", "../../@enable3d/common/src/defaultMaterial.ts", "../../@enable3d/common/src/factories.ts", "../../@enable3d/three-graphics/src/plugins/heightmap.ts", "../../three/examples/jsm/controls/OrbitControls.js", "../../@enable3d/three-graphics/src/plugins/warpSpeed.ts", "../../@enable3d/three-graphics/src/plugins/mixers.ts", "../../three/examples/jsm/objects/Reflector.js", "../../three/examples/jsm/objects/Refractor.js", "../../three/examples/jsm/objects/Water2.js", "../../@enable3d/three-graphics/src/plugins/water.ts", "../../@enable3d/three-graphics/src/plugins/misc.ts", "../../@enable3d/three-graphics/src/plugins/transform.ts", "../../@enable3d/common/src/physicsBody.ts", "../../@enable3d/common/src/extendedObject3D.ts", "../../@enable3d/common/src/extendedGroup.ts", "../../@enable3d/ammo-physics/src/shapes.ts", "../../@enable3d/ammo-physics/src/constraints.ts", "../../@enable3d/ammo-physics/src/physics.ts", "../../@enable3d/ammo-physics/src/three-to-ammo.ts", "../../@enable3d/ammo-physics/src/torusShape.ts", "../../@enable3d/ammo-physics/src/collisionEvents.ts", "../../@enable3d/ammo-physics/src/debugDrawer.ts", "../../three/examples/jsm/math/ConvexHull.js", "../../three/examples/jsm/geometries/ConvexGeometry.js", "../../@enable3d/ammo-physics/src/convexObjectBreaker.ts", "../../@enable3d/common/src/wasmLoader.ts", "../../@enable3d/common/src/physicsLoader.ts", "../../@enable3d/common/src/types.ts", "../../@enable3d/common/src/applyMixins.ts", "../../@enable3d/ammo-physics/src/raycaster/closestRayResultCallback.ts", "../../@enable3d/ammo-physics/src/raycaster/allHitsRayResultCallback.ts", "../../@enable3d/ammo-physics/src/raycaster/raycaster.ts", "../../three/examples/jsm/webxr/VRButton.js", "../../three/examples/jsm/libs/motion-controllers.module.js", "../../three/examples/jsm/webxr/XRControllerModelFactory.js", "../../@enable3d/three-graphics/src/plugins/webxr.ts", "../../@enable3d/three-graphics/src/plugins/haveSomeFun.ts", "../../@enable3d/three-graphics/src/plugins/cameras.ts", "../../enable3d/src/scene3d.ts", "../../@enable3d/three-graphics/src/core.ts", "../../@enable3d/three-graphics/src/version.ts", "../../@enable3d/three-graphics/src/index.ts", "../../enable3d/src/project.ts", "../../@enable3d/three-graphics/src/flat/index.ts", "../../@yandeu/tap/src/index.ts", "../../@yandeu/tap/src/eventMatrix.ts", "../../@yandeu/tap/src/version.ts", "../../@enable3d/three-graphics/src/flat/_misc.ts", "../../@enable3d/three-graphics/src/flat/simpleSprite.ts", "../../@enable3d/three-graphics/src/flat/actionSprite.ts", "../../@enable3d/three-graphics/src/flat/spriteSheet.ts", "../../@enable3d/three-graphics/src/flat/button.ts", "../../@enable3d/three-graphics/src/flat/draw.ts", "../../@enable3d/three-graphics/src/flat/flat.ts", "../../@enable3d/three-graphics/src/flat/text.ts", "../../@enable3d/three-graphics/src/flat/textureAtlas.ts", "../../@enable3d/three-graphics/src/flat/physics/physics.ts", "../../@enable3d/three-graphics/src/flat/physics/_misc.ts", "../../@enable3d/common/src/misc/joystick.ts", "../../@enable3d/common/src/misc/thirdPersonControls.ts", "../../@enable3d/common/src/misc/firstPersonControls.ts", "../../@enable3d/common/src/misc/pointerLock.ts", "../../@enable3d/common/src/misc/pointerDrag.ts", "../../three/examples/jsm/shaders/CopyShader.js", "../../three/examples/jsm/postprocessing/Pass.js", "../../three/examples/jsm/postprocessing/ShaderPass.js", "../../three/examples/jsm/postprocessing/MaskPass.js", "../../three/examples/jsm/postprocessing/EffectComposer.js", "../../three/examples/jsm/postprocessing/RenderPass.js", "../../three/examples/jsm/shaders/DigitalGlitch.js", "../../three/examples/jsm/postprocessing/GlitchPass.js", "../../three/examples/jsm/shaders/DotScreenShader.js"],
  "sourcesContent": [null, null, "/*!\r\n * matter-js 0.17.1 by @liabru\r\n * http://brm.io/matter-js/\r\n * License MIT\r\n * \r\n * The MIT License (MIT)\r\n * \r\n * Copyright (c) Liam Brummitt and contributors.\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine(\"Matter\", [], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"Matter\"] = factory();\r\n\telse\r\n\t\troot[\"Matter\"] = factory();\r\n})(this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = 22);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n* The `Matter.Common` module contains utility functions that are common to all modules.\r\n*\r\n* @class Common\r\n*/\r\n\r\nvar Common = {};\r\n\r\nmodule.exports = Common;\r\n\r\n(function() {\r\n\r\n    Common._nextId = 0;\r\n    Common._seed = 0;\r\n    Common._nowStartTime = +(new Date());\r\n    Common._warnedOnce = {};\r\n    Common._decomp = null;\r\n    \r\n    /**\r\n     * Extends the object in the first argument using the object in the second argument.\r\n     * @method extend\r\n     * @param {} obj\r\n     * @param {boolean} deep\r\n     * @return {} obj extended\r\n     */\r\n    Common.extend = function(obj, deep) {\r\n        var argsStart,\r\n            args,\r\n            deepClone;\r\n\r\n        if (typeof deep === 'boolean') {\r\n            argsStart = 2;\r\n            deepClone = deep;\r\n        } else {\r\n            argsStart = 1;\r\n            deepClone = true;\r\n        }\r\n\r\n        for (var i = argsStart; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n\r\n            if (source) {\r\n                for (var prop in source) {\r\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\r\n                        if (!obj[prop] || obj[prop].constructor === Object) {\r\n                            obj[prop] = obj[prop] || {};\r\n                            Common.extend(obj[prop], deepClone, source[prop]);\r\n                        } else {\r\n                            obj[prop] = source[prop];\r\n                        }\r\n                    } else {\r\n                        obj[prop] = source[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Creates a new clone of the object, if deep is true references will also be cloned.\r\n     * @method clone\r\n     * @param {} obj\r\n     * @param {bool} deep\r\n     * @return {} obj cloned\r\n     */\r\n    Common.clone = function(obj, deep) {\r\n        return Common.extend({}, deep, obj);\r\n    };\r\n\r\n    /**\r\n     * Returns the list of keys for the given object.\r\n     * @method keys\r\n     * @param {} obj\r\n     * @return {string[]} keys\r\n     */\r\n    Common.keys = function(obj) {\r\n        if (Object.keys)\r\n            return Object.keys(obj);\r\n\r\n        // avoid hasOwnProperty for performance\r\n        var keys = [];\r\n        for (var key in obj)\r\n            keys.push(key);\r\n        return keys;\r\n    };\r\n\r\n    /**\r\n     * Returns the list of values for the given object.\r\n     * @method values\r\n     * @param {} obj\r\n     * @return {array} Array of the objects property values\r\n     */\r\n    Common.values = function(obj) {\r\n        var values = [];\r\n        \r\n        if (Object.keys) {\r\n            var keys = Object.keys(obj);\r\n            for (var i = 0; i < keys.length; i++) {\r\n                values.push(obj[keys[i]]);\r\n            }\r\n            return values;\r\n        }\r\n        \r\n        // avoid hasOwnProperty for performance\r\n        for (var key in obj)\r\n            values.push(obj[key]);\r\n        return values;\r\n    };\r\n\r\n    /**\r\n     * Gets a value from `base` relative to the `path` string.\r\n     * @method get\r\n     * @param {} obj The base object\r\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\r\n     * @param {number} [begin] Path slice begin\r\n     * @param {number} [end] Path slice end\r\n     * @return {} The object at the given path\r\n     */\r\n    Common.get = function(obj, path, begin, end) {\r\n        path = path.split('.').slice(begin, end);\r\n\r\n        for (var i = 0; i < path.length; i += 1) {\r\n            obj = obj[path[i]];\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Sets a value on `base` relative to the given `path` string.\r\n     * @method set\r\n     * @param {} obj The base object\r\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\r\n     * @param {} val The value to set\r\n     * @param {number} [begin] Path slice begin\r\n     * @param {number} [end] Path slice end\r\n     * @return {} Pass through `val` for chaining\r\n     */\r\n    Common.set = function(obj, path, val, begin, end) {\r\n        var parts = path.split('.').slice(begin, end);\r\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Shuffles the given array in-place.\r\n     * The function uses a seeded random generator.\r\n     * @method shuffle\r\n     * @param {array} array\r\n     * @return {array} array shuffled randomly\r\n     */\r\n    Common.shuffle = function(array) {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Common.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Randomly chooses a value from a list with equal probability.\r\n     * The function uses a seeded random generator.\r\n     * @method choose\r\n     * @param {array} choices\r\n     * @return {object} A random choice object from the array\r\n     */\r\n    Common.choose = function(choices) {\r\n        return choices[Math.floor(Common.random() * choices.length)];\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a HTMLElement, otherwise false.\r\n     * @method isElement\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\r\n     */\r\n    Common.isElement = function(obj) {\r\n        if (typeof HTMLElement !== 'undefined') {\r\n            return obj instanceof HTMLElement;\r\n        }\r\n\r\n        return !!(obj && obj.nodeType && obj.nodeName);\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is an array.\r\n     * @method isArray\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is an array, otherwise false\r\n     */\r\n    Common.isArray = function(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Array]';\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a function.\r\n     * @method isFunction\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a function, otherwise false\r\n     */\r\n    Common.isFunction = function(obj) {\r\n        return typeof obj === \"function\";\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a plain object.\r\n     * @method isPlainObject\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a plain object, otherwise false\r\n     */\r\n    Common.isPlainObject = function(obj) {\r\n        return typeof obj === 'object' && obj.constructor === Object;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the object is a string.\r\n     * @method isString\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a string, otherwise false\r\n     */\r\n    Common.isString = function(obj) {\r\n        return toString.call(obj) === '[object String]';\r\n    };\r\n    \r\n    /**\r\n     * Returns the given value clamped between a minimum and maximum value.\r\n     * @method clamp\r\n     * @param {number} value\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @return {number} The value clamped between min and max inclusive\r\n     */\r\n    Common.clamp = function(value, min, max) {\r\n        if (value < min)\r\n            return min;\r\n        if (value > max)\r\n            return max;\r\n        return value;\r\n    };\r\n    \r\n    /**\r\n     * Returns the sign of the given value.\r\n     * @method sign\r\n     * @param {number} value\r\n     * @return {number} -1 if negative, +1 if 0 or positive\r\n     */\r\n    Common.sign = function(value) {\r\n        return value < 0 ? -1 : 1;\r\n    };\r\n    \r\n    /**\r\n     * Returns the current timestamp since the time origin (e.g. from page load).\r\n     * The result is in milliseconds and will use high-resolution timing if available.\r\n     * @method now\r\n     * @return {number} the current timestamp in milliseconds\r\n     */\r\n    Common.now = function() {\r\n        if (typeof window !== 'undefined' && window.performance) {\r\n            if (window.performance.now) {\r\n                return window.performance.now();\r\n            } else if (window.performance.webkitNow) {\r\n                return window.performance.webkitNow();\r\n            }\r\n        }\r\n\r\n        if (Date.now) {\r\n            return Date.now();\r\n        }\r\n\r\n        return (new Date()) - Common._nowStartTime;\r\n    };\r\n    \r\n    /**\r\n     * Returns a random value between a minimum and a maximum value inclusive.\r\n     * The function uses a seeded random generator.\r\n     * @method random\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @return {number} A random number between min and max inclusive\r\n     */\r\n    Common.random = function(min, max) {\r\n        min = (typeof min !== \"undefined\") ? min : 0;\r\n        max = (typeof max !== \"undefined\") ? max : 1;\r\n        return min + _seededRandom() * (max - min);\r\n    };\r\n\r\n    var _seededRandom = function() {\r\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\r\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\r\n        return Common._seed / 233280;\r\n    };\r\n\r\n    /**\r\n     * Converts a CSS hex colour string into an integer.\r\n     * @method colorToNumber\r\n     * @param {string} colorString\r\n     * @return {number} An integer representing the CSS hex string\r\n     */\r\n    Common.colorToNumber = function(colorString) {\r\n        colorString = colorString.replace('#','');\r\n\r\n        if (colorString.length == 3) {\r\n            colorString = colorString.charAt(0) + colorString.charAt(0)\r\n                        + colorString.charAt(1) + colorString.charAt(1)\r\n                        + colorString.charAt(2) + colorString.charAt(2);\r\n        }\r\n\r\n        return parseInt(colorString, 16);\r\n    };\r\n\r\n    /**\r\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\r\n     * The default level is 'debug' which shows all console messages.  \r\n     *\r\n     * Possible level values are:\r\n     * - 0 = None\r\n     * - 1 = Debug\r\n     * - 2 = Info\r\n     * - 3 = Warn\r\n     * - 4 = Error\r\n     * @property Common.logLevel\r\n     * @type {Number}\r\n     * @default 1\r\n     */\r\n    Common.logLevel = 1;\r\n\r\n    /**\r\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\r\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\r\n     * @method log\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.log = function() {\r\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\r\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\r\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\r\n     * @method info\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.info = function() {\r\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\r\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\r\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\r\n     * @method warn\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.warn = function() {\r\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\r\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Uses `Common.warn` to log the given message one time only.\r\n     * @method warnOnce\r\n     * @param ...objs {} The objects to log.\r\n     */\r\n    Common.warnOnce = function() {\r\n        var message = Array.prototype.slice.call(arguments).join(' ');\r\n\r\n        if (!Common._warnedOnce[message]) {\r\n            Common.warn(message);\r\n            Common._warnedOnce[message] = true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Shows a deprecated console warning when the function on the given object is called.\r\n     * The target function will be replaced with a new function that first shows the warning\r\n     * and then calls the original function.\r\n     * @method deprecated\r\n     * @param {object} obj The object or module\r\n     * @param {string} name The property name of the function on obj\r\n     * @param {string} warning The one-time message to show if the function is called\r\n     */\r\n    Common.deprecated = function(obj, prop, warning) {\r\n        obj[prop] = Common.chain(function() {\r\n            Common.warnOnce('🔅 deprecated 🔅', warning);\r\n        }, obj[prop]);\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique sequential ID.\r\n     * @method nextId\r\n     * @return {Number} Unique sequential ID\r\n     */\r\n    Common.nextId = function() {\r\n        return Common._nextId++;\r\n    };\r\n\r\n    /**\r\n     * A cross browser compatible indexOf implementation.\r\n     * @method indexOf\r\n     * @param {array} haystack\r\n     * @param {object} needle\r\n     * @return {number} The position of needle in haystack, otherwise -1.\r\n     */\r\n    Common.indexOf = function(haystack, needle) {\r\n        if (haystack.indexOf)\r\n            return haystack.indexOf(needle);\r\n\r\n        for (var i = 0; i < haystack.length; i++) {\r\n            if (haystack[i] === needle)\r\n                return i;\r\n        }\r\n\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * A cross browser compatible array map implementation.\r\n     * @method map\r\n     * @param {array} list\r\n     * @param {function} func\r\n     * @return {array} Values from list transformed by func.\r\n     */\r\n    Common.map = function(list, func) {\r\n        if (list.map) {\r\n            return list.map(func);\r\n        }\r\n\r\n        var mapped = [];\r\n\r\n        for (var i = 0; i < list.length; i += 1) {\r\n            mapped.push(func(list[i]));\r\n        }\r\n\r\n        return mapped;\r\n    };\r\n\r\n    /**\r\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\r\n     * Circular dependencies are allowed.\r\n     * @method topologicalSort\r\n     * @param {object} graph\r\n     * @return {array} Partially ordered set of vertices in topological order.\r\n     */\r\n    Common.topologicalSort = function(graph) {\r\n        // https://github.com/mgechev/javascript-algorithms\r\n        // Copyright (c) Minko Gechev (MIT license)\r\n        // Modifications: tidy formatting and naming\r\n        var result = [],\r\n            visited = [],\r\n            temp = [];\r\n\r\n        for (var node in graph) {\r\n            if (!visited[node] && !temp[node]) {\r\n                Common._topologicalSort(node, visited, temp, graph, result);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\r\n        var neighbors = graph[node] || [];\r\n        temp[node] = true;\r\n\r\n        for (var i = 0; i < neighbors.length; i += 1) {\r\n            var neighbor = neighbors[i];\r\n\r\n            if (temp[neighbor]) {\r\n                // skip circular dependencies\r\n                continue;\r\n            }\r\n\r\n            if (!visited[neighbor]) {\r\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\r\n            }\r\n        }\r\n\r\n        temp[node] = false;\r\n        visited[node] = true;\r\n\r\n        result.push(node);\r\n    };\r\n\r\n    /**\r\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\r\n     * The arguments applied when calling the new function will also be applied to every function passed.\r\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\r\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\r\n     * After all passed functions have been called the new function returns the last returned value (if any).\r\n     * If any of the passed functions are a chain, then the chain will be flattened.\r\n     * @method chain\r\n     * @param ...funcs {function} The functions to chain.\r\n     * @return {function} A new function that calls the passed functions in order.\r\n     */\r\n    Common.chain = function() {\r\n        var funcs = [];\r\n\r\n        for (var i = 0; i < arguments.length; i += 1) {\r\n            var func = arguments[i];\r\n\r\n            if (func._chained) {\r\n                // flatten already chained functions\r\n                funcs.push.apply(funcs, func._chained);\r\n            } else {\r\n                funcs.push(func);\r\n            }\r\n        }\r\n\r\n        var chain = function() {\r\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\r\n            var lastResult,\r\n                args = new Array(arguments.length);\r\n\r\n            for (var i = 0, l = arguments.length; i < l; i++) {\r\n                args[i] = arguments[i];\r\n            }\r\n\r\n            for (i = 0; i < funcs.length; i += 1) {\r\n                var result = funcs[i].apply(lastResult, args);\r\n\r\n                if (typeof result !== 'undefined') {\r\n                    lastResult = result;\r\n                }\r\n            }\r\n\r\n            return lastResult;\r\n        };\r\n\r\n        chain._chained = funcs;\r\n\r\n        return chain;\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\r\n     * See also docs for `Common.chain`.\r\n     * @method chainPathBefore\r\n     * @param {} base The base object\r\n     * @param {string} path The path relative to `base`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Common.chainPathBefore = function(base, path, func) {\r\n        return Common.set(base, path, Common.chain(\r\n            func,\r\n            Common.get(base, path)\r\n        ));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\r\n     * See also docs for `Common.chain`.\r\n     * @method chainPathAfter\r\n     * @param {} base The base object\r\n     * @param {string} path The path relative to `base`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Common.chainPathAfter = function(base, path, func) {\r\n        return Common.set(base, path, Common.chain(\r\n            Common.get(base, path),\r\n            func\r\n        ));\r\n    };\r\n\r\n    /**\r\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\r\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\r\n     * @method setDecomp\r\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\r\n     */\r\n    Common.setDecomp = function(decomp) {\r\n        Common._decomp = decomp;\r\n    };\r\n\r\n    /**\r\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\r\n     * otherwise returns the global `decomp` if set.\r\n     * @method getDecomp\r\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\r\n     */\r\n    Common.getDecomp = function() {\r\n        // get user provided decomp if set\r\n        var decomp = Common._decomp;\r\n\r\n        try {\r\n            // otherwise from window global\r\n            if (!decomp && typeof window !== 'undefined') {\r\n                decomp = window.decomp;\r\n            }\r\n    \r\n            // otherwise from node global\r\n            if (!decomp && typeof global !== 'undefined') {\r\n                decomp = global.decomp;\r\n            }\r\n        } catch (e) {\r\n            // decomp not available\r\n            decomp = null;\r\n        }\r\n\r\n        return decomp;\r\n    };\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 1 */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\r\n*\r\n* @class Bounds\r\n*/\r\n\r\nvar Bounds = {};\r\n\r\nmodule.exports = Bounds;\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\r\n     * @method create\r\n     * @param {vertices} vertices\r\n     * @return {bounds} A new bounds object\r\n     */\r\n    Bounds.create = function(vertices) {\r\n        var bounds = { \r\n            min: { x: 0, y: 0 }, \r\n            max: { x: 0, y: 0 }\r\n        };\r\n\r\n        if (vertices)\r\n            Bounds.update(bounds, vertices);\r\n        \r\n        return bounds;\r\n    };\r\n\r\n    /**\r\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\r\n     * @method update\r\n     * @param {bounds} bounds\r\n     * @param {vertices} vertices\r\n     * @param {vector} velocity\r\n     */\r\n    Bounds.update = function(bounds, vertices, velocity) {\r\n        bounds.min.x = Infinity;\r\n        bounds.max.x = -Infinity;\r\n        bounds.min.y = Infinity;\r\n        bounds.max.y = -Infinity;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertex = vertices[i];\r\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\r\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\r\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\r\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\r\n        }\r\n        \r\n        if (velocity) {\r\n            if (velocity.x > 0) {\r\n                bounds.max.x += velocity.x;\r\n            } else {\r\n                bounds.min.x += velocity.x;\r\n            }\r\n            \r\n            if (velocity.y > 0) {\r\n                bounds.max.y += velocity.y;\r\n            } else {\r\n                bounds.min.y += velocity.y;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns true if the bounds contains the given point.\r\n     * @method contains\r\n     * @param {bounds} bounds\r\n     * @param {vector} point\r\n     * @return {boolean} True if the bounds contain the point, otherwise false\r\n     */\r\n    Bounds.contains = function(bounds, point) {\r\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \r\n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the two bounds intersect.\r\n     * @method overlaps\r\n     * @param {bounds} boundsA\r\n     * @param {bounds} boundsB\r\n     * @return {boolean} True if the bounds overlap, otherwise false\r\n     */\r\n    Bounds.overlaps = function(boundsA, boundsB) {\r\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\r\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\r\n    };\r\n\r\n    /**\r\n     * Translates the bounds by the given vector.\r\n     * @method translate\r\n     * @param {bounds} bounds\r\n     * @param {vector} vector\r\n     */\r\n    Bounds.translate = function(bounds, vector) {\r\n        bounds.min.x += vector.x;\r\n        bounds.max.x += vector.x;\r\n        bounds.min.y += vector.y;\r\n        bounds.max.y += vector.y;\r\n    };\r\n\r\n    /**\r\n     * Shifts the bounds to the given position.\r\n     * @method shift\r\n     * @param {bounds} bounds\r\n     * @param {vector} position\r\n     */\r\n    Bounds.shift = function(bounds, position) {\r\n        var deltaX = bounds.max.x - bounds.min.x,\r\n            deltaY = bounds.max.y - bounds.min.y;\r\n            \r\n        bounds.min.x = position.x;\r\n        bounds.max.x = position.x + deltaX;\r\n        bounds.min.y = position.y;\r\n        bounds.max.y = position.y + deltaY;\r\n    };\r\n    \r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 2 */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\r\n* Vectors are the basis of all the geometry related operations in the engine.\r\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Vector\r\n*/\r\n\r\n// TODO: consider params for reusing vector objects\r\n\r\nvar Vector = {};\r\n\r\nmodule.exports = Vector;\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new vector.\r\n     * @method create\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @return {vector} A new vector\r\n     */\r\n    Vector.create = function(x, y) {\r\n        return { x: x || 0, y: y || 0 };\r\n    };\r\n\r\n    /**\r\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\r\n     * @method clone\r\n     * @param {vector} vector\r\n     * @return {vector} A new cloned vector\r\n     */\r\n    Vector.clone = function(vector) {\r\n        return { x: vector.x, y: vector.y };\r\n    };\r\n\r\n    /**\r\n     * Returns the magnitude (length) of a vector.\r\n     * @method magnitude\r\n     * @param {vector} vector\r\n     * @return {number} The magnitude of the vector\r\n     */\r\n    Vector.magnitude = function(vector) {\r\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\r\n    };\r\n\r\n    /**\r\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\r\n     * @method magnitudeSquared\r\n     * @param {vector} vector\r\n     * @return {number} The squared magnitude of the vector\r\n     */\r\n    Vector.magnitudeSquared = function(vector) {\r\n        return (vector.x * vector.x) + (vector.y * vector.y);\r\n    };\r\n\r\n    /**\r\n     * Rotates the vector about (0, 0) by specified angle.\r\n     * @method rotate\r\n     * @param {vector} vector\r\n     * @param {number} angle\r\n     * @param {vector} [output]\r\n     * @return {vector} The vector rotated about (0, 0)\r\n     */\r\n    Vector.rotate = function(vector, angle, output) {\r\n        var cos = Math.cos(angle), sin = Math.sin(angle);\r\n        if (!output) output = {};\r\n        var x = vector.x * cos - vector.y * sin;\r\n        output.y = vector.x * sin + vector.y * cos;\r\n        output.x = x;\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Rotates the vector about a specified point by specified angle.\r\n     * @method rotateAbout\r\n     * @param {vector} vector\r\n     * @param {number} angle\r\n     * @param {vector} point\r\n     * @param {vector} [output]\r\n     * @return {vector} A new vector rotated about the point\r\n     */\r\n    Vector.rotateAbout = function(vector, angle, point, output) {\r\n        var cos = Math.cos(angle), sin = Math.sin(angle);\r\n        if (!output) output = {};\r\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\r\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\r\n        output.x = x;\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Normalises a vector (such that its magnitude is `1`).\r\n     * @method normalise\r\n     * @param {vector} vector\r\n     * @return {vector} A new vector normalised\r\n     */\r\n    Vector.normalise = function(vector) {\r\n        var magnitude = Vector.magnitude(vector);\r\n        if (magnitude === 0)\r\n            return { x: 0, y: 0 };\r\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\r\n    };\r\n\r\n    /**\r\n     * Returns the dot-product of two vectors.\r\n     * @method dot\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {number} The dot product of the two vectors\r\n     */\r\n    Vector.dot = function(vectorA, vectorB) {\r\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\r\n    };\r\n\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     * @method cross\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {number} The cross product of the two vectors\r\n     */\r\n    Vector.cross = function(vectorA, vectorB) {\r\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\r\n    };\r\n\r\n    /**\r\n     * Returns the cross-product of three vectors.\r\n     * @method cross3\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @param {vector} vectorC\r\n     * @return {number} The cross product of the three vectors\r\n     */\r\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\r\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\r\n    };\r\n\r\n    /**\r\n     * Adds the two vectors.\r\n     * @method add\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @param {vector} [output]\r\n     * @return {vector} A new vector of vectorA and vectorB added\r\n     */\r\n    Vector.add = function(vectorA, vectorB, output) {\r\n        if (!output) output = {};\r\n        output.x = vectorA.x + vectorB.x;\r\n        output.y = vectorA.y + vectorB.y;\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Subtracts the two vectors.\r\n     * @method sub\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @param {vector} [output]\r\n     * @return {vector} A new vector of vectorA and vectorB subtracted\r\n     */\r\n    Vector.sub = function(vectorA, vectorB, output) {\r\n        if (!output) output = {};\r\n        output.x = vectorA.x - vectorB.x;\r\n        output.y = vectorA.y - vectorB.y;\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Multiplies a vector and a scalar.\r\n     * @method mult\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     * @return {vector} A new vector multiplied by scalar\r\n     */\r\n    Vector.mult = function(vector, scalar) {\r\n        return { x: vector.x * scalar, y: vector.y * scalar };\r\n    };\r\n\r\n    /**\r\n     * Divides a vector and a scalar.\r\n     * @method div\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     * @return {vector} A new vector divided by scalar\r\n     */\r\n    Vector.div = function(vector, scalar) {\r\n        return { x: vector.x / scalar, y: vector.y / scalar };\r\n    };\r\n\r\n    /**\r\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\r\n     * @method perp\r\n     * @param {vector} vector\r\n     * @param {bool} [negate=false]\r\n     * @return {vector} The perpendicular vector\r\n     */\r\n    Vector.perp = function(vector, negate) {\r\n        negate = negate === true ? -1 : 1;\r\n        return { x: negate * -vector.y, y: negate * vector.x };\r\n    };\r\n\r\n    /**\r\n     * Negates both components of a vector such that it points in the opposite direction.\r\n     * @method neg\r\n     * @param {vector} vector\r\n     * @return {vector} The negated vector\r\n     */\r\n    Vector.neg = function(vector) {\r\n        return { x: -vector.x, y: -vector.y };\r\n    };\r\n\r\n    /**\r\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\r\n     * @method angle\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {number} The angle in radians\r\n     */\r\n    Vector.angle = function(vectorA, vectorB) {\r\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\r\n    };\r\n\r\n    /**\r\n     * Temporary vector pool (not thread-safe).\r\n     * @property _temp\r\n     * @type {vector[]}\r\n     * @private\r\n     */\r\n    Vector._temp = [\r\n        Vector.create(), Vector.create(), \r\n        Vector.create(), Vector.create(), \r\n        Vector.create(), Vector.create()\r\n    ];\r\n\r\n})();\r\n\r\n/***/ }),\r\n/* 3 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\r\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\r\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Vertices\r\n*/\r\n\r\nvar Vertices = {};\r\n\r\nmodule.exports = Vertices;\r\n\r\nvar Vector = __webpack_require__(2);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new set of `Matter.Body` compatible vertices.\r\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\r\n     * but with some additional references required for efficient collision detection routines.\r\n     *\r\n     * Vertices must be specified in clockwise order.\r\n     *\r\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\r\n     *\r\n     * @method create\r\n     * @param {vector[]} points\r\n     * @param {body} body\r\n     */\r\n    Vertices.create = function(points, body) {\r\n        var vertices = [];\r\n\r\n        for (var i = 0; i < points.length; i++) {\r\n            var point = points[i],\r\n                vertex = {\r\n                    x: point.x,\r\n                    y: point.y,\r\n                    index: i,\r\n                    body: body,\r\n                    isInternal: false\r\n                };\r\n\r\n            vertices.push(vertex);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \r\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\r\n     * For parsing SVG paths, see `Svg.pathToVertices`.\r\n     * @method fromPath\r\n     * @param {string} path\r\n     * @param {body} body\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.fromPath = function(path, body) {\r\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\r\n            points = [];\r\n\r\n        path.replace(pathPattern, function(match, x, y) {\r\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\r\n        });\r\n\r\n        return Vertices.create(points, body);\r\n    };\r\n\r\n    /**\r\n     * Returns the centre (centroid) of the set of vertices.\r\n     * @method centre\r\n     * @param {vertices} vertices\r\n     * @return {vector} The centre point\r\n     */\r\n    Vertices.centre = function(vertices) {\r\n        var area = Vertices.area(vertices, true),\r\n            centre = { x: 0, y: 0 },\r\n            cross,\r\n            temp,\r\n            j;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            j = (i + 1) % vertices.length;\r\n            cross = Vector.cross(vertices[i], vertices[j]);\r\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\r\n            centre = Vector.add(centre, temp);\r\n        }\r\n\r\n        return Vector.div(centre, 6 * area);\r\n    };\r\n\r\n    /**\r\n     * Returns the average (mean) of the set of vertices.\r\n     * @method mean\r\n     * @param {vertices} vertices\r\n     * @return {vector} The average point\r\n     */\r\n    Vertices.mean = function(vertices) {\r\n        var average = { x: 0, y: 0 };\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            average.x += vertices[i].x;\r\n            average.y += vertices[i].y;\r\n        }\r\n\r\n        return Vector.div(average, vertices.length);\r\n    };\r\n\r\n    /**\r\n     * Returns the area of the set of vertices.\r\n     * @method area\r\n     * @param {vertices} vertices\r\n     * @param {bool} signed\r\n     * @return {number} The area\r\n     */\r\n    Vertices.area = function(vertices, signed) {\r\n        var area = 0,\r\n            j = vertices.length - 1;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\r\n            j = i;\r\n        }\r\n\r\n        if (signed)\r\n            return area / 2;\r\n\r\n        return Math.abs(area) / 2;\r\n    };\r\n\r\n    /**\r\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\r\n     * @method inertia\r\n     * @param {vertices} vertices\r\n     * @param {number} mass\r\n     * @return {number} The polygon's moment of inertia\r\n     */\r\n    Vertices.inertia = function(vertices, mass) {\r\n        var numerator = 0,\r\n            denominator = 0,\r\n            v = vertices,\r\n            cross,\r\n            j;\r\n\r\n        // find the polygon's moment of inertia, using second moment of area\r\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\r\n        for (var n = 0; n < v.length; n++) {\r\n            j = (n + 1) % v.length;\r\n            cross = Math.abs(Vector.cross(v[j], v[n]));\r\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\r\n            denominator += cross;\r\n        }\r\n\r\n        return (mass / 6) * (numerator / denominator);\r\n    };\r\n\r\n    /**\r\n     * Translates the set of vertices in-place.\r\n     * @method translate\r\n     * @param {vertices} vertices\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     */\r\n    Vertices.translate = function(vertices, vector, scalar) {\r\n        var i;\r\n        if (scalar) {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x * scalar;\r\n                vertices[i].y += vector.y * scalar;\r\n            }\r\n        } else {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x;\r\n                vertices[i].y += vector.y;\r\n            }\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Rotates the set of vertices in-place.\r\n     * @method rotate\r\n     * @param {vertices} vertices\r\n     * @param {number} angle\r\n     * @param {vector} point\r\n     */\r\n    Vertices.rotate = function(vertices, angle, point) {\r\n        if (angle === 0)\r\n            return;\r\n\r\n        var cos = Math.cos(angle),\r\n            sin = Math.sin(angle);\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                dx = vertice.x - point.x,\r\n                dy = vertice.y - point.y;\r\n                \r\n            vertice.x = point.x + (dx * cos - dy * sin);\r\n            vertice.y = point.y + (dx * sin + dy * cos);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the `point` is inside the set of `vertices`.\r\n     * @method contains\r\n     * @param {vertices} vertices\r\n     * @param {vector} point\r\n     * @return {boolean} True if the vertices contains point, otherwise false\r\n     */\r\n    Vertices.contains = function(vertices, point) {\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                nextVertice = vertices[(i + 1) % vertices.length];\r\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Scales the vertices from a point (default is centre) in-place.\r\n     * @method scale\r\n     * @param {vertices} vertices\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} point\r\n     */\r\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\r\n        if (scaleX === 1 && scaleY === 1)\r\n            return vertices;\r\n\r\n        point = point || Vertices.centre(vertices);\r\n\r\n        var vertex,\r\n            delta;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            vertex = vertices[i];\r\n            delta = Vector.sub(vertex, point);\r\n            vertices[i].x = point.x + delta.x * scaleX;\r\n            vertices[i].y = point.y + delta.y * scaleY;\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\r\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\r\n     * @method chamfer\r\n     * @param {vertices} vertices\r\n     * @param {number[]} radius\r\n     * @param {number} quality\r\n     * @param {number} qualityMin\r\n     * @param {number} qualityMax\r\n     */\r\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\r\n        if (typeof radius === 'number') {\r\n            radius = [radius];\r\n        } else {\r\n            radius = radius || [8];\r\n        }\r\n\r\n        // quality defaults to -1, which is auto\r\n        quality = (typeof quality !== 'undefined') ? quality : -1;\r\n        qualityMin = qualityMin || 2;\r\n        qualityMax = qualityMax || 14;\r\n\r\n        var newVertices = [];\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\r\n                vertex = vertices[i],\r\n                nextVertex = vertices[(i + 1) % vertices.length],\r\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\r\n\r\n            if (currentRadius === 0) {\r\n                newVertices.push(vertex);\r\n                continue;\r\n            }\r\n\r\n            var prevNormal = Vector.normalise({ \r\n                x: vertex.y - prevVertex.y, \r\n                y: prevVertex.x - vertex.x\r\n            });\r\n\r\n            var nextNormal = Vector.normalise({ \r\n                x: nextVertex.y - vertex.y, \r\n                y: vertex.x - nextVertex.x\r\n            });\r\n\r\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\r\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\r\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\r\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\r\n\r\n            var precision = quality;\r\n\r\n            if (quality === -1) {\r\n                // automatically decide precision\r\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\r\n            }\r\n\r\n            precision = Common.clamp(precision, qualityMin, qualityMax);\r\n\r\n            // use an even value for precision, more likely to reduce axes by using symmetry\r\n            if (precision % 2 === 1)\r\n                precision += 1;\r\n\r\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\r\n                theta = alpha / precision;\r\n\r\n            for (var j = 0; j < precision; j++) {\r\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\r\n            }\r\n        }\r\n\r\n        return newVertices;\r\n    };\r\n\r\n    /**\r\n     * Sorts the input vertices into clockwise order in place.\r\n     * @method clockwiseSort\r\n     * @param {vertices} vertices\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.clockwiseSort = function(vertices) {\r\n        var centre = Vertices.mean(vertices);\r\n\r\n        vertices.sort(function(vertexA, vertexB) {\r\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\r\n        });\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\r\n     * @method isConvex\r\n     * @param {vertices} vertices\r\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\r\n     */\r\n    Vertices.isConvex = function(vertices) {\r\n        // http://paulbourke.net/geometry/polygonmesh/\r\n        // Copyright (c) Paul Bourke (use permitted)\r\n\r\n        var flag = 0,\r\n            n = vertices.length,\r\n            i,\r\n            j,\r\n            k,\r\n            z;\r\n\r\n        if (n < 3)\r\n            return null;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            j = (i + 1) % n;\r\n            k = (i + 2) % n;\r\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\r\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\r\n\r\n            if (z < 0) {\r\n                flag |= 1;\r\n            } else if (z > 0) {\r\n                flag |= 2;\r\n            }\r\n\r\n            if (flag === 3) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (flag !== 0){\r\n            return true;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the convex hull of the input vertices as a new array of points.\r\n     * @method hull\r\n     * @param {vertices} vertices\r\n     * @return [vertex] vertices\r\n     */\r\n    Vertices.hull = function(vertices) {\r\n        // http://geomalgorithms.com/a10-_hull-1.html\r\n\r\n        var upper = [],\r\n            lower = [], \r\n            vertex,\r\n            i;\r\n\r\n        // sort vertices on x-axis (y-axis for ties)\r\n        vertices = vertices.slice(0);\r\n        vertices.sort(function(vertexA, vertexB) {\r\n            var dx = vertexA.x - vertexB.x;\r\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\r\n        });\r\n\r\n        // build lower hull\r\n        for (i = 0; i < vertices.length; i += 1) {\r\n            vertex = vertices[i];\r\n\r\n            while (lower.length >= 2 \r\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\r\n                lower.pop();\r\n            }\r\n\r\n            lower.push(vertex);\r\n        }\r\n\r\n        // build upper hull\r\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\r\n            vertex = vertices[i];\r\n\r\n            while (upper.length >= 2 \r\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\r\n                upper.pop();\r\n            }\r\n\r\n            upper.push(vertex);\r\n        }\r\n\r\n        // concatenation of the lower and upper hulls gives the convex hull\r\n        // omit last points because they are repeated at the beginning of the other list\r\n        upper.pop();\r\n        lower.pop();\r\n\r\n        return upper.concat(lower);\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 4 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Events\r\n*/\r\n\r\nvar Events = {};\r\n\r\nmodule.exports = Events;\r\n\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Subscribes a callback function to the given object's `eventName`.\r\n     * @method on\r\n     * @param {} object\r\n     * @param {string} eventNames\r\n     * @param {function} callback\r\n     */\r\n    Events.on = function(object, eventNames, callback) {\r\n        var names = eventNames.split(' '),\r\n            name;\r\n\r\n        for (var i = 0; i < names.length; i++) {\r\n            name = names[i];\r\n            object.events = object.events || {};\r\n            object.events[name] = object.events[name] || [];\r\n            object.events[name].push(callback);\r\n        }\r\n\r\n        return callback;\r\n    };\r\n\r\n    /**\r\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\r\n     * @method off\r\n     * @param {} object\r\n     * @param {string} eventNames\r\n     * @param {function} callback\r\n     */\r\n    Events.off = function(object, eventNames, callback) {\r\n        if (!eventNames) {\r\n            object.events = {};\r\n            return;\r\n        }\r\n\r\n        // handle Events.off(object, callback)\r\n        if (typeof eventNames === 'function') {\r\n            callback = eventNames;\r\n            eventNames = Common.keys(object.events).join(' ');\r\n        }\r\n\r\n        var names = eventNames.split(' ');\r\n\r\n        for (var i = 0; i < names.length; i++) {\r\n            var callbacks = object.events[names[i]],\r\n                newCallbacks = [];\r\n\r\n            if (callback && callbacks) {\r\n                for (var j = 0; j < callbacks.length; j++) {\r\n                    if (callbacks[j] !== callback)\r\n                        newCallbacks.push(callbacks[j]);\r\n                }\r\n            }\r\n\r\n            object.events[names[i]] = newCallbacks;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\r\n     * @method trigger\r\n     * @param {} object\r\n     * @param {string} eventNames\r\n     * @param {} event\r\n     */\r\n    Events.trigger = function(object, eventNames, event) {\r\n        var names,\r\n            name,\r\n            callbacks,\r\n            eventClone;\r\n\r\n        var events = object.events;\r\n        \r\n        if (events && Common.keys(events).length > 0) {\r\n            if (!event)\r\n                event = {};\r\n\r\n            names = eventNames.split(' ');\r\n\r\n            for (var i = 0; i < names.length; i++) {\r\n                name = names[i];\r\n                callbacks = events[name];\r\n\r\n                if (callbacks) {\r\n                    eventClone = Common.clone(event, false);\r\n                    eventClone.name = name;\r\n                    eventClone.source = object;\r\n\r\n                    for (var j = 0; j < callbacks.length; j++) {\r\n                        callbacks[j].apply(object, [eventClone]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 5 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\r\n*\r\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\r\n* A composite could contain anything from a single body all the way up to a whole world.\r\n* \r\n* When making any changes to composites, use the included functions rather than changing their properties directly.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Composite\r\n*/\r\n\r\nvar Composite = {};\r\n\r\nmodule.exports = Composite;\r\n\r\nvar Events = __webpack_require__(4);\r\nvar Common = __webpack_require__(0);\r\nvar Bounds = __webpack_require__(1);\r\nvar Body = __webpack_require__(6);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} [options]\r\n     * @return {composite} A new composite\r\n     */\r\n    Composite.create = function(options) {\r\n        return Common.extend({ \r\n            id: Common.nextId(),\r\n            type: 'composite',\r\n            parent: null,\r\n            isModified: false,\r\n            bodies: [], \r\n            constraints: [], \r\n            composites: [],\r\n            label: 'Composite',\r\n            plugin: {}\r\n        }, options);\r\n    };\r\n\r\n    /**\r\n     * Sets the composite's `isModified` flag. \r\n     * If `updateParents` is true, all parents will be set (default: false).\r\n     * If `updateChildren` is true, all children will be set (default: false).\r\n     * @method setModified\r\n     * @param {composite} composite\r\n     * @param {boolean} isModified\r\n     * @param {boolean} [updateParents=false]\r\n     * @param {boolean} [updateChildren=false]\r\n     */\r\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\r\n        composite.isModified = isModified;\r\n\r\n        if (updateParents && composite.parent) {\r\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\r\n        }\r\n\r\n        if (updateChildren) {\r\n            for(var i = 0; i < composite.composites.length; i++) {\r\n                var childComposite = composite.composites[i];\r\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\r\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\r\n     * @method add\r\n     * @param {composite} composite\r\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\r\n     * @return {composite} The original composite with the objects added\r\n     */\r\n    Composite.add = function(composite, object) {\r\n        var objects = [].concat(object);\r\n\r\n        Events.trigger(composite, 'beforeAdd', { object: object });\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n\r\n            switch (obj.type) {\r\n\r\n            case 'body':\r\n                // skip adding compound parts\r\n                if (obj.parent !== obj) {\r\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\r\n                    break;\r\n                }\r\n\r\n                Composite.addBody(composite, obj);\r\n                break;\r\n            case 'constraint':\r\n                Composite.addConstraint(composite, obj);\r\n                break;\r\n            case 'composite':\r\n                Composite.addComposite(composite, obj);\r\n                break;\r\n            case 'mouseConstraint':\r\n                Composite.addConstraint(composite, obj.constraint);\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n        Events.trigger(composite, 'afterAdd', { object: object });\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\r\n     * Optionally searching its children recursively.\r\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\r\n     * @method remove\r\n     * @param {composite} composite\r\n     * @param {object|array} object\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original composite with the objects removed\r\n     */\r\n    Composite.remove = function(composite, object, deep) {\r\n        var objects = [].concat(object);\r\n\r\n        Events.trigger(composite, 'beforeRemove', { object: object });\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n\r\n            switch (obj.type) {\r\n\r\n            case 'body':\r\n                Composite.removeBody(composite, obj, deep);\r\n                break;\r\n            case 'constraint':\r\n                Composite.removeConstraint(composite, obj, deep);\r\n                break;\r\n            case 'composite':\r\n                Composite.removeComposite(composite, obj, deep);\r\n                break;\r\n            case 'mouseConstraint':\r\n                Composite.removeConstraint(composite, obj.constraint);\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n        Events.trigger(composite, 'afterRemove', { object: object });\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Adds a composite to the given composite.\r\n     * @private\r\n     * @method addComposite\r\n     * @param {composite} compositeA\r\n     * @param {composite} compositeB\r\n     * @return {composite} The original compositeA with the objects from compositeB added\r\n     */\r\n    Composite.addComposite = function(compositeA, compositeB) {\r\n        compositeA.composites.push(compositeB);\r\n        compositeB.parent = compositeA;\r\n        Composite.setModified(compositeA, true, true, false);\r\n        return compositeA;\r\n    };\r\n\r\n    /**\r\n     * Removes a composite from the given composite, and optionally searching its children recursively.\r\n     * @private\r\n     * @method removeComposite\r\n     * @param {composite} compositeA\r\n     * @param {composite} compositeB\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original compositeA with the composite removed\r\n     */\r\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\r\n        var position = Common.indexOf(compositeA.composites, compositeB);\r\n        if (position !== -1) {\r\n            Composite.removeCompositeAt(compositeA, position);\r\n            Composite.setModified(compositeA, true, true, false);\r\n        }\r\n\r\n        if (deep) {\r\n            for (var i = 0; i < compositeA.composites.length; i++){\r\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\r\n            }\r\n        }\r\n\r\n        return compositeA;\r\n    };\r\n\r\n    /**\r\n     * Removes a composite from the given composite.\r\n     * @private\r\n     * @method removeCompositeAt\r\n     * @param {composite} composite\r\n     * @param {number} position\r\n     * @return {composite} The original composite with the composite removed\r\n     */\r\n    Composite.removeCompositeAt = function(composite, position) {\r\n        composite.composites.splice(position, 1);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Adds a body to the given composite.\r\n     * @private\r\n     * @method addBody\r\n     * @param {composite} composite\r\n     * @param {body} body\r\n     * @return {composite} The original composite with the body added\r\n     */\r\n    Composite.addBody = function(composite, body) {\r\n        composite.bodies.push(body);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a body from the given composite, and optionally searching its children recursively.\r\n     * @private\r\n     * @method removeBody\r\n     * @param {composite} composite\r\n     * @param {body} body\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original composite with the body removed\r\n     */\r\n    Composite.removeBody = function(composite, body, deep) {\r\n        var position = Common.indexOf(composite.bodies, body);\r\n        if (position !== -1) {\r\n            Composite.removeBodyAt(composite, position);\r\n            Composite.setModified(composite, true, true, false);\r\n        }\r\n\r\n        if (deep) {\r\n            for (var i = 0; i < composite.composites.length; i++){\r\n                Composite.removeBody(composite.composites[i], body, true);\r\n            }\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a body from the given composite.\r\n     * @private\r\n     * @method removeBodyAt\r\n     * @param {composite} composite\r\n     * @param {number} position\r\n     * @return {composite} The original composite with the body removed\r\n     */\r\n    Composite.removeBodyAt = function(composite, position) {\r\n        composite.bodies.splice(position, 1);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Adds a constraint to the given composite.\r\n     * @private\r\n     * @method addConstraint\r\n     * @param {composite} composite\r\n     * @param {constraint} constraint\r\n     * @return {composite} The original composite with the constraint added\r\n     */\r\n    Composite.addConstraint = function(composite, constraint) {\r\n        composite.constraints.push(constraint);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\r\n     * @private\r\n     * @method removeConstraint\r\n     * @param {composite} composite\r\n     * @param {constraint} constraint\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original composite with the constraint removed\r\n     */\r\n    Composite.removeConstraint = function(composite, constraint, deep) {\r\n        var position = Common.indexOf(composite.constraints, constraint);\r\n        if (position !== -1) {\r\n            Composite.removeConstraintAt(composite, position);\r\n        }\r\n\r\n        if (deep) {\r\n            for (var i = 0; i < composite.composites.length; i++){\r\n                Composite.removeConstraint(composite.composites[i], constraint, true);\r\n            }\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a body from the given composite.\r\n     * @private\r\n     * @method removeConstraintAt\r\n     * @param {composite} composite\r\n     * @param {number} position\r\n     * @return {composite} The original composite with the constraint removed\r\n     */\r\n    Composite.removeConstraintAt = function(composite, position) {\r\n        composite.constraints.splice(position, 1);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes all bodies, constraints and composites from the given composite.\r\n     * Optionally clearing its children recursively.\r\n     * @method clear\r\n     * @param {composite} composite\r\n     * @param {boolean} keepStatic\r\n     * @param {boolean} [deep=false]\r\n     */\r\n    Composite.clear = function(composite, keepStatic, deep) {\r\n        if (deep) {\r\n            for (var i = 0; i < composite.composites.length; i++){\r\n                Composite.clear(composite.composites[i], keepStatic, true);\r\n            }\r\n        }\r\n        \r\n        if (keepStatic) {\r\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\r\n        } else {\r\n            composite.bodies.length = 0;\r\n        }\r\n\r\n        composite.constraints.length = 0;\r\n        composite.composites.length = 0;\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\r\n     * @method allBodies\r\n     * @param {composite} composite\r\n     * @return {body[]} All the bodies\r\n     */\r\n    Composite.allBodies = function(composite) {\r\n        var bodies = [].concat(composite.bodies);\r\n\r\n        for (var i = 0; i < composite.composites.length; i++)\r\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\r\n\r\n        return bodies;\r\n    };\r\n\r\n    /**\r\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\r\n     * @method allConstraints\r\n     * @param {composite} composite\r\n     * @return {constraint[]} All the constraints\r\n     */\r\n    Composite.allConstraints = function(composite) {\r\n        var constraints = [].concat(composite.constraints);\r\n\r\n        for (var i = 0; i < composite.composites.length; i++)\r\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\r\n\r\n        return constraints;\r\n    };\r\n\r\n    /**\r\n     * Returns all composites in the given composite, including all composites in its children, recursively.\r\n     * @method allComposites\r\n     * @param {composite} composite\r\n     * @return {composite[]} All the composites\r\n     */\r\n    Composite.allComposites = function(composite) {\r\n        var composites = [].concat(composite.composites);\r\n\r\n        for (var i = 0; i < composite.composites.length; i++)\r\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\r\n\r\n        return composites;\r\n    };\r\n\r\n    /**\r\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\r\n     * @method get\r\n     * @param {composite} composite\r\n     * @param {number} id\r\n     * @param {string} type\r\n     * @return {object} The requested object, if found\r\n     */\r\n    Composite.get = function(composite, id, type) {\r\n        var objects,\r\n            object;\r\n\r\n        switch (type) {\r\n        case 'body':\r\n            objects = Composite.allBodies(composite);\r\n            break;\r\n        case 'constraint':\r\n            objects = Composite.allConstraints(composite);\r\n            break;\r\n        case 'composite':\r\n            objects = Composite.allComposites(composite).concat(composite);\r\n            break;\r\n        }\r\n\r\n        if (!objects)\r\n            return null;\r\n\r\n        object = objects.filter(function(object) { \r\n            return object.id.toString() === id.toString(); \r\n        });\r\n\r\n        return object.length === 0 ? null : object[0];\r\n    };\r\n\r\n    /**\r\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\r\n     * @method move\r\n     * @param {compositeA} compositeA\r\n     * @param {object[]} objects\r\n     * @param {compositeB} compositeB\r\n     * @return {composite} Returns compositeA\r\n     */\r\n    Composite.move = function(compositeA, objects, compositeB) {\r\n        Composite.remove(compositeA, objects);\r\n        Composite.add(compositeB, objects);\r\n        return compositeA;\r\n    };\r\n\r\n    /**\r\n     * Assigns new ids for all objects in the composite, recursively.\r\n     * @method rebase\r\n     * @param {composite} composite\r\n     * @return {composite} Returns composite\r\n     */\r\n    Composite.rebase = function(composite) {\r\n        var objects = Composite.allBodies(composite)\r\n            .concat(Composite.allConstraints(composite))\r\n            .concat(Composite.allComposites(composite));\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            objects[i].id = Common.nextId();\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Translates all children in the composite by a given vector relative to their current positions, \r\n     * without imparting any velocity.\r\n     * @method translate\r\n     * @param {composite} composite\r\n     * @param {vector} translation\r\n     * @param {bool} [recursive=true]\r\n     */\r\n    Composite.translate = function(composite, translation, recursive) {\r\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            Body.translate(bodies[i], translation);\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\r\n     * @method rotate\r\n     * @param {composite} composite\r\n     * @param {number} rotation\r\n     * @param {vector} point\r\n     * @param {bool} [recursive=true]\r\n     */\r\n    Composite.rotate = function(composite, rotation, point, recursive) {\r\n        var cos = Math.cos(rotation),\r\n            sin = Math.sin(rotation),\r\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + (dx * cos - dy * sin),\r\n                y: point.y + (dx * sin + dy * cos)\r\n            });\r\n\r\n            Body.rotate(body, rotation);\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\r\n     * @method scale\r\n     * @param {composite} composite\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} point\r\n     * @param {bool} [recursive=true]\r\n     */\r\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\r\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + dx * scaleX,\r\n                y: point.y + dy * scaleY\r\n            });\r\n\r\n            Body.scale(body, scaleX, scaleY);\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Returns the union of the bounds of all of the composite's bodies.\r\n     * @method bounds\r\n     * @param {composite} composite The composite.\r\n     * @returns {bounds} The composite bounds.\r\n     */\r\n    Composite.bounds = function(composite) {\r\n        var bodies = Composite.allBodies(composite),\r\n            vertices = [];\r\n\r\n        for (var i = 0; i < bodies.length; i += 1) {\r\n            var body = bodies[i];\r\n            vertices.push(body.bounds.min, body.bounds.max);\r\n        }\r\n\r\n        return Bounds.create(vertices);\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.add` is made, before objects have been added.\r\n    *\r\n    * @event beforeAdd\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.add` is made, after objects have been added.\r\n    *\r\n    * @event afterAdd\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\r\n    *\r\n    * @event beforeRemove\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\r\n    *\r\n    * @event afterRemove\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"composite\"\r\n     * @readOnly\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage composites.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Composite\"\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies whether the composite has been modified during the current step.\r\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\r\n     * If you need to change it manually, you should use the `Composite.setModified` method.\r\n     *\r\n     * @property isModified\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\r\n     *\r\n     * @property parent\r\n     * @type composite\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * An array of `Body` that are _direct_ children of this composite.\r\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\r\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\r\n     *\r\n     * @property bodies\r\n     * @type body[]\r\n     * @default []\r\n     */\r\n\r\n    /**\r\n     * An array of `Constraint` that are _direct_ children of this composite.\r\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\r\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\r\n     *\r\n     * @property constraints\r\n     * @type constraint[]\r\n     * @default []\r\n     */\r\n\r\n    /**\r\n     * An array of `Composite` that are _direct_ children of this composite.\r\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\r\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\r\n     *\r\n     * @property composites\r\n     * @type composite[]\r\n     * @default []\r\n     */\r\n\r\n    /**\r\n     * An object reserved for storing plugin-specific properties.\r\n     *\r\n     * @property plugin\r\n     * @type {}\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 6 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Body` module contains methods for creating and manipulating body models.\r\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\r\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n\r\n* @class Body\r\n*/\r\n\r\nvar Body = {};\r\n\r\nmodule.exports = Body;\r\n\r\nvar Vertices = __webpack_require__(3);\r\nvar Vector = __webpack_require__(2);\r\nvar Sleeping = __webpack_require__(7);\r\nvar Render = __webpack_require__(16);\r\nvar Common = __webpack_require__(0);\r\nvar Bounds = __webpack_require__(1);\r\nvar Axes = __webpack_require__(10);\r\n\r\n(function() {\r\n\r\n    Body._inertiaScale = 4;\r\n    Body._nextCollidingGroupId = 1;\r\n    Body._nextNonCollidingGroupId = -1;\r\n    Body._nextCategory = 0x0001;\r\n\r\n    /**\r\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * Vertices must be specified in clockwise order.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {body} body\r\n     */\r\n    Body.create = function(options) {\r\n        var defaults = {\r\n            id: Common.nextId(),\r\n            type: 'body',\r\n            label: 'Body',\r\n            parts: [],\r\n            plugin: {},\r\n            angle: 0,\r\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\r\n            position: { x: 0, y: 0 },\r\n            force: { x: 0, y: 0 },\r\n            torque: 0,\r\n            positionImpulse: { x: 0, y: 0 },\r\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\r\n            totalContacts: 0,\r\n            speed: 0,\r\n            angularSpeed: 0,\r\n            velocity: { x: 0, y: 0 },\r\n            angularVelocity: 0,\r\n            isSensor: false,\r\n            isStatic: false,\r\n            isSleeping: false,\r\n            motion: 0,\r\n            sleepThreshold: 60,\r\n            density: 0.001,\r\n            restitution: 0,\r\n            friction: 0.1,\r\n            frictionStatic: 0.5,\r\n            frictionAir: 0.01,\r\n            collisionFilter: {\r\n                category: 0x0001,\r\n                mask: 0xFFFFFFFF,\r\n                group: 0\r\n            },\r\n            slop: 0.05,\r\n            timeScale: 1,\r\n            render: {\r\n                visible: true,\r\n                opacity: 1,\r\n                strokeStyle: null,\r\n                fillStyle: null,\r\n                lineWidth: null,\r\n                sprite: {\r\n                    xScale: 1,\r\n                    yScale: 1,\r\n                    xOffset: 0,\r\n                    yOffset: 0\r\n                }\r\n            },\r\n            events: null,\r\n            bounds: null,\r\n            chamfer: null,\r\n            circleRadius: 0,\r\n            positionPrev: null,\r\n            anglePrev: 0,\r\n            parent: null,\r\n            axes: null,\r\n            area: 0,\r\n            mass: 0,\r\n            inertia: 0,\r\n            _original: null\r\n        };\r\n\r\n        var body = Common.extend(defaults, options);\r\n\r\n        _initProperties(body, options);\r\n\r\n        return body;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique group index for which bodies will collide.\r\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\r\n     * See `body.collisionFilter` for more information.\r\n     * @method nextGroup\r\n     * @param {bool} [isNonColliding=false]\r\n     * @return {Number} Unique group index\r\n     */\r\n    Body.nextGroup = function(isNonColliding) {\r\n        if (isNonColliding)\r\n            return Body._nextNonCollidingGroupId--;\r\n\r\n        return Body._nextCollidingGroupId++;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\r\n     * There are 32 available. See `body.collisionFilter` for more information.\r\n     * @method nextCategory\r\n     * @return {Number} Unique category bitfield\r\n     */\r\n    Body.nextCategory = function() {\r\n        Body._nextCategory = Body._nextCategory << 1;\r\n        return Body._nextCategory;\r\n    };\r\n\r\n    /**\r\n     * Initialises body properties.\r\n     * @method _initProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @param {} [options]\r\n     */\r\n    var _initProperties = function(body, options) {\r\n        options = options || {};\r\n\r\n        // init required properties (order is important)\r\n        Body.set(body, {\r\n            bounds: body.bounds || Bounds.create(body.vertices),\r\n            positionPrev: body.positionPrev || Vector.clone(body.position),\r\n            anglePrev: body.anglePrev || body.angle,\r\n            vertices: body.vertices,\r\n            parts: body.parts || [body],\r\n            isStatic: body.isStatic,\r\n            isSleeping: body.isSleeping,\r\n            parent: body.parent || body\r\n        });\r\n\r\n        Vertices.rotate(body.vertices, body.angle, body.position);\r\n        Axes.rotate(body.axes, body.angle);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n\r\n        // allow options to override the automatically calculated properties\r\n        Body.set(body, {\r\n            axes: options.axes || body.axes,\r\n            area: options.area || body.area,\r\n            mass: options.mass || body.mass,\r\n            inertia: options.inertia || body.inertia\r\n        });\r\n\r\n        // render properties\r\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\r\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\r\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\r\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\r\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\r\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\r\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\r\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\r\n    };\r\n\r\n    /**\r\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\r\n     * Prefer to use the actual setter functions in performance critical situations.\r\n     * @method set\r\n     * @param {body} body\r\n     * @param {} settings A property name (or map of properties and values) to set on the body.\r\n     * @param {} value The value to set if `settings` is a single property name.\r\n     */\r\n    Body.set = function(body, settings, value) {\r\n        var property;\r\n\r\n        if (typeof settings === 'string') {\r\n            property = settings;\r\n            settings = {};\r\n            settings[property] = value;\r\n        }\r\n\r\n        for (property in settings) {\r\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\r\n                continue;\r\n\r\n            value = settings[property];\r\n            switch (property) {\r\n\r\n            case 'isStatic':\r\n                Body.setStatic(body, value);\r\n                break;\r\n            case 'isSleeping':\r\n                Sleeping.set(body, value);\r\n                break;\r\n            case 'mass':\r\n                Body.setMass(body, value);\r\n                break;\r\n            case 'density':\r\n                Body.setDensity(body, value);\r\n                break;\r\n            case 'inertia':\r\n                Body.setInertia(body, value);\r\n                break;\r\n            case 'vertices':\r\n                Body.setVertices(body, value);\r\n                break;\r\n            case 'position':\r\n                Body.setPosition(body, value);\r\n                break;\r\n            case 'angle':\r\n                Body.setAngle(body, value);\r\n                break;\r\n            case 'velocity':\r\n                Body.setVelocity(body, value);\r\n                break;\r\n            case 'angularVelocity':\r\n                Body.setAngularVelocity(body, value);\r\n                break;\r\n            case 'parts':\r\n                Body.setParts(body, value);\r\n                break;\r\n            case 'centre':\r\n                Body.setCentre(body, value);\r\n                break;\r\n            default:\r\n                body[property] = value;\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\r\n     * @method setStatic\r\n     * @param {body} body\r\n     * @param {bool} isStatic\r\n     */\r\n    Body.setStatic = function(body, isStatic) {\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.isStatic = isStatic;\r\n\r\n            if (isStatic) {\r\n                part._original = {\r\n                    restitution: part.restitution,\r\n                    friction: part.friction,\r\n                    mass: part.mass,\r\n                    inertia: part.inertia,\r\n                    density: part.density,\r\n                    inverseMass: part.inverseMass,\r\n                    inverseInertia: part.inverseInertia\r\n                };\r\n\r\n                part.restitution = 0;\r\n                part.friction = 1;\r\n                part.mass = part.inertia = part.density = Infinity;\r\n                part.inverseMass = part.inverseInertia = 0;\r\n\r\n                part.positionPrev.x = part.position.x;\r\n                part.positionPrev.y = part.position.y;\r\n                part.anglePrev = part.angle;\r\n                part.angularVelocity = 0;\r\n                part.speed = 0;\r\n                part.angularSpeed = 0;\r\n                part.motion = 0;\r\n            } else if (part._original) {\r\n                part.restitution = part._original.restitution;\r\n                part.friction = part._original.friction;\r\n                part.mass = part._original.mass;\r\n                part.inertia = part._original.inertia;\r\n                part.density = part._original.density;\r\n                part.inverseMass = part._original.inverseMass;\r\n                part.inverseInertia = part._original.inverseInertia;\r\n\r\n                part._original = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\r\n     * @method setMass\r\n     * @param {body} body\r\n     * @param {number} mass\r\n     */\r\n    Body.setMass = function(body, mass) {\r\n        var moment = body.inertia / (body.mass / 6);\r\n        body.inertia = moment * (mass / 6);\r\n        body.inverseInertia = 1 / body.inertia;\r\n\r\n        body.mass = mass;\r\n        body.inverseMass = 1 / body.mass;\r\n        body.density = body.mass / body.area;\r\n    };\r\n\r\n    /**\r\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\r\n     * @method setDensity\r\n     * @param {body} body\r\n     * @param {number} density\r\n     */\r\n    Body.setDensity = function(body, density) {\r\n        Body.setMass(body, density * body.area);\r\n        body.density = density;\r\n    };\r\n\r\n    /**\r\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \r\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\r\n     * @method setInertia\r\n     * @param {body} body\r\n     * @param {number} inertia\r\n     */\r\n    Body.setInertia = function(body, inertia) {\r\n        body.inertia = inertia;\r\n        body.inverseInertia = 1 / body.inertia;\r\n    };\r\n\r\n    /**\r\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\r\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\r\n     * They are then automatically translated to world space based on `body.position`.\r\n     *\r\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\r\n     * Vertices must form a convex hull, concave hulls are not supported.\r\n     *\r\n     * @method setVertices\r\n     * @param {body} body\r\n     * @param {vector[]} vertices\r\n     */\r\n    Body.setVertices = function(body, vertices) {\r\n        // change vertices\r\n        if (vertices[0].body === body) {\r\n            body.vertices = vertices;\r\n        } else {\r\n            body.vertices = Vertices.create(vertices, body);\r\n        }\r\n\r\n        // update properties\r\n        body.axes = Axes.fromVertices(body.vertices);\r\n        body.area = Vertices.area(body.vertices);\r\n        Body.setMass(body, body.density * body.area);\r\n\r\n        // orient vertices around the centre of mass at origin (0, 0)\r\n        var centre = Vertices.centre(body.vertices);\r\n        Vertices.translate(body.vertices, centre, -1);\r\n\r\n        // update inertia while vertices are at origin (0, 0)\r\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\r\n\r\n        // update geometry\r\n        Vertices.translate(body.vertices, body.position);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\r\n     * Each part will have its parent set to `body`.\r\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\r\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\r\n     * @method setParts\r\n     * @param {body} body\r\n     * @param [body] parts\r\n     * @param {bool} [autoHull=true]\r\n     */\r\n    Body.setParts = function(body, parts, autoHull) {\r\n        var i;\r\n\r\n        // add all the parts, ensuring that the first part is always the parent body\r\n        parts = parts.slice(0);\r\n        body.parts.length = 0;\r\n        body.parts.push(body);\r\n        body.parent = body;\r\n\r\n        for (i = 0; i < parts.length; i++) {\r\n            var part = parts[i];\r\n            if (part !== body) {\r\n                part.parent = body;\r\n                body.parts.push(part);\r\n            }\r\n        }\r\n\r\n        if (body.parts.length === 1)\r\n            return;\r\n\r\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\r\n\r\n        // find the convex hull of all parts to set on the parent body\r\n        if (autoHull) {\r\n            var vertices = [];\r\n            for (i = 0; i < parts.length; i++) {\r\n                vertices = vertices.concat(parts[i].vertices);\r\n            }\r\n\r\n            Vertices.clockwiseSort(vertices);\r\n\r\n            var hull = Vertices.hull(vertices),\r\n                hullCentre = Vertices.centre(hull);\r\n\r\n            Body.setVertices(body, hull);\r\n            Vertices.translate(body.vertices, hullCentre);\r\n        }\r\n\r\n        // sum the properties of all compound parts of the parent body\r\n        var total = Body._totalProperties(body);\r\n\r\n        body.area = total.area;\r\n        body.parent = body;\r\n        body.position.x = total.centre.x;\r\n        body.position.y = total.centre.y;\r\n        body.positionPrev.x = total.centre.x;\r\n        body.positionPrev.y = total.centre.y;\r\n\r\n        Body.setMass(body, total.mass);\r\n        Body.setInertia(body, total.inertia);\r\n        Body.setPosition(body, total.centre);\r\n    };\r\n\r\n    /**\r\n     * Set the centre of mass of the body. \r\n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\r\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\r\n     * This is equal to moving `body.position` but not the `body.vertices`.\r\n     * Invalid if the `centre` falls outside the body's convex hull.\r\n     * @method setCentre\r\n     * @param {body} body\r\n     * @param {vector} centre\r\n     * @param {bool} relative\r\n     */\r\n    Body.setCentre = function(body, centre, relative) {\r\n        if (!relative) {\r\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\r\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\r\n            body.position.x = centre.x;\r\n            body.position.y = centre.y;\r\n        } else {\r\n            body.positionPrev.x += centre.x;\r\n            body.positionPrev.y += centre.y;\r\n            body.position.x += centre.x;\r\n            body.position.y += centre.y;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\r\n     * @method setPosition\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     */\r\n    Body.setPosition = function(body, position) {\r\n        var delta = Vector.sub(position, body.position);\r\n        body.positionPrev.x += delta.x;\r\n        body.positionPrev.y += delta.y;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.position.x += delta.x;\r\n            part.position.y += delta.y;\r\n            Vertices.translate(part.vertices, delta);\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\r\n     * @method setAngle\r\n     * @param {body} body\r\n     * @param {number} angle\r\n     */\r\n    Body.setAngle = function(body, angle) {\r\n        var delta = angle - body.angle;\r\n        body.anglePrev += delta;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.angle += delta;\r\n            Vertices.rotate(part.vertices, delta, body.position);\r\n            Axes.rotate(part.axes, delta);\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n            if (i > 0) {\r\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setVelocity\r\n     * @param {body} body\r\n     * @param {vector} velocity\r\n     */\r\n    Body.setVelocity = function(body, velocity) {\r\n        body.positionPrev.x = body.position.x - velocity.x;\r\n        body.positionPrev.y = body.position.y - velocity.y;\r\n        body.velocity.x = velocity.x;\r\n        body.velocity.y = velocity.y;\r\n        body.speed = Vector.magnitude(body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setAngularVelocity\r\n     * @param {body} body\r\n     * @param {number} velocity\r\n     */\r\n    Body.setAngularVelocity = function(body, velocity) {\r\n        body.anglePrev = body.angle - velocity;\r\n        body.angularVelocity = velocity;\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n    };\r\n\r\n    /**\r\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\r\n     * @method translate\r\n     * @param {body} body\r\n     * @param {vector} translation\r\n     */\r\n    Body.translate = function(body, translation) {\r\n        Body.setPosition(body, Vector.add(body.position, translation));\r\n    };\r\n\r\n    /**\r\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\r\n     * @method rotate\r\n     * @param {body} body\r\n     * @param {number} rotation\r\n     * @param {vector} [point]\r\n     */\r\n    Body.rotate = function(body, rotation, point) {\r\n        if (!point) {\r\n            Body.setAngle(body, body.angle + rotation);\r\n        } else {\r\n            var cos = Math.cos(rotation),\r\n                sin = Math.sin(rotation),\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + (dx * cos - dy * sin),\r\n                y: point.y + (dx * sin + dy * cos)\r\n            });\r\n\r\n            Body.setAngle(body, body.angle + rotation);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\r\n     * @method scale\r\n     * @param {body} body\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} [point]\r\n     */\r\n    Body.scale = function(body, scaleX, scaleY, point) {\r\n        var totalArea = 0,\r\n            totalInertia = 0;\r\n\r\n        point = point || body.position;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n\r\n            // scale vertices\r\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\r\n\r\n            // update properties\r\n            part.axes = Axes.fromVertices(part.vertices);\r\n            part.area = Vertices.area(part.vertices);\r\n            Body.setMass(part, body.density * part.area);\r\n\r\n            // update inertia (requires vertices to be at origin)\r\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\r\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\r\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\r\n\r\n            if (i > 0) {\r\n                totalArea += part.area;\r\n                totalInertia += part.inertia;\r\n            }\r\n\r\n            // scale position\r\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\r\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\r\n\r\n            // update bounds\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n\r\n        // handle parent body\r\n        if (body.parts.length > 1) {\r\n            body.area = totalArea;\r\n\r\n            if (!body.isStatic) {\r\n                Body.setMass(body, body.density * totalArea);\r\n                Body.setInertia(body, totalInertia);\r\n            }\r\n        }\r\n\r\n        // handle circles\r\n        if (body.circleRadius) { \r\n            if (scaleX === scaleY) {\r\n                body.circleRadius *= scaleX;\r\n            } else {\r\n                // body is no longer a circle\r\n                body.circleRadius = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\r\n     * @method update\r\n     * @param {body} body\r\n     * @param {number} deltaTime\r\n     * @param {number} timeScale\r\n     * @param {number} correction\r\n     */\r\n    Body.update = function(body, deltaTime, timeScale, correction) {\r\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\r\n\r\n        // from the previous step\r\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\r\n            velocityPrevX = body.position.x - body.positionPrev.x,\r\n            velocityPrevY = body.position.y - body.positionPrev.y;\r\n\r\n        // update velocity with Verlet integration\r\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\r\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\r\n\r\n        body.positionPrev.x = body.position.x;\r\n        body.positionPrev.y = body.position.y;\r\n        body.position.x += body.velocity.x;\r\n        body.position.y += body.velocity.y;\r\n\r\n        // update angular velocity with Verlet integration\r\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\r\n        body.anglePrev = body.angle;\r\n        body.angle += body.angularVelocity;\r\n\r\n        // track speed and acceleration\r\n        body.speed = Vector.magnitude(body.velocity);\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n\r\n        // transform the body geometry\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n\r\n            Vertices.translate(part.vertices, body.velocity);\r\n            \r\n            if (i > 0) {\r\n                part.position.x += body.velocity.x;\r\n                part.position.y += body.velocity.y;\r\n            }\r\n\r\n            if (body.angularVelocity !== 0) {\r\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\r\n                Axes.rotate(part.axes, body.angularVelocity);\r\n                if (i > 0) {\r\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\r\n                }\r\n            }\r\n\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies a force to a body from a given world-space position, including resulting torque.\r\n     * @method applyForce\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     * @param {vector} force\r\n     */\r\n    Body.applyForce = function(body, position, force) {\r\n        body.force.x += force.x;\r\n        body.force.y += force.y;\r\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\r\n        body.torque += offset.x * force.y - offset.y * force.x;\r\n    };\r\n\r\n    /**\r\n     * Returns the sums of the properties of all compound parts of the parent body.\r\n     * @method _totalProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @return {}\r\n     */\r\n    Body._totalProperties = function(body) {\r\n        // from equations at:\r\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\r\n        // http://output.to/sideway/default.asp?qno=121100087\r\n\r\n        var properties = {\r\n            mass: 0,\r\n            area: 0,\r\n            inertia: 0,\r\n            centre: { x: 0, y: 0 }\r\n        };\r\n\r\n        // sum the properties of all compound parts of the parent body\r\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\r\n            var part = body.parts[i],\r\n                mass = part.mass !== Infinity ? part.mass : 1;\r\n\r\n            properties.mass += mass;\r\n            properties.area += part.area;\r\n            properties.inertia += part.inertia;\r\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\r\n        }\r\n\r\n        properties.centre = Vector.div(properties.centre, properties.mass);\r\n\r\n        return properties;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when a body starts sleeping (where `this` is the body).\r\n    *\r\n    * @event sleepStart\r\n    * @this {body} The body that has started sleeping\r\n    * @param {} event An event object\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a body ends sleeping (where `this` is the body).\r\n    *\r\n    * @event sleepEnd\r\n    * @this {body} The body that has ended sleeping\r\n    * @param {} event An event object\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"body\"\r\n     * @readOnly\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage bodies.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Body\"\r\n     */\r\n\r\n    /**\r\n     * An array of bodies that make up this body. \r\n     * The first body in the array must always be a self reference to the current body instance.\r\n     * All bodies in the `parts` array together form a single rigid compound body.\r\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\r\n     * Parts themselves should never be added to a `World`, only the parent body should be.\r\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\r\n     *\r\n     * @property parts\r\n     * @type body[]\r\n     */\r\n\r\n    /**\r\n     * An object reserved for storing plugin-specific properties.\r\n     *\r\n     * @property plugin\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * A self reference if the body is _not_ a part of another body.\r\n     * Otherwise this is a reference to the body that this is a part of.\r\n     * See `body.parts`.\r\n     *\r\n     * @property parent\r\n     * @type body\r\n     */\r\n\r\n    /**\r\n     * A `Number` specifying the angle of the body, in radians.\r\n     *\r\n     * @property angle\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\r\n     * These should be provided about the origin `(0, 0)`. E.g.\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\r\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \r\n     *\r\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\r\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\r\n     *\r\n     * @property vertices\r\n     * @type vector[]\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the current world-space position of the body.\r\n     *\r\n     * @property position\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\r\n     *\r\n     * @property force\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\r\n     *\r\n     * @property torque\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\r\n     *\r\n     * @readOnly\r\n     * @property speed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\r\n     *\r\n     * @readOnly\r\n     * @property angularSpeed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property velocity\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property angularVelocity\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\r\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\r\n     *\r\n     * @property isStatic\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\r\n     *\r\n     * @property isSensor\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\r\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\r\n     *\r\n     * @property isSleeping\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\r\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\r\n     *\r\n     * @readOnly\r\n     * @property motion\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\r\n     *\r\n     * @property sleepThreshold\r\n     * @type number\r\n     * @default 60\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the density of the body, that is its mass per unit area.\r\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\r\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\r\n     *\r\n     * @property density\r\n     * @type number\r\n     * @default 0.001\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\r\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\r\n     *\r\n     * @property mass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\r\n     * If you modify this value, you must also modify the `body.mass` property.\r\n     *\r\n     * @property inverseMass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\r\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\r\n     *\r\n     * @property inertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\r\n     * If you modify this value, you must also modify the `body.inertia` property.\r\n     *\r\n     * @property inverseInertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \r\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.max(bodyA.restitution, bodyB.restitution)\r\n     *\r\n     * @property restitution\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means that the body may slide indefinitely.\r\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\r\n     *\r\n     * The effects of the value may be non-linear. \r\n     * High values may be unstable depending on the body.\r\n     * The engine uses a Coulomb friction model including static and kinetic friction.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.min(bodyA.friction, bodyB.friction)\r\n     *\r\n     * @property friction\r\n     * @type number\r\n     * @default 0.1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \r\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\r\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\r\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\r\n     *\r\n     * @property frictionStatic\r\n     * @type number\r\n     * @default 0.5\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the air friction of the body (air resistance). \r\n     * A value of `0` means the body will never slow as it moves through space.\r\n     * The higher the value, the faster a body slows when moving through space.\r\n     * The effects of the value are non-linear. \r\n     *\r\n     * @property frictionAir\r\n     * @type number\r\n     * @default 0.01\r\n     */\r\n\r\n    /**\r\n     * An `Object` that specifies the collision filtering properties of this body.\r\n     *\r\n     * Collisions between two bodies will obey the following rules:\r\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\r\n     *   they will always collide if the value is positive, and they will never collide\r\n     *   if the value is negative.\r\n     * - If the two bodies have different values of `collisionFilter.group` or if one\r\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\r\n     *\r\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\r\n     * value is used as a bit field and the category should have only one bit set, meaning that\r\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\r\n     * different collision categories available.\r\n     *\r\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\r\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\r\n     *\r\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\r\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\r\n     * are both true.\r\n     *\r\n     * @property collisionFilter\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An Integer `Number`, that specifies the collision group this body belongs to.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.group\r\n     * @type object\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A bit field that specifies the collision category this body belongs to.\r\n     * The category value should have only one bit set, for example `0x0001`.\r\n     * This means there are up to 32 unique collision categories available.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.category\r\n     * @type object\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A bit mask that specifies the collision categories this body may collide with.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.mask\r\n     * @type object\r\n     * @default -1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\r\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\r\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\r\n     *\r\n     * @property slop\r\n     * @type number\r\n     * @default 0.05\r\n     */\r\n\r\n    /**\r\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\r\n     *\r\n     * @property timeScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\r\n     *\r\n     * @property render\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates if the body should be rendered.\r\n     *\r\n     * @property render.visible\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * Sets the opacity to use when rendering.\r\n     *\r\n     * @property render.opacity\r\n     * @type number\r\n     * @default 1\r\n    */\r\n\r\n    /**\r\n     * An `Object` that defines the sprite properties to use when rendering, if any.\r\n     *\r\n     * @property render.sprite\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\r\n     *\r\n     * @property render.sprite.texture\r\n     * @type string\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.xScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.yScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\r\n      *\r\n      * @property render.sprite.xOffset\r\n      * @type number\r\n      * @default 0\r\n      */\r\n\r\n    /**\r\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\r\n      *\r\n      * @property render.sprite.yOffset\r\n      * @type number\r\n      * @default 0\r\n      */\r\n\r\n    /**\r\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\r\n     * A value of `0` means no outline will be rendered.\r\n     *\r\n     * @property render.lineWidth\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.fillStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.strokeStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * An array of unique axis vectors (edge normals) used for collision detection.\r\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\r\n     * They are constantly updated by `Body.update` during the simulation.\r\n     *\r\n     * @property axes\r\n     * @type vector[]\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\r\n     *\r\n     * @property area\r\n     * @type string\r\n     * @default \r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that defines the AABB region for the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 7 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\r\n*\r\n* @class Sleeping\r\n*/\r\n\r\nvar Sleeping = {};\r\n\r\nmodule.exports = Sleeping;\r\n\r\nvar Events = __webpack_require__(4);\r\n\r\n(function() {\r\n\r\n    Sleeping._motionWakeThreshold = 0.18;\r\n    Sleeping._motionSleepThreshold = 0.08;\r\n    Sleeping._minBias = 0.9;\r\n\r\n    /**\r\n     * Puts bodies to sleep or wakes them up depending on their motion.\r\n     * @method update\r\n     * @param {body[]} bodies\r\n     * @param {number} timeScale\r\n     */\r\n    Sleeping.update = function(bodies, timeScale) {\r\n        var timeFactor = timeScale * timeScale * timeScale;\r\n\r\n        // update bodies sleeping status\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\r\n\r\n            // wake up bodies if they have a force applied\r\n            if (body.force.x !== 0 || body.force.y !== 0) {\r\n                Sleeping.set(body, false);\r\n                continue;\r\n            }\r\n\r\n            var minMotion = Math.min(body.motion, motion),\r\n                maxMotion = Math.max(body.motion, motion);\r\n        \r\n            // biased average motion estimation between frames\r\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\r\n            \r\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\r\n                body.sleepCounter += 1;\r\n                \r\n                if (body.sleepCounter >= body.sleepThreshold)\r\n                    Sleeping.set(body, true);\r\n            } else if (body.sleepCounter > 0) {\r\n                body.sleepCounter -= 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\r\n     * @method afterCollisions\r\n     * @param {pair[]} pairs\r\n     * @param {number} timeScale\r\n     */\r\n    Sleeping.afterCollisions = function(pairs, timeScale) {\r\n        var timeFactor = timeScale * timeScale * timeScale;\r\n\r\n        // wake up bodies involved in collisions\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var pair = pairs[i];\r\n            \r\n            // don't wake inactive pairs\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            var collision = pair.collision,\r\n                bodyA = collision.bodyA.parent, \r\n                bodyB = collision.bodyB.parent;\r\n        \r\n            // don't wake if at least one body is static\r\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\r\n                continue;\r\n        \r\n            if (bodyA.isSleeping || bodyB.isSleeping) {\r\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\r\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\r\n\r\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\r\n                    Sleeping.set(sleepingBody, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n  \r\n    /**\r\n     * Set a body as sleeping or awake.\r\n     * @method set\r\n     * @param {body} body\r\n     * @param {boolean} isSleeping\r\n     */\r\n    Sleeping.set = function(body, isSleeping) {\r\n        var wasSleeping = body.isSleeping;\r\n\r\n        if (isSleeping) {\r\n            body.isSleeping = true;\r\n            body.sleepCounter = body.sleepThreshold;\r\n\r\n            body.positionImpulse.x = 0;\r\n            body.positionImpulse.y = 0;\r\n\r\n            body.positionPrev.x = body.position.x;\r\n            body.positionPrev.y = body.position.y;\r\n\r\n            body.anglePrev = body.angle;\r\n            body.speed = 0;\r\n            body.angularSpeed = 0;\r\n            body.motion = 0;\r\n\r\n            if (!wasSleeping) {\r\n                Events.trigger(body, 'sleepStart');\r\n            }\r\n        } else {\r\n            body.isSleeping = false;\r\n            body.sleepCounter = 0;\r\n\r\n            if (wasSleeping) {\r\n                Events.trigger(body, 'sleepEnd');\r\n            }\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 8 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\r\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\r\n* The stiffness of constraints can be modified to create springs or elastic.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Constraint\r\n*/\r\n\r\nvar Constraint = {};\r\n\r\nmodule.exports = Constraint;\r\n\r\nvar Vertices = __webpack_require__(3);\r\nvar Vector = __webpack_require__(2);\r\nvar Sleeping = __webpack_require__(7);\r\nvar Bounds = __webpack_require__(1);\r\nvar Axes = __webpack_require__(10);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    Constraint._warming = 0.4;\r\n    Constraint._torqueDampen = 1;\r\n    Constraint._minLength = 0.000001;\r\n\r\n    /**\r\n     * Creates a new constraint.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\r\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\r\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {constraint} constraint\r\n     */\r\n    Constraint.create = function(options) {\r\n        var constraint = options;\r\n\r\n        // if bodies defined but no points, use body centre\r\n        if (constraint.bodyA && !constraint.pointA)\r\n            constraint.pointA = { x: 0, y: 0 };\r\n        if (constraint.bodyB && !constraint.pointB)\r\n            constraint.pointB = { x: 0, y: 0 };\r\n\r\n        // calculate static length using initial world space points\r\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\r\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\r\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\r\n    \r\n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\r\n\r\n        // option defaults\r\n        constraint.id = constraint.id || Common.nextId();\r\n        constraint.label = constraint.label || 'Constraint';\r\n        constraint.type = 'constraint';\r\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\r\n        constraint.damping = constraint.damping || 0;\r\n        constraint.angularStiffness = constraint.angularStiffness || 0;\r\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\r\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\r\n        constraint.plugin = {};\r\n\r\n        // render\r\n        var render = {\r\n            visible: true,\r\n            lineWidth: 2,\r\n            strokeStyle: '#ffffff',\r\n            type: 'line',\r\n            anchors: true\r\n        };\r\n\r\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\r\n            render.type = 'pin';\r\n            render.anchors = false;\r\n        } else if (constraint.stiffness < 0.9) {\r\n            render.type = 'spring';\r\n        }\r\n\r\n        constraint.render = Common.extend(render, constraint.render);\r\n\r\n        return constraint;\r\n    };\r\n\r\n    /**\r\n     * Prepares for solving by constraint warming.\r\n     * @private\r\n     * @method preSolveAll\r\n     * @param {body[]} bodies\r\n     */\r\n    Constraint.preSolveAll = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i += 1) {\r\n            var body = bodies[i],\r\n                impulse = body.constraintImpulse;\r\n\r\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\r\n                continue;\r\n            }\r\n\r\n            body.position.x += impulse.x;\r\n            body.position.y += impulse.y;\r\n            body.angle += impulse.angle;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Solves all constraints in a list of collisions.\r\n     * @private\r\n     * @method solveAll\r\n     * @param {constraint[]} constraints\r\n     * @param {number} timeScale\r\n     */\r\n    Constraint.solveAll = function(constraints, timeScale) {\r\n        // Solve fixed constraints first.\r\n        for (var i = 0; i < constraints.length; i += 1) {\r\n            var constraint = constraints[i],\r\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\r\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\r\n\r\n            if (fixedA || fixedB) {\r\n                Constraint.solve(constraints[i], timeScale);\r\n            }\r\n        }\r\n\r\n        // Solve free constraints last.\r\n        for (i = 0; i < constraints.length; i += 1) {\r\n            constraint = constraints[i];\r\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\r\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\r\n\r\n            if (!fixedA && !fixedB) {\r\n                Constraint.solve(constraints[i], timeScale);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Solves a distance constraint with Gauss-Siedel method.\r\n     * @private\r\n     * @method solve\r\n     * @param {constraint} constraint\r\n     * @param {number} timeScale\r\n     */\r\n    Constraint.solve = function(constraint, timeScale) {\r\n        var bodyA = constraint.bodyA,\r\n            bodyB = constraint.bodyB,\r\n            pointA = constraint.pointA,\r\n            pointB = constraint.pointB;\r\n\r\n        if (!bodyA && !bodyB)\r\n            return;\r\n\r\n        // update reference angle\r\n        if (bodyA && !bodyA.isStatic) {\r\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\r\n            constraint.angleA = bodyA.angle;\r\n        }\r\n        \r\n        // update reference angle\r\n        if (bodyB && !bodyB.isStatic) {\r\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\r\n            constraint.angleB = bodyB.angle;\r\n        }\r\n\r\n        var pointAWorld = pointA,\r\n            pointBWorld = pointB;\r\n\r\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\r\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\r\n\r\n        if (!pointAWorld || !pointBWorld)\r\n            return;\r\n\r\n        var delta = Vector.sub(pointAWorld, pointBWorld),\r\n            currentLength = Vector.magnitude(delta);\r\n\r\n        // prevent singularity\r\n        if (currentLength < Constraint._minLength) {\r\n            currentLength = Constraint._minLength;\r\n        }\r\n\r\n        // solve distance constraint with Gauss-Siedel method\r\n        var difference = (currentLength - constraint.length) / currentLength,\r\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\r\n            force = Vector.mult(delta, difference * stiffness),\r\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\r\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\r\n            resistanceTotal = massTotal + inertiaTotal,\r\n            torque,\r\n            share,\r\n            normal,\r\n            normalVelocity,\r\n            relativeVelocity;\r\n\r\n        if (constraint.damping) {\r\n            var zero = Vector.create();\r\n            normal = Vector.div(delta, currentLength);\r\n\r\n            relativeVelocity = Vector.sub(\r\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\r\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\r\n            );\r\n\r\n            normalVelocity = Vector.dot(normal, relativeVelocity);\r\n        }\r\n\r\n        if (bodyA && !bodyA.isStatic) {\r\n            share = bodyA.inverseMass / massTotal;\r\n\r\n            // keep track of applied impulses for post solving\r\n            bodyA.constraintImpulse.x -= force.x * share;\r\n            bodyA.constraintImpulse.y -= force.y * share;\r\n\r\n            // apply forces\r\n            bodyA.position.x -= force.x * share;\r\n            bodyA.position.y -= force.y * share;\r\n\r\n            // apply damping\r\n            if (constraint.damping) {\r\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\r\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\r\n            }\r\n\r\n            // apply torque\r\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\r\n            bodyA.constraintImpulse.angle -= torque;\r\n            bodyA.angle -= torque;\r\n        }\r\n\r\n        if (bodyB && !bodyB.isStatic) {\r\n            share = bodyB.inverseMass / massTotal;\r\n\r\n            // keep track of applied impulses for post solving\r\n            bodyB.constraintImpulse.x += force.x * share;\r\n            bodyB.constraintImpulse.y += force.y * share;\r\n            \r\n            // apply forces\r\n            bodyB.position.x += force.x * share;\r\n            bodyB.position.y += force.y * share;\r\n\r\n            // apply damping\r\n            if (constraint.damping) {\r\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\r\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\r\n            }\r\n\r\n            // apply torque\r\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\r\n            bodyB.constraintImpulse.angle += torque;\r\n            bodyB.angle += torque;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Performs body updates required after solving constraints.\r\n     * @private\r\n     * @method postSolveAll\r\n     * @param {body[]} bodies\r\n     */\r\n    Constraint.postSolveAll = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                impulse = body.constraintImpulse;\r\n\r\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\r\n                continue;\r\n            }\r\n\r\n            Sleeping.set(body, false);\r\n\r\n            // update geometry and reset\r\n            for (var j = 0; j < body.parts.length; j++) {\r\n                var part = body.parts[j];\r\n                \r\n                Vertices.translate(part.vertices, impulse);\r\n\r\n                if (j > 0) {\r\n                    part.position.x += impulse.x;\r\n                    part.position.y += impulse.y;\r\n                }\r\n\r\n                if (impulse.angle !== 0) {\r\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\r\n                    Axes.rotate(part.axes, impulse.angle);\r\n                    if (j > 0) {\r\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\r\n                    }\r\n                }\r\n\r\n                Bounds.update(part.bounds, part.vertices, body.velocity);\r\n            }\r\n\r\n            // dampen the cached impulse for warming next step\r\n            impulse.angle *= Constraint._warming;\r\n            impulse.x *= Constraint._warming;\r\n            impulse.y *= Constraint._warming;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\r\n     * @method pointAWorld\r\n     * @param {constraint} constraint\r\n     * @returns {vector} the world-space position\r\n     */\r\n    Constraint.pointAWorld = function(constraint) {\r\n        return {\r\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\r\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\r\n     * @method pointBWorld\r\n     * @param {constraint} constraint\r\n     * @returns {vector} the world-space position\r\n     */\r\n    Constraint.pointBWorld = function(constraint) {\r\n        return {\r\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\r\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\r\n        };\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"constraint\"\r\n     * @readOnly\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage bodies.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Constraint\"\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\r\n     *\r\n     * @property render\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates if the constraint should be rendered.\r\n     *\r\n     * @property render.visible\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the line width to use when rendering the constraint outline.\r\n     * A value of `0` means no outline will be rendered.\r\n     *\r\n     * @property render.lineWidth\r\n     * @type number\r\n     * @default 2\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.strokeStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the constraint rendering type. \r\n     * The possible values are 'line', 'pin', 'spring'.\r\n     * An appropriate render type will be automatically chosen unless one is given in options.\r\n     *\r\n     * @property render.type\r\n     * @type string\r\n     * @default 'line'\r\n     */\r\n\r\n    /**\r\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\r\n     *\r\n     * @property render.anchors\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * The first possible `Body` that this constraint is attached to.\r\n     *\r\n     * @property bodyA\r\n     * @type body\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The second possible `Body` that this constraint is attached to.\r\n     *\r\n     * @property bodyB\r\n     * @type body\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\r\n     *\r\n     * @property pointA\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\r\n     *\r\n     * @property pointB\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\r\n     * A value of `1` means the constraint should be very stiff.\r\n     * A value of `0.2` means the constraint acts like a soft spring.\r\n     *\r\n     * @property stiffness\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the damping of the constraint, \r\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\r\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\r\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\r\n     * A value of `0` means the constraint will apply no damping.\r\n     *\r\n     * @property damping\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the target resting length of the constraint. \r\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\r\n     *\r\n     * @property length\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * An object reserved for storing plugin-specific properties.\r\n     *\r\n     * @property plugin\r\n     * @type {}\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 9 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\r\n*\r\n* @class Pair\r\n*/\r\n\r\nvar Pair = {};\r\n\r\nmodule.exports = Pair;\r\n\r\nvar Contact = __webpack_require__(17);\r\n\r\n(function() {\r\n    \r\n    /**\r\n     * Creates a pair.\r\n     * @method create\r\n     * @param {collision} collision\r\n     * @param {number} timestamp\r\n     * @return {pair} A new pair\r\n     */\r\n    Pair.create = function(collision, timestamp) {\r\n        var bodyA = collision.bodyA,\r\n            bodyB = collision.bodyB,\r\n            parentA = collision.parentA,\r\n            parentB = collision.parentB;\r\n\r\n        var pair = {\r\n            id: Pair.id(bodyA, bodyB),\r\n            bodyA: bodyA,\r\n            bodyB: bodyB,\r\n            contacts: {},\r\n            activeContacts: [],\r\n            separation: 0,\r\n            isActive: true,\r\n            confirmedActive: true,\r\n            isSensor: bodyA.isSensor || bodyB.isSensor,\r\n            timeCreated: timestamp,\r\n            timeUpdated: timestamp,\r\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\r\n            friction: Math.min(parentA.friction, parentB.friction),\r\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\r\n            restitution: Math.max(parentA.restitution, parentB.restitution),\r\n            slop: Math.max(parentA.slop, parentB.slop)\r\n        };\r\n\r\n        Pair.update(pair, collision, timestamp);\r\n\r\n        return pair;\r\n    };\r\n\r\n    /**\r\n     * Updates a pair given a collision.\r\n     * @method update\r\n     * @param {pair} pair\r\n     * @param {collision} collision\r\n     * @param {number} timestamp\r\n     */\r\n    Pair.update = function(pair, collision, timestamp) {\r\n        var contacts = pair.contacts,\r\n            supports = collision.supports,\r\n            activeContacts = pair.activeContacts,\r\n            parentA = collision.parentA,\r\n            parentB = collision.parentB;\r\n        \r\n        pair.collision = collision;\r\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\r\n        pair.friction = Math.min(parentA.friction, parentB.friction);\r\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\r\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\r\n        pair.slop = Math.max(parentA.slop, parentB.slop);\r\n        activeContacts.length = 0;\r\n        \r\n        if (collision.collided) {\r\n            for (var i = 0; i < supports.length; i++) {\r\n                var support = supports[i],\r\n                    contactId = Contact.id(support),\r\n                    contact = contacts[contactId];\r\n\r\n                if (contact) {\r\n                    activeContacts.push(contact);\r\n                } else {\r\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\r\n                }\r\n            }\r\n\r\n            pair.separation = collision.depth;\r\n            Pair.setActive(pair, true, timestamp);\r\n        } else {\r\n            if (pair.isActive === true)\r\n                Pair.setActive(pair, false, timestamp);\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Set a pair as active or inactive.\r\n     * @method setActive\r\n     * @param {pair} pair\r\n     * @param {bool} isActive\r\n     * @param {number} timestamp\r\n     */\r\n    Pair.setActive = function(pair, isActive, timestamp) {\r\n        if (isActive) {\r\n            pair.isActive = true;\r\n            pair.timeUpdated = timestamp;\r\n        } else {\r\n            pair.isActive = false;\r\n            pair.activeContacts.length = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the id for the given pair.\r\n     * @method id\r\n     * @param {body} bodyA\r\n     * @param {body} bodyB\r\n     * @return {string} Unique pairId\r\n     */\r\n    Pair.id = function(bodyA, bodyB) {\r\n        if (bodyA.id < bodyB.id) {\r\n            return 'A' + bodyA.id + 'B' + bodyB.id;\r\n        } else {\r\n            return 'A' + bodyB.id + 'B' + bodyA.id;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 10 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\r\n*\r\n* @class Axes\r\n*/\r\n\r\nvar Axes = {};\r\n\r\nmodule.exports = Axes;\r\n\r\nvar Vector = __webpack_require__(2);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new set of axes from the given vertices.\r\n     * @method fromVertices\r\n     * @param {vertices} vertices\r\n     * @return {axes} A new axes from the given vertices\r\n     */\r\n    Axes.fromVertices = function(vertices) {\r\n        var axes = {};\r\n\r\n        // find the unique axes, using edge normal gradients\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var j = (i + 1) % vertices.length, \r\n                normal = Vector.normalise({ \r\n                    x: vertices[j].y - vertices[i].y, \r\n                    y: vertices[i].x - vertices[j].x\r\n                }),\r\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\r\n            \r\n            // limit precision\r\n            gradient = gradient.toFixed(3).toString();\r\n            axes[gradient] = normal;\r\n        }\r\n\r\n        return Common.values(axes);\r\n    };\r\n\r\n    /**\r\n     * Rotates a set of axes by the given angle.\r\n     * @method rotate\r\n     * @param {axes} axes\r\n     * @param {number} angle\r\n     */\r\n    Axes.rotate = function(axes, angle) {\r\n        if (angle === 0)\r\n            return;\r\n        \r\n        var cos = Math.cos(angle),\r\n            sin = Math.sin(angle);\r\n\r\n        for (var i = 0; i < axes.length; i++) {\r\n            var axis = axes[i],\r\n                xx;\r\n            xx = axis.x * cos - axis.y * sin;\r\n            axis.y = axis.x * sin + axis.y * cos;\r\n            axis.x = xx;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 11 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \r\n* with commonly used body configurations (such as rectangles, circles and other polygons).\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Bodies\r\n*/\r\n\r\n// TODO: true circle bodies\r\n\r\nvar Bodies = {};\r\n\r\nmodule.exports = Bodies;\r\n\r\nvar Vertices = __webpack_require__(3);\r\nvar Common = __webpack_require__(0);\r\nvar Body = __webpack_require__(6);\r\nvar Bounds = __webpack_require__(1);\r\nvar Vector = __webpack_require__(2);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new rigid body model with a rectangle hull. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method rectangle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {object} [options]\r\n     * @return {body} A new rectangle body\r\n     */\r\n    Bodies.rectangle = function(x, y, width, height, options) {\r\n        options = options || {};\r\n\r\n        var rectangle = { \r\n            label: 'Rectangle Body',\r\n            position: { x: x, y: y },\r\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\r\n        };\r\n\r\n        if (options.chamfer) {\r\n            var chamfer = options.chamfer;\r\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \r\n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\r\n            delete options.chamfer;\r\n        }\r\n\r\n        return Body.create(Common.extend({}, rectangle, options));\r\n    };\r\n    \r\n    /**\r\n     * Creates a new rigid body model with a trapezoid hull. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method trapezoid\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {number} slope\r\n     * @param {object} [options]\r\n     * @return {body} A new trapezoid body\r\n     */\r\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\r\n        options = options || {};\r\n\r\n        slope *= 0.5;\r\n        var roof = (1 - (slope * 2)) * width;\r\n        \r\n        var x1 = width * slope,\r\n            x2 = x1 + roof,\r\n            x3 = x2 + x1,\r\n            verticesPath;\r\n\r\n        if (slope < 0.5) {\r\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\r\n        } else {\r\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\r\n        }\r\n\r\n        var trapezoid = { \r\n            label: 'Trapezoid Body',\r\n            position: { x: x, y: y },\r\n            vertices: Vertices.fromPath(verticesPath)\r\n        };\r\n\r\n        if (options.chamfer) {\r\n            var chamfer = options.chamfer;\r\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \r\n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\r\n            delete options.chamfer;\r\n        }\r\n\r\n        return Body.create(Common.extend({}, trapezoid, options));\r\n    };\r\n\r\n    /**\r\n     * Creates a new rigid body model with a circle hull. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method circle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} radius\r\n     * @param {object} [options]\r\n     * @param {number} [maxSides]\r\n     * @return {body} A new circle body\r\n     */\r\n    Bodies.circle = function(x, y, radius, options, maxSides) {\r\n        options = options || {};\r\n\r\n        var circle = {\r\n            label: 'Circle Body',\r\n            circleRadius: radius\r\n        };\r\n        \r\n        // approximate circles with polygons until true circles implemented in SAT\r\n        maxSides = maxSides || 25;\r\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\r\n\r\n        // optimisation: always use even number of sides (half the number of unique axes)\r\n        if (sides % 2 === 1)\r\n            sides += 1;\r\n\r\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\r\n    };\r\n\r\n    /**\r\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method polygon\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} sides\r\n     * @param {number} radius\r\n     * @param {object} [options]\r\n     * @return {body} A new regular polygon body\r\n     */\r\n    Bodies.polygon = function(x, y, sides, radius, options) {\r\n        options = options || {};\r\n\r\n        if (sides < 3)\r\n            return Bodies.circle(x, y, radius, options);\r\n\r\n        var theta = 2 * Math.PI / sides,\r\n            path = '',\r\n            offset = theta * 0.5;\r\n\r\n        for (var i = 0; i < sides; i += 1) {\r\n            var angle = offset + (i * theta),\r\n                xx = Math.cos(angle) * radius,\r\n                yy = Math.sin(angle) * radius;\r\n\r\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\r\n        }\r\n\r\n        var polygon = { \r\n            label: 'Polygon Body',\r\n            position: { x: x, y: y },\r\n            vertices: Vertices.fromPath(path)\r\n        };\r\n\r\n        if (options.chamfer) {\r\n            var chamfer = options.chamfer;\r\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \r\n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\r\n            delete options.chamfer;\r\n        }\r\n\r\n        return Body.create(Common.extend({}, polygon, options));\r\n    };\r\n\r\n    /**\r\n     * Utility to create a compound body based on set(s) of vertices.\r\n     * \r\n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \r\n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\r\n     * \r\n     * The resulting vertices are reorientated about their centre of mass,\r\n     * and offset such that `body.position` corresponds to this point.\r\n     * \r\n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\r\n     * To later move the centre of mass see `Body.setCentre`.\r\n     * \r\n     * Note that automatic conconcave decomposition results are not always optimal. \r\n     * For best results, simplify the input vertices as much as possible first.\r\n     * By default this function applies some addtional simplification to help.\r\n     * \r\n     * Some outputs may also require further manual processing afterwards to be robust.\r\n     * In particular some parts may need to be overlapped to avoid collision gaps.\r\n     * Thin parts and sharp points should be avoided or removed where possible.\r\n     *\r\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\r\n     * \r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method fromVertices\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\r\n     * @param {object} [options] The body options.\r\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\r\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\r\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\r\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\r\n     * @return {body}\r\n     */\r\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\r\n        var decomp = Common.getDecomp(),\r\n            canDecomp,\r\n            body,\r\n            parts,\r\n            isConvex,\r\n            isConcave,\r\n            vertices,\r\n            i,\r\n            j,\r\n            k,\r\n            v,\r\n            z;\r\n\r\n        // check decomp is as expected\r\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\r\n\r\n        options = options || {};\r\n        parts = [];\r\n\r\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\r\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\r\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\r\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\r\n\r\n        // ensure vertexSets is an array of arrays\r\n        if (!Common.isArray(vertexSets[0])) {\r\n            vertexSets = [vertexSets];\r\n        }\r\n\r\n        for (v = 0; v < vertexSets.length; v += 1) {\r\n            vertices = vertexSets[v];\r\n            isConvex = Vertices.isConvex(vertices);\r\n            isConcave = !isConvex;\r\n\r\n            if (isConcave && !canDecomp) {\r\n                Common.warnOnce(\r\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\r\n                );\r\n            }\r\n\r\n            if (isConvex || !canDecomp) {\r\n                if (isConvex) {\r\n                    vertices = Vertices.clockwiseSort(vertices);\r\n                } else {\r\n                    // fallback to convex hull when decomposition is not possible\r\n                    vertices = Vertices.hull(vertices);\r\n                }\r\n\r\n                parts.push({\r\n                    position: { x: x, y: y },\r\n                    vertices: vertices\r\n                });\r\n            } else {\r\n                // initialise a decomposition\r\n                var concave = vertices.map(function(vertex) {\r\n                    return [vertex.x, vertex.y];\r\n                });\r\n\r\n                // vertices are concave and simple, we can decompose into parts\r\n                decomp.makeCCW(concave);\r\n                if (removeCollinear !== false)\r\n                    decomp.removeCollinearPoints(concave, removeCollinear);\r\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\r\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\r\n\r\n                // use the quick decomposition algorithm (Bayazit)\r\n                var decomposed = decomp.quickDecomp(concave);\r\n\r\n                // for each decomposed chunk\r\n                for (i = 0; i < decomposed.length; i++) {\r\n                    var chunk = decomposed[i];\r\n\r\n                    // convert vertices into the correct structure\r\n                    var chunkVertices = chunk.map(function(vertices) {\r\n                        return {\r\n                            x: vertices[0],\r\n                            y: vertices[1]\r\n                        };\r\n                    });\r\n\r\n                    // skip small chunks\r\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\r\n                        continue;\r\n\r\n                    // create a compound part\r\n                    parts.push({\r\n                        position: Vertices.centre(chunkVertices),\r\n                        vertices: chunkVertices\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // create body parts\r\n        for (i = 0; i < parts.length; i++) {\r\n            parts[i] = Body.create(Common.extend(parts[i], options));\r\n        }\r\n\r\n        // flag internal edges (coincident part edges)\r\n        if (flagInternal) {\r\n            var coincident_max_dist = 5;\r\n\r\n            for (i = 0; i < parts.length; i++) {\r\n                var partA = parts[i];\r\n\r\n                for (j = i + 1; j < parts.length; j++) {\r\n                    var partB = parts[j];\r\n\r\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\r\n                        var pav = partA.vertices,\r\n                            pbv = partB.vertices;\r\n\r\n                        // iterate vertices of both parts\r\n                        for (k = 0; k < partA.vertices.length; k++) {\r\n                            for (z = 0; z < partB.vertices.length; z++) {\r\n                                // find distances between the vertices\r\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\r\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\r\n\r\n                                // if both vertices are very close, consider the edge concident (internal)\r\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\r\n                                    pav[k].isInternal = true;\r\n                                    pbv[z].isInternal = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (parts.length > 1) {\r\n            // create the parent body to be returned, that contains generated compound parts\r\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\r\n\r\n            // offset such that body.position is at the centre off mass\r\n            Body.setPosition(body, { x: x, y: y });\r\n\r\n            return body;\r\n        } else {\r\n            return parts[0];\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 12 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\r\n*\r\n* @class Mouse\r\n*/\r\n\r\nvar Mouse = {};\r\n\r\nmodule.exports = Mouse;\r\n\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a mouse input.\r\n     * @method create\r\n     * @param {HTMLElement} element\r\n     * @return {mouse} A new mouse\r\n     */\r\n    Mouse.create = function(element) {\r\n        var mouse = {};\r\n\r\n        if (!element) {\r\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\r\n        }\r\n        \r\n        mouse.element = element || document.body;\r\n        mouse.absolute = { x: 0, y: 0 };\r\n        mouse.position = { x: 0, y: 0 };\r\n        mouse.mousedownPosition = { x: 0, y: 0 };\r\n        mouse.mouseupPosition = { x: 0, y: 0 };\r\n        mouse.offset = { x: 0, y: 0 };\r\n        mouse.scale = { x: 1, y: 1 };\r\n        mouse.wheelDelta = 0;\r\n        mouse.button = -1;\r\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\r\n\r\n        mouse.sourceEvents = {\r\n            mousemove: null,\r\n            mousedown: null,\r\n            mouseup: null,\r\n            mousewheel: null\r\n        };\r\n        \r\n        mouse.mousemove = function(event) { \r\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\r\n                touches = event.changedTouches;\r\n\r\n            if (touches) {\r\n                mouse.button = 0;\r\n                event.preventDefault();\r\n            }\r\n\r\n            mouse.absolute.x = position.x;\r\n            mouse.absolute.y = position.y;\r\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n            mouse.sourceEvents.mousemove = event;\r\n        };\r\n        \r\n        mouse.mousedown = function(event) {\r\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\r\n                touches = event.changedTouches;\r\n\r\n            if (touches) {\r\n                mouse.button = 0;\r\n                event.preventDefault();\r\n            } else {\r\n                mouse.button = event.button;\r\n            }\r\n\r\n            mouse.absolute.x = position.x;\r\n            mouse.absolute.y = position.y;\r\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n            mouse.mousedownPosition.x = mouse.position.x;\r\n            mouse.mousedownPosition.y = mouse.position.y;\r\n            mouse.sourceEvents.mousedown = event;\r\n        };\r\n        \r\n        mouse.mouseup = function(event) {\r\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\r\n                touches = event.changedTouches;\r\n\r\n            if (touches) {\r\n                event.preventDefault();\r\n            }\r\n            \r\n            mouse.button = -1;\r\n            mouse.absolute.x = position.x;\r\n            mouse.absolute.y = position.y;\r\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n            mouse.mouseupPosition.x = mouse.position.x;\r\n            mouse.mouseupPosition.y = mouse.position.y;\r\n            mouse.sourceEvents.mouseup = event;\r\n        };\r\n\r\n        mouse.mousewheel = function(event) {\r\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\r\n            event.preventDefault();\r\n        };\r\n\r\n        Mouse.setElement(mouse, mouse.element);\r\n\r\n        return mouse;\r\n    };\r\n\r\n    /**\r\n     * Sets the element the mouse is bound to (and relative to).\r\n     * @method setElement\r\n     * @param {mouse} mouse\r\n     * @param {HTMLElement} element\r\n     */\r\n    Mouse.setElement = function(mouse, element) {\r\n        mouse.element = element;\r\n\r\n        element.addEventListener('mousemove', mouse.mousemove);\r\n        element.addEventListener('mousedown', mouse.mousedown);\r\n        element.addEventListener('mouseup', mouse.mouseup);\r\n        \r\n        element.addEventListener('mousewheel', mouse.mousewheel);\r\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\r\n\r\n        element.addEventListener('touchmove', mouse.mousemove);\r\n        element.addEventListener('touchstart', mouse.mousedown);\r\n        element.addEventListener('touchend', mouse.mouseup);\r\n    };\r\n\r\n    /**\r\n     * Clears all captured source events.\r\n     * @method clearSourceEvents\r\n     * @param {mouse} mouse\r\n     */\r\n    Mouse.clearSourceEvents = function(mouse) {\r\n        mouse.sourceEvents.mousemove = null;\r\n        mouse.sourceEvents.mousedown = null;\r\n        mouse.sourceEvents.mouseup = null;\r\n        mouse.sourceEvents.mousewheel = null;\r\n        mouse.wheelDelta = 0;\r\n    };\r\n\r\n    /**\r\n     * Sets the mouse position offset.\r\n     * @method setOffset\r\n     * @param {mouse} mouse\r\n     * @param {vector} offset\r\n     */\r\n    Mouse.setOffset = function(mouse, offset) {\r\n        mouse.offset.x = offset.x;\r\n        mouse.offset.y = offset.y;\r\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n    };\r\n\r\n    /**\r\n     * Sets the mouse position scale.\r\n     * @method setScale\r\n     * @param {mouse} mouse\r\n     * @param {vector} scale\r\n     */\r\n    Mouse.setScale = function(mouse, scale) {\r\n        mouse.scale.x = scale.x;\r\n        mouse.scale.y = scale.y;\r\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n    };\r\n    \r\n    /**\r\n     * Gets the mouse position relative to an element given a screen pixel ratio.\r\n     * @method _getRelativeMousePosition\r\n     * @private\r\n     * @param {} event\r\n     * @param {} element\r\n     * @param {number} pixelRatio\r\n     * @return {}\r\n     */\r\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\r\n        var elementBounds = element.getBoundingClientRect(),\r\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\r\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\r\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\r\n            touches = event.changedTouches,\r\n            x, y;\r\n        \r\n        if (touches) {\r\n            x = touches[0].pageX - elementBounds.left - scrollX;\r\n            y = touches[0].pageY - elementBounds.top - scrollY;\r\n        } else {\r\n            x = event.pageX - elementBounds.left - scrollX;\r\n            y = event.pageY - elementBounds.top - scrollY;\r\n        }\r\n\r\n        return { \r\n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\r\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\r\n        };\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 13 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\r\n*\r\n* @class Detector\r\n*/\r\n\r\n// TODO: speculative contacts\r\n\r\nvar Detector = {};\r\n\r\nmodule.exports = Detector;\r\n\r\nvar SAT = __webpack_require__(14);\r\nvar Pair = __webpack_require__(9);\r\nvar Bounds = __webpack_require__(1);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Finds all collisions given a list of pairs.\r\n     * @method collisions\r\n     * @param {pair[]} broadphasePairs\r\n     * @param {engine} engine\r\n     * @return {array} collisions\r\n     */\r\n    Detector.collisions = function(broadphasePairs, engine) {\r\n        var collisions = [],\r\n            pairsTable = engine.pairs.table;\r\n\r\n        for (var i = 0; i < broadphasePairs.length; i++) {\r\n            var bodyA = broadphasePairs[i][0], \r\n                bodyB = broadphasePairs[i][1];\r\n\r\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\r\n                continue;\r\n            \r\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\r\n                continue;\r\n\r\n            // mid phase\r\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\r\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\r\n                    var partA = bodyA.parts[j];\r\n\r\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\r\n                        var partB = bodyB.parts[k];\r\n\r\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\r\n                            // find a previous collision we could reuse\r\n                            var pairId = Pair.id(partA, partB),\r\n                                pair = pairsTable[pairId],\r\n                                previousCollision;\r\n\r\n                            if (pair && pair.isActive) {\r\n                                previousCollision = pair.collision;\r\n                            } else {\r\n                                previousCollision = null;\r\n                            }\r\n\r\n                            // narrow phase\r\n                            var collision = SAT.collides(partA, partB, previousCollision);\r\n\r\n                            if (collision.collided) {\r\n                                collisions.push(collision);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisions;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\r\n     * See `body.collisionFilter` for more information.\r\n     * @method canCollide\r\n     * @param {} filterA\r\n     * @param {} filterB\r\n     * @return {bool} `true` if collision can occur\r\n     */\r\n    Detector.canCollide = function(filterA, filterB) {\r\n        if (filterA.group === filterB.group && filterA.group !== 0)\r\n            return filterA.group > 0;\r\n\r\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 14 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\r\n*\r\n* @class SAT\r\n*/\r\n\r\n// TODO: true circles and curves\r\n\r\nvar SAT = {};\r\n\r\nmodule.exports = SAT;\r\n\r\nvar Vertices = __webpack_require__(3);\r\nvar Vector = __webpack_require__(2);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Detect collision between two bodies using the Separating Axis Theorem.\r\n     * @method collides\r\n     * @param {body} bodyA\r\n     * @param {body} bodyB\r\n     * @param {collision} previousCollision\r\n     * @return {collision} collision\r\n     */\r\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\r\n        var overlapAB,\r\n            overlapBA, \r\n            minOverlap,\r\n            collision,\r\n            canReusePrevCol = false;\r\n\r\n        if (previousCollision) {\r\n            // estimate total motion\r\n            var parentA = bodyA.parent,\r\n                parentB = bodyB.parent,\r\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\r\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\r\n\r\n            // we may be able to (partially) reuse collision result \r\n            // but only safe if collision was resting\r\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\r\n\r\n            // reuse collision object\r\n            collision = previousCollision;\r\n        } else {\r\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\r\n        }\r\n\r\n        if (previousCollision && canReusePrevCol) {\r\n            // if we can reuse the collision result\r\n            // we only need to test the previously found axis\r\n            var axisBodyA = collision.axisBody,\r\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\r\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\r\n\r\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\r\n            collision.reused = true;\r\n\r\n            if (minOverlap.overlap <= 0) {\r\n                collision.collided = false;\r\n                return collision;\r\n            }\r\n        } else {\r\n            // if we can't reuse a result, perform a full SAT test\r\n\r\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\r\n\r\n            if (overlapAB.overlap <= 0) {\r\n                collision.collided = false;\r\n                return collision;\r\n            }\r\n\r\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\r\n\r\n            if (overlapBA.overlap <= 0) {\r\n                collision.collided = false;\r\n                return collision;\r\n            }\r\n\r\n            if (overlapAB.overlap < overlapBA.overlap) {\r\n                minOverlap = overlapAB;\r\n                collision.axisBody = bodyA;\r\n            } else {\r\n                minOverlap = overlapBA;\r\n                collision.axisBody = bodyB;\r\n            }\r\n\r\n            // important for reuse later\r\n            collision.axisNumber = minOverlap.axisNumber;\r\n        }\r\n\r\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\r\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\r\n        collision.collided = true;\r\n        collision.depth = minOverlap.overlap;\r\n        collision.parentA = collision.bodyA.parent;\r\n        collision.parentB = collision.bodyB.parent;\r\n        \r\n        bodyA = collision.bodyA;\r\n        bodyB = collision.bodyB;\r\n\r\n        // ensure normal is facing away from bodyA\r\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\r\n            collision.normal = {\r\n                x: minOverlap.axis.x,\r\n                y: minOverlap.axis.y\r\n            };\r\n        } else {\r\n            collision.normal = {\r\n                x: -minOverlap.axis.x,\r\n                y: -minOverlap.axis.y\r\n            };\r\n        }\r\n\r\n        collision.tangent = Vector.perp(collision.normal);\r\n\r\n        collision.penetration = collision.penetration || {};\r\n        collision.penetration.x = collision.normal.x * collision.depth;\r\n        collision.penetration.y = collision.normal.y * collision.depth; \r\n\r\n        // find support points, there is always either exactly one or two\r\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\r\n            supports = [];\r\n\r\n        // find the supports from bodyB that are inside bodyA\r\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\r\n            supports.push(verticesB[0]);\r\n\r\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\r\n            supports.push(verticesB[1]);\r\n\r\n        // find the supports from bodyA that are inside bodyB\r\n        if (supports.length < 2) {\r\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\r\n                \r\n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\r\n                supports.push(verticesA[0]);\r\n\r\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\r\n                supports.push(verticesA[1]);\r\n        }\r\n\r\n        // account for the edge case of overlapping but no vertex containment\r\n        if (supports.length < 1)\r\n            supports = [verticesB[0]];\r\n        \r\n        collision.supports = supports;\r\n\r\n        return collision;\r\n    };\r\n\r\n    /**\r\n     * Find the overlap between two sets of vertices.\r\n     * @method _overlapAxes\r\n     * @private\r\n     * @param {} verticesA\r\n     * @param {} verticesB\r\n     * @param {} axes\r\n     * @return result\r\n     */\r\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\r\n        var projectionA = Vector._temp[0], \r\n            projectionB = Vector._temp[1],\r\n            result = { overlap: Number.MAX_VALUE },\r\n            overlap,\r\n            axis;\r\n\r\n        for (var i = 0; i < axes.length; i++) {\r\n            axis = axes[i];\r\n\r\n            SAT._projectToAxis(projectionA, verticesA, axis);\r\n            SAT._projectToAxis(projectionB, verticesB, axis);\r\n\r\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\r\n\r\n            if (overlap <= 0) {\r\n                result.overlap = overlap;\r\n                return result;\r\n            }\r\n\r\n            if (overlap < result.overlap) {\r\n                result.overlap = overlap;\r\n                result.axis = axis;\r\n                result.axisNumber = i;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Projects vertices on an axis and returns an interval.\r\n     * @method _projectToAxis\r\n     * @private\r\n     * @param {} projection\r\n     * @param {} vertices\r\n     * @param {} axis\r\n     */\r\n    SAT._projectToAxis = function(projection, vertices, axis) {\r\n        var min = Vector.dot(vertices[0], axis),\r\n            max = min;\r\n\r\n        for (var i = 1; i < vertices.length; i += 1) {\r\n            var dot = Vector.dot(vertices[i], axis);\r\n\r\n            if (dot > max) { \r\n                max = dot; \r\n            } else if (dot < min) { \r\n                min = dot; \r\n            }\r\n        }\r\n\r\n        projection.min = min;\r\n        projection.max = max;\r\n    };\r\n    \r\n    /**\r\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\r\n     * @method _findSupports\r\n     * @private\r\n     * @param {} bodyA\r\n     * @param {} bodyB\r\n     * @param {} normal\r\n     * @return [vector]\r\n     */\r\n    SAT._findSupports = function(bodyA, bodyB, normal) {\r\n        var nearestDistance = Number.MAX_VALUE,\r\n            vertexToBody = Vector._temp[0],\r\n            vertices = bodyB.vertices,\r\n            bodyAPosition = bodyA.position,\r\n            distance,\r\n            vertex,\r\n            vertexA,\r\n            vertexB;\r\n\r\n        // find closest vertex on bodyB\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            vertex = vertices[i];\r\n            vertexToBody.x = vertex.x - bodyAPosition.x;\r\n            vertexToBody.y = vertex.y - bodyAPosition.y;\r\n            distance = -Vector.dot(normal, vertexToBody);\r\n\r\n            if (distance < nearestDistance) {\r\n                nearestDistance = distance;\r\n                vertexA = vertex;\r\n            }\r\n        }\r\n\r\n        // find next closest vertex using the two connected to it\r\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\r\n        vertex = vertices[prevIndex];\r\n        vertexToBody.x = vertex.x - bodyAPosition.x;\r\n        vertexToBody.y = vertex.y - bodyAPosition.y;\r\n        nearestDistance = -Vector.dot(normal, vertexToBody);\r\n        vertexB = vertex;\r\n\r\n        var nextIndex = (vertexA.index + 1) % vertices.length;\r\n        vertex = vertices[nextIndex];\r\n        vertexToBody.x = vertex.x - bodyAPosition.x;\r\n        vertexToBody.y = vertex.y - bodyAPosition.y;\r\n        distance = -Vector.dot(normal, vertexToBody);\r\n        if (distance < nearestDistance) {\r\n            vertexB = vertex;\r\n        }\r\n\r\n        return [vertexA, vertexB];\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 15 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\r\n*\r\n* @class Plugin\r\n*/\r\n\r\nvar Plugin = {};\r\n\r\nmodule.exports = Plugin;\r\n\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    Plugin._registry = {};\r\n\r\n    /**\r\n     * Registers a plugin object so it can be resolved later by name.\r\n     * @method register\r\n     * @param plugin {} The plugin to register.\r\n     * @return {object} The plugin.\r\n     */\r\n    Plugin.register = function(plugin) {\r\n        if (!Plugin.isPlugin(plugin)) {\r\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\r\n        }\r\n\r\n        if (plugin.name in Plugin._registry) {\r\n            var registered = Plugin._registry[plugin.name],\r\n                pluginVersion = Plugin.versionParse(plugin.version).number,\r\n                registeredVersion = Plugin.versionParse(registered.version).number;\r\n\r\n            if (pluginVersion > registeredVersion) {\r\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\r\n                Plugin._registry[plugin.name] = plugin;\r\n            } else if (pluginVersion < registeredVersion) {\r\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\r\n            } else if (plugin !== registered) {\r\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\r\n            }\r\n        } else {\r\n            Plugin._registry[plugin.name] = plugin;\r\n        }\r\n\r\n        return plugin;\r\n    };\r\n\r\n    /**\r\n     * Resolves a dependency to a plugin object from the registry if it exists. \r\n     * The `dependency` may contain a version, but only the name matters when resolving.\r\n     * @method resolve\r\n     * @param dependency {string} The dependency.\r\n     * @return {object} The plugin if resolved, otherwise `undefined`.\r\n     */\r\n    Plugin.resolve = function(dependency) {\r\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\r\n    };\r\n\r\n    /**\r\n     * Returns a pretty printed plugin name and version.\r\n     * @method toString\r\n     * @param plugin {} The plugin.\r\n     * @return {string} Pretty printed plugin name and version.\r\n     */\r\n    Plugin.toString = function(plugin) {\r\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\r\n     * This means it must define the following properties:\r\n     * - `name`\r\n     * - `version`\r\n     * - `install`\r\n     * @method isPlugin\r\n     * @param obj {} The obj to test.\r\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\r\n     */\r\n    Plugin.isPlugin = function(obj) {\r\n        return obj && obj.name && obj.version && obj.install;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\r\n     * @method isUsed\r\n     * @param module {} The module.\r\n     * @param name {string} The plugin name.\r\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\r\n     */\r\n    Plugin.isUsed = function(module, name) {\r\n        return module.used.indexOf(name) > -1;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\r\n     * If `plugin.for` is not specified then it is assumed to be applicable.\r\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\r\n     * @method isFor\r\n     * @param plugin {} The plugin.\r\n     * @param module {} The module.\r\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\r\n     */\r\n    Plugin.isFor = function(plugin, module) {\r\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\r\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\r\n    };\r\n\r\n    /**\r\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\r\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\r\n     * Plugins may be specified either by their name or a reference to the plugin object.\r\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\r\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\r\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\r\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\r\n     * - A green tick ✅ indicates a dependency was resolved and installed.\r\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\r\n     * - A red cross ❌ indicates a dependency could not be resolved.\r\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param module {} The module install plugins on.\r\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\r\n     */\r\n    Plugin.use = function(module, plugins) {\r\n        module.uses = (module.uses || []).concat(plugins || []);\r\n\r\n        if (module.uses.length === 0) {\r\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\r\n            return;\r\n        }\r\n\r\n        var dependencies = Plugin.dependencies(module),\r\n            sortedDependencies = Common.topologicalSort(dependencies),\r\n            status = [];\r\n\r\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\r\n            if (sortedDependencies[i] === module.name) {\r\n                continue;\r\n            }\r\n\r\n            var plugin = Plugin.resolve(sortedDependencies[i]);\r\n\r\n            if (!plugin) {\r\n                status.push('❌ ' + sortedDependencies[i]);\r\n                continue;\r\n            }\r\n\r\n            if (Plugin.isUsed(module, plugin.name)) {\r\n                continue;\r\n            }\r\n\r\n            if (!Plugin.isFor(plugin, module)) {\r\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\r\n                plugin._warned = true;\r\n            }\r\n\r\n            if (plugin.install) {\r\n                plugin.install(module);\r\n            } else {\r\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\r\n                plugin._warned = true;\r\n            }\r\n\r\n            if (plugin._warned) {\r\n                status.push('🔶 ' + Plugin.toString(plugin));\r\n                delete plugin._warned;\r\n            } else {\r\n                status.push('✅ ' + Plugin.toString(plugin));\r\n            }\r\n\r\n            module.used.push(plugin.name);\r\n        }\r\n\r\n        if (status.length > 0) {\r\n            Common.info(status.join('  '));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\r\n     * @method dependencies\r\n     * @param module {} The module.\r\n     * @return {object} A dependency graph.\r\n     */\r\n    Plugin.dependencies = function(module, tracked) {\r\n        var parsedBase = Plugin.dependencyParse(module),\r\n            name = parsedBase.name;\r\n\r\n        tracked = tracked || {};\r\n\r\n        if (name in tracked) {\r\n            return;\r\n        }\r\n\r\n        module = Plugin.resolve(module) || module;\r\n\r\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\r\n            if (Plugin.isPlugin(dependency)) {\r\n                Plugin.register(dependency);\r\n            }\r\n\r\n            var parsed = Plugin.dependencyParse(dependency),\r\n                resolved = Plugin.resolve(dependency);\r\n\r\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\r\n                Common.warn(\r\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\r\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\r\n                );\r\n\r\n                resolved._warned = true;\r\n                module._warned = true;\r\n            } else if (!resolved) {\r\n                Common.warn(\r\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\r\n                    Plugin.toString(parsedBase), 'could not be resolved.'\r\n                );\r\n\r\n                module._warned = true;\r\n            }\r\n\r\n            return parsed.name;\r\n        });\r\n\r\n        for (var i = 0; i < tracked[name].length; i += 1) {\r\n            Plugin.dependencies(tracked[name][i], tracked);\r\n        }\r\n\r\n        return tracked;\r\n    };\r\n\r\n    /**\r\n     * Parses a dependency string into its components.\r\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\r\n     * See documentation for `Plugin.versionParse` for a description of the format.\r\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\r\n     * @method dependencyParse\r\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\r\n     * @return {object} The dependency parsed into its components.\r\n     */\r\n    Plugin.dependencyParse = function(dependency) {\r\n        if (Common.isString(dependency)) {\r\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\r\n\r\n            if (!pattern.test(dependency)) {\r\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\r\n            }\r\n\r\n            return {\r\n                name: dependency.split('@')[0],\r\n                range: dependency.split('@')[1] || '*'\r\n            };\r\n        }\r\n\r\n        return {\r\n            name: dependency.name,\r\n            range: dependency.range || dependency.version\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Parses a version string into its components.  \r\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\r\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\r\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\r\n     * Only the following range types are supported:\r\n     * - Tilde ranges e.g. `~1.2.3`\r\n     * - Caret ranges e.g. `^1.2.3`\r\n     * - Greater than ranges e.g. `>1.2.3`\r\n     * - Greater than or equal ranges e.g. `>=1.2.3`\r\n     * - Exact version e.g. `1.2.3`\r\n     * - Any version `*`\r\n     * @method versionParse\r\n     * @param range {string} The version string.\r\n     * @return {object} The version range parsed into its components.\r\n     */\r\n    Plugin.versionParse = function(range) {\r\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\r\n\r\n        if (!pattern.test(range)) {\r\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\r\n        }\r\n\r\n        var parts = pattern.exec(range);\r\n        var major = Number(parts[4]);\r\n        var minor = Number(parts[5]);\r\n        var patch = Number(parts[6]);\r\n\r\n        return {\r\n            isRange: Boolean(parts[1] || parts[2]),\r\n            version: parts[3],\r\n            range: range,\r\n            operator: parts[1] || parts[2] || '',\r\n            major: major,\r\n            minor: minor,\r\n            patch: patch,\r\n            parts: [major, minor, patch],\r\n            prerelease: parts[7],\r\n            number: major * 1e8 + minor * 1e4 + patch\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if `version` satisfies the given `range`.\r\n     * See documentation for `Plugin.versionParse` for a description of the format.\r\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\r\n     * @method versionSatisfies\r\n     * @param version {string} The version string.\r\n     * @param range {string} The range string.\r\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\r\n     */\r\n    Plugin.versionSatisfies = function(version, range) {\r\n        range = range || '*';\r\n\r\n        var r = Plugin.versionParse(range),\r\n            v = Plugin.versionParse(version);\r\n\r\n        if (r.isRange) {\r\n            if (r.operator === '*' || version === '*') {\r\n                return true;\r\n            }\r\n\r\n            if (r.operator === '>') {\r\n                return v.number > r.number;\r\n            }\r\n\r\n            if (r.operator === '>=') {\r\n                return v.number >= r.number;\r\n            }\r\n\r\n            if (r.operator === '~') {\r\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\r\n            }\r\n\r\n            if (r.operator === '^') {\r\n                if (r.major > 0) {\r\n                    return v.major === r.major && v.number >= r.number;\r\n                }\r\n\r\n                if (r.minor > 0) {\r\n                    return v.minor === r.minor && v.patch >= r.patch;\r\n                }\r\n\r\n                return v.patch === r.patch;\r\n            }\r\n        }\r\n\r\n        return version === range || version === '*';\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 16 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\r\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\r\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\r\n*\r\n* @class Render\r\n*/\r\n\r\nvar Render = {};\r\n\r\nmodule.exports = Render;\r\n\r\nvar Common = __webpack_require__(0);\r\nvar Composite = __webpack_require__(5);\r\nvar Bounds = __webpack_require__(1);\r\nvar Events = __webpack_require__(4);\r\nvar Vector = __webpack_require__(2);\r\nvar Mouse = __webpack_require__(12);\r\n\r\n(function() {\r\n\r\n    var _requestAnimationFrame,\r\n        _cancelAnimationFrame;\r\n\r\n    if (typeof window !== 'undefined') {\r\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\r\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\r\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\r\n\r\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\r\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\r\n    }\r\n\r\n    Render._goodFps = 30;\r\n    Render._goodDelta = 1000 / 60;\r\n\r\n    /**\r\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {object} [options]\r\n     * @return {render} A new renderer\r\n     */\r\n    Render.create = function(options) {\r\n        var defaults = {\r\n            controller: Render,\r\n            engine: null,\r\n            element: null,\r\n            canvas: null,\r\n            mouse: null,\r\n            frameRequestId: null,\r\n            timing: {\r\n                historySize: 60,\r\n                delta: 0,\r\n                deltaHistory: [],\r\n                lastTime: 0,\r\n                lastTimestamp: 0,\r\n                lastElapsed: 0,\r\n                timestampElapsed: 0,\r\n                timestampElapsedHistory: [],\r\n                engineDeltaHistory: [],\r\n                engineElapsedHistory: [],\r\n                elapsedHistory: []\r\n            },\r\n            options: {\r\n                width: 800,\r\n                height: 600,\r\n                pixelRatio: 1,\r\n                background: '#14151f',\r\n                wireframeBackground: '#14151f',\r\n                hasBounds: !!options.bounds,\r\n                enabled: true,\r\n                wireframes: true,\r\n                showSleeping: true,\r\n                showDebug: false,\r\n                showStats: false,\r\n                showPerformance: false,\r\n                showBroadphase: false,\r\n                showBounds: false,\r\n                showVelocity: false,\r\n                showCollisions: false,\r\n                showSeparations: false,\r\n                showAxes: false,\r\n                showPositions: false,\r\n                showAngleIndicator: false,\r\n                showIds: false,\r\n                showVertexNumbers: false,\r\n                showConvexHulls: false,\r\n                showInternalEdges: false,\r\n                showMousePosition: false\r\n            }\r\n        };\r\n\r\n        var render = Common.extend(defaults, options);\r\n\r\n        if (render.canvas) {\r\n            render.canvas.width = render.options.width || render.canvas.width;\r\n            render.canvas.height = render.options.height || render.canvas.height;\r\n        }\r\n\r\n        render.mouse = options.mouse;\r\n        render.engine = options.engine;\r\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\r\n        render.context = render.canvas.getContext('2d');\r\n        render.textures = {};\r\n\r\n        render.bounds = render.bounds || {\r\n            min: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            max: {\r\n                x: render.canvas.width,\r\n                y: render.canvas.height\r\n            }\r\n        };\r\n\r\n        if (render.options.pixelRatio !== 1) {\r\n            Render.setPixelRatio(render, render.options.pixelRatio);\r\n        }\r\n\r\n        if (Common.isElement(render.element)) {\r\n            render.element.appendChild(render.canvas);\r\n        } else if (!render.canvas.parentNode) {\r\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\r\n        }\r\n\r\n        return render;\r\n    };\r\n\r\n    /**\r\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\r\n     * @method run\r\n     * @param {render} render\r\n     */\r\n    Render.run = function(render) {\r\n        (function loop(time){\r\n            render.frameRequestId = _requestAnimationFrame(loop);\r\n            \r\n            _updateTiming(render, time);\r\n\r\n            Render.world(render, time);\r\n\r\n            if (render.options.showStats || render.options.showDebug) {\r\n                Render.stats(render, render.context, time);\r\n            }\r\n\r\n            if (render.options.showPerformance || render.options.showDebug) {\r\n                Render.performance(render, render.context, time);\r\n            }\r\n        })();\r\n    };\r\n\r\n    /**\r\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\r\n     * @method stop\r\n     * @param {render} render\r\n     */\r\n    Render.stop = function(render) {\r\n        _cancelAnimationFrame(render.frameRequestId);\r\n    };\r\n\r\n    /**\r\n     * Sets the pixel ratio of the renderer and updates the canvas.\r\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\r\n     * @method setPixelRatio\r\n     * @param {render} render\r\n     * @param {number} pixelRatio\r\n     */\r\n    Render.setPixelRatio = function(render, pixelRatio) {\r\n        var options = render.options,\r\n            canvas = render.canvas;\r\n\r\n        if (pixelRatio === 'auto') {\r\n            pixelRatio = _getPixelRatio(canvas);\r\n        }\r\n\r\n        options.pixelRatio = pixelRatio;\r\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\r\n        canvas.width = options.width * pixelRatio;\r\n        canvas.height = options.height * pixelRatio;\r\n        canvas.style.width = options.width + 'px';\r\n        canvas.style.height = options.height + 'px';\r\n    };\r\n\r\n    /**\r\n     * Positions and sizes the viewport around the given object bounds.\r\n     * Objects must have at least one of the following properties:\r\n     * - `object.bounds`\r\n     * - `object.position`\r\n     * - `object.min` and `object.max`\r\n     * - `object.x` and `object.y`\r\n     * @method lookAt\r\n     * @param {render} render\r\n     * @param {object[]} objects\r\n     * @param {vector} [padding]\r\n     * @param {bool} [center=true]\r\n     */\r\n    Render.lookAt = function(render, objects, padding, center) {\r\n        center = typeof center !== 'undefined' ? center : true;\r\n        objects = Common.isArray(objects) ? objects : [objects];\r\n        padding = padding || {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n\r\n        // find bounds of all objects\r\n        var bounds = {\r\n            min: { x: Infinity, y: Infinity },\r\n            max: { x: -Infinity, y: -Infinity }\r\n        };\r\n\r\n        for (var i = 0; i < objects.length; i += 1) {\r\n            var object = objects[i],\r\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\r\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\r\n\r\n            if (min && max) {\r\n                if (min.x < bounds.min.x)\r\n                    bounds.min.x = min.x;\r\n\r\n                if (max.x > bounds.max.x)\r\n                    bounds.max.x = max.x;\r\n\r\n                if (min.y < bounds.min.y)\r\n                    bounds.min.y = min.y;\r\n\r\n                if (max.y > bounds.max.y)\r\n                    bounds.max.y = max.y;\r\n            }\r\n        }\r\n\r\n        // find ratios\r\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\r\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\r\n            viewHeight = render.canvas.height,\r\n            viewWidth = render.canvas.width,\r\n            outerRatio = viewWidth / viewHeight,\r\n            innerRatio = width / height,\r\n            scaleX = 1,\r\n            scaleY = 1;\r\n\r\n        // find scale factor\r\n        if (innerRatio > outerRatio) {\r\n            scaleY = innerRatio / outerRatio;\r\n        } else {\r\n            scaleX = outerRatio / innerRatio;\r\n        }\r\n\r\n        // enable bounds\r\n        render.options.hasBounds = true;\r\n\r\n        // position and size\r\n        render.bounds.min.x = bounds.min.x;\r\n        render.bounds.max.x = bounds.min.x + width * scaleX;\r\n        render.bounds.min.y = bounds.min.y;\r\n        render.bounds.max.y = bounds.min.y + height * scaleY;\r\n\r\n        // center\r\n        if (center) {\r\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\r\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\r\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\r\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\r\n        }\r\n\r\n        // padding\r\n        render.bounds.min.x -= padding.x;\r\n        render.bounds.max.x -= padding.x;\r\n        render.bounds.min.y -= padding.y;\r\n        render.bounds.max.y -= padding.y;\r\n\r\n        // update mouse\r\n        if (render.mouse) {\r\n            Mouse.setScale(render.mouse, {\r\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\r\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\r\n            });\r\n\r\n            Mouse.setOffset(render.mouse, render.bounds.min);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies viewport transforms based on `render.bounds` to a render context.\r\n     * @method startViewTransform\r\n     * @param {render} render\r\n     */\r\n    Render.startViewTransform = function(render) {\r\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n            boundsScaleX = boundsWidth / render.options.width,\r\n            boundsScaleY = boundsHeight / render.options.height;\r\n\r\n        render.context.setTransform(\r\n            render.options.pixelRatio / boundsScaleX, 0, 0, \r\n            render.options.pixelRatio / boundsScaleY, 0, 0\r\n        );\r\n        \r\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\r\n    };\r\n\r\n    /**\r\n     * Resets all transforms on the render context.\r\n     * @method endViewTransform\r\n     * @param {render} render\r\n     */\r\n    Render.endViewTransform = function(render) {\r\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\r\n    };\r\n\r\n    /**\r\n     * Renders the given `engine`'s `Matter.World` object.\r\n     * This is the entry point for all rendering and should be called every time the scene changes.\r\n     * @method world\r\n     * @param {render} render\r\n     */\r\n    Render.world = function(render, time) {\r\n        var startTime = Common.now(),\r\n            engine = render.engine,\r\n            world = engine.world,\r\n            canvas = render.canvas,\r\n            context = render.context,\r\n            options = render.options,\r\n            timing = render.timing;\r\n\r\n        var allBodies = Composite.allBodies(world),\r\n            allConstraints = Composite.allConstraints(world),\r\n            background = options.wireframes ? options.wireframeBackground : options.background,\r\n            bodies = [],\r\n            constraints = [],\r\n            i;\r\n\r\n        var event = {\r\n            timestamp: engine.timing.timestamp\r\n        };\r\n\r\n        Events.trigger(render, 'beforeRender', event);\r\n\r\n        // apply background if it has changed\r\n        if (render.currentBackground !== background)\r\n            _applyBackground(render, background);\r\n\r\n        // clear the canvas with a transparent fill, to allow the canvas background to show\r\n        context.globalCompositeOperation = 'source-in';\r\n        context.fillStyle = \"transparent\";\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        context.globalCompositeOperation = 'source-over';\r\n\r\n        // handle bounds\r\n        if (options.hasBounds) {\r\n            // filter out bodies that are not in view\r\n            for (i = 0; i < allBodies.length; i++) {\r\n                var body = allBodies[i];\r\n                if (Bounds.overlaps(body.bounds, render.bounds))\r\n                    bodies.push(body);\r\n            }\r\n\r\n            // filter out constraints that are not in view\r\n            for (i = 0; i < allConstraints.length; i++) {\r\n                var constraint = allConstraints[i],\r\n                    bodyA = constraint.bodyA,\r\n                    bodyB = constraint.bodyB,\r\n                    pointAWorld = constraint.pointA,\r\n                    pointBWorld = constraint.pointB;\r\n\r\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\r\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\r\n\r\n                if (!pointAWorld || !pointBWorld)\r\n                    continue;\r\n\r\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\r\n                    constraints.push(constraint);\r\n            }\r\n\r\n            // transform the view\r\n            Render.startViewTransform(render);\r\n\r\n            // update mouse\r\n            if (render.mouse) {\r\n                Mouse.setScale(render.mouse, {\r\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\r\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\r\n                });\r\n\r\n                Mouse.setOffset(render.mouse, render.bounds.min);\r\n            }\r\n        } else {\r\n            constraints = allConstraints;\r\n            bodies = allBodies;\r\n\r\n            if (render.options.pixelRatio !== 1) {\r\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\r\n            }\r\n        }\r\n\r\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\r\n            // fully featured rendering of bodies\r\n            Render.bodies(render, bodies, context);\r\n        } else {\r\n            if (options.showConvexHulls)\r\n                Render.bodyConvexHulls(render, bodies, context);\r\n\r\n            // optimised method for wireframes only\r\n            Render.bodyWireframes(render, bodies, context);\r\n        }\r\n\r\n        if (options.showBounds)\r\n            Render.bodyBounds(render, bodies, context);\r\n\r\n        if (options.showAxes || options.showAngleIndicator)\r\n            Render.bodyAxes(render, bodies, context);\r\n\r\n        if (options.showPositions)\r\n            Render.bodyPositions(render, bodies, context);\r\n\r\n        if (options.showVelocity)\r\n            Render.bodyVelocity(render, bodies, context);\r\n\r\n        if (options.showIds)\r\n            Render.bodyIds(render, bodies, context);\r\n\r\n        if (options.showSeparations)\r\n            Render.separations(render, engine.pairs.list, context);\r\n\r\n        if (options.showCollisions)\r\n            Render.collisions(render, engine.pairs.list, context);\r\n\r\n        if (options.showVertexNumbers)\r\n            Render.vertexNumbers(render, bodies, context);\r\n\r\n        if (options.showMousePosition)\r\n            Render.mousePosition(render, render.mouse, context);\r\n\r\n        Render.constraints(constraints, context);\r\n\r\n        if (options.showBroadphase)\r\n            Render.grid(render, engine.grid, context);\r\n\r\n        if (options.hasBounds) {\r\n            // revert view transforms\r\n            Render.endViewTransform(render);\r\n        }\r\n\r\n        Events.trigger(render, 'afterRender', event);\r\n\r\n        // log the time elapsed computing this update\r\n        timing.lastElapsed = Common.now() - startTime;\r\n    };\r\n\r\n    /**\r\n     * Renders statistics about the engine and world useful for debugging.\r\n     * @private\r\n     * @method stats\r\n     * @param {render} render\r\n     * @param {RenderingContext} context\r\n     * @param {Number} time\r\n     */\r\n    Render.stats = function(render, context, time) {\r\n        var engine = render.engine,\r\n            world = engine.world,\r\n            bodies = Composite.allBodies(world),\r\n            parts = 0,\r\n            width = 55,\r\n            height = 44,\r\n            x = 0,\r\n            y = 0;\r\n        \r\n        // count parts\r\n        for (var i = 0; i < bodies.length; i += 1) {\r\n            parts += bodies[i].parts.length;\r\n        }\r\n\r\n        // sections\r\n        var sections = {\r\n            'Part': parts,\r\n            'Body': bodies.length,\r\n            'Cons': Composite.allConstraints(world).length,\r\n            'Comp': Composite.allComposites(world).length,\r\n            'Pair': engine.pairs.list.length\r\n        };\r\n\r\n        // background\r\n        context.fillStyle = '#0e0f19';\r\n        context.fillRect(x, y, width * 5.5, height);\r\n\r\n        context.font = '12px Arial';\r\n        context.textBaseline = 'top';\r\n        context.textAlign = 'right';\r\n\r\n        // sections\r\n        for (var key in sections) {\r\n            var section = sections[key];\r\n            // label\r\n            context.fillStyle = '#aaa';\r\n            context.fillText(key, x + width, y + 8);\r\n\r\n            // value\r\n            context.fillStyle = '#eee';\r\n            context.fillText(section, x + width, y + 26);\r\n\r\n            x += width;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders engine and render performance information.\r\n     * @private\r\n     * @method performance\r\n     * @param {render} render\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.performance = function(render, context) {\r\n        var engine = render.engine,\r\n            timing = render.timing,\r\n            deltaHistory = timing.deltaHistory,\r\n            elapsedHistory = timing.elapsedHistory,\r\n            timestampElapsedHistory = timing.timestampElapsedHistory,\r\n            engineDeltaHistory = timing.engineDeltaHistory,\r\n            engineElapsedHistory = timing.engineElapsedHistory,\r\n            lastEngineDelta = engine.timing.lastDelta;\r\n        \r\n        var deltaMean = _mean(deltaHistory),\r\n            elapsedMean = _mean(elapsedHistory),\r\n            engineDeltaMean = _mean(engineDeltaHistory),\r\n            engineElapsedMean = _mean(engineElapsedHistory),\r\n            timestampElapsedMean = _mean(timestampElapsedHistory),\r\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\r\n            fps = (1000 / deltaMean) || 0;\r\n\r\n        var graphHeight = 4,\r\n            gap = 12,\r\n            width = 60,\r\n            height = 34,\r\n            x = 10,\r\n            y = 69;\r\n\r\n        // background\r\n        context.fillStyle = '#0e0f19';\r\n        context.fillRect(0, 50, gap * 4 + width * 5 + 22, height);\r\n\r\n        // show FPS\r\n        Render.status(\r\n            context, x, y, width, graphHeight, deltaHistory.length, \r\n            Math.round(fps) + ' fps', \r\n            fps / Render._goodFps,\r\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\r\n        );\r\n\r\n        // show engine delta\r\n        Render.status(\r\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\r\n            lastEngineDelta.toFixed(2) + ' dt', \r\n            Render._goodDelta / lastEngineDelta,\r\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\r\n        );\r\n\r\n        // show engine update time\r\n        Render.status(\r\n            context, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\r\n            engineElapsedMean.toFixed(2) + ' ut', \r\n            1 - (engineElapsedMean / Render._goodFps),\r\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\r\n        );\r\n\r\n        // show render time\r\n        Render.status(\r\n            context, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\r\n            elapsedMean.toFixed(2) + ' rt', \r\n            1 - (elapsedMean / Render._goodFps),\r\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\r\n        );\r\n\r\n        // show effective speed\r\n        Render.status(\r\n            context, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length, \r\n            rateMean.toFixed(2) + ' x', \r\n            rateMean * rateMean * rateMean,\r\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Renders a label, indicator and a chart.\r\n     * @private\r\n     * @method status\r\n     * @param {RenderingContext} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {number} count\r\n     * @param {string} label\r\n     * @param {string} indicator\r\n     * @param {function} plotY\r\n     */\r\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\r\n        // background\r\n        context.strokeStyle = '#888';\r\n        context.fillStyle = '#444';\r\n        context.lineWidth = 1;\r\n        context.fillRect(x, y + 7, width, 1);\r\n\r\n        // chart\r\n        context.beginPath();\r\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\r\n        for (var i = 0; i < width; i += 1) {\r\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\r\n        }\r\n        context.stroke();\r\n\r\n        // indicator\r\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\r\n        context.fillRect(x, y - 7, 4, 4);\r\n\r\n        // label\r\n        context.font = '12px Arial';\r\n        context.textBaseline = 'middle';\r\n        context.textAlign = 'right';\r\n        context.fillStyle = '#eee';\r\n        context.fillText(label, x + width, y - 5);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method constraints\r\n     * @param {constraint[]} constraints\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.constraints = function(constraints, context) {\r\n        var c = context;\r\n\r\n        for (var i = 0; i < constraints.length; i++) {\r\n            var constraint = constraints[i];\r\n\r\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\r\n                continue;\r\n\r\n            var bodyA = constraint.bodyA,\r\n                bodyB = constraint.bodyB,\r\n                start,\r\n                end;\r\n\r\n            if (bodyA) {\r\n                start = Vector.add(bodyA.position, constraint.pointA);\r\n            } else {\r\n                start = constraint.pointA;\r\n            }\r\n\r\n            if (constraint.render.type === 'pin') {\r\n                c.beginPath();\r\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\r\n                c.closePath();\r\n            } else {\r\n                if (bodyB) {\r\n                    end = Vector.add(bodyB.position, constraint.pointB);\r\n                } else {\r\n                    end = constraint.pointB;\r\n                }\r\n\r\n                c.beginPath();\r\n                c.moveTo(start.x, start.y);\r\n\r\n                if (constraint.render.type === 'spring') {\r\n                    var delta = Vector.sub(end, start),\r\n                        normal = Vector.perp(Vector.normalise(delta)),\r\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\r\n                        offset;\r\n\r\n                    for (var j = 1; j < coils; j += 1) {\r\n                        offset = j % 2 === 0 ? 1 : -1;\r\n\r\n                        c.lineTo(\r\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\r\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\r\n                        );\r\n                    }\r\n                }\r\n\r\n                c.lineTo(end.x, end.y);\r\n            }\r\n\r\n            if (constraint.render.lineWidth) {\r\n                c.lineWidth = constraint.render.lineWidth;\r\n                c.strokeStyle = constraint.render.strokeStyle;\r\n                c.stroke();\r\n            }\r\n\r\n            if (constraint.render.anchors) {\r\n                c.fillStyle = constraint.render.strokeStyle;\r\n                c.beginPath();\r\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\r\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\r\n                c.closePath();\r\n                c.fill();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method bodies\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodies = function(render, bodies, context) {\r\n        var c = context,\r\n            engine = render.engine,\r\n            options = render.options,\r\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\r\n            body,\r\n            part,\r\n            i,\r\n            k;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            // handle compound parts\r\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\r\n                part = body.parts[k];\r\n\r\n                if (!part.render.visible)\r\n                    continue;\r\n\r\n                if (options.showSleeping && body.isSleeping) {\r\n                    c.globalAlpha = 0.5 * part.render.opacity;\r\n                } else if (part.render.opacity !== 1) {\r\n                    c.globalAlpha = part.render.opacity;\r\n                }\r\n\r\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\r\n                    // part sprite\r\n                    var sprite = part.render.sprite,\r\n                        texture = _getTexture(render, sprite.texture);\r\n\r\n                    c.translate(part.position.x, part.position.y);\r\n                    c.rotate(part.angle);\r\n\r\n                    c.drawImage(\r\n                        texture,\r\n                        texture.width * -sprite.xOffset * sprite.xScale,\r\n                        texture.height * -sprite.yOffset * sprite.yScale,\r\n                        texture.width * sprite.xScale,\r\n                        texture.height * sprite.yScale\r\n                    );\r\n\r\n                    // revert translation, hopefully faster than save / restore\r\n                    c.rotate(-part.angle);\r\n                    c.translate(-part.position.x, -part.position.y);\r\n                } else {\r\n                    // part polygon\r\n                    if (part.circleRadius) {\r\n                        c.beginPath();\r\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\r\n                    } else {\r\n                        c.beginPath();\r\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\r\n\r\n                        for (var j = 1; j < part.vertices.length; j++) {\r\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\r\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\r\n                            } else {\r\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\r\n                            }\r\n\r\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\r\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\r\n                            }\r\n                        }\r\n\r\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\r\n                        c.closePath();\r\n                    }\r\n\r\n                    if (!options.wireframes) {\r\n                        c.fillStyle = part.render.fillStyle;\r\n\r\n                        if (part.render.lineWidth) {\r\n                            c.lineWidth = part.render.lineWidth;\r\n                            c.strokeStyle = part.render.strokeStyle;\r\n                            c.stroke();\r\n                        }\r\n\r\n                        c.fill();\r\n                    } else {\r\n                        c.lineWidth = 1;\r\n                        c.strokeStyle = '#bbb';\r\n                        c.stroke();\r\n                    }\r\n                }\r\n\r\n                c.globalAlpha = 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Optimised method for drawing body wireframes in one pass\r\n     * @private\r\n     * @method bodyWireframes\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyWireframes = function(render, bodies, context) {\r\n        var c = context,\r\n            showInternalEdges = render.options.showInternalEdges,\r\n            body,\r\n            part,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        // render all bodies\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            // handle compound parts\r\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\r\n                part = body.parts[k];\r\n\r\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\r\n\r\n                for (j = 1; j < part.vertices.length; j++) {\r\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\r\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\r\n                    } else {\r\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\r\n                    }\r\n\r\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\r\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\r\n                    }\r\n                }\r\n\r\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\r\n            }\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.strokeStyle = '#bbb';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Optimised method for drawing body convex hull wireframes in one pass\r\n     * @private\r\n     * @method bodyConvexHulls\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyConvexHulls = function(render, bodies, context) {\r\n        var c = context,\r\n            body,\r\n            part,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        // render convex hulls\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible || body.parts.length === 1)\r\n                continue;\r\n\r\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\r\n\r\n            for (j = 1; j < body.vertices.length; j++) {\r\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\r\n            }\r\n\r\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Renders body vertex numbers.\r\n     * @private\r\n     * @method vertexNumbers\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.vertexNumbers = function(render, bodies, context) {\r\n        var c = context,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var parts = bodies[i].parts;\r\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\r\n                var part = parts[k];\r\n                for (j = 0; j < part.vertices.length; j++) {\r\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\r\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders mouse position.\r\n     * @private\r\n     * @method mousePosition\r\n     * @param {render} render\r\n     * @param {mouse} mouse\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.mousePosition = function(render, mouse, context) {\r\n        var c = context;\r\n        c.fillStyle = 'rgba(255,255,255,0.8)';\r\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\r\n    };\r\n\r\n    /**\r\n     * Draws body bounds\r\n     * @private\r\n     * @method bodyBounds\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyBounds = function(render, bodies, context) {\r\n        var c = context,\r\n            engine = render.engine,\r\n            options = render.options;\r\n\r\n        c.beginPath();\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.render.visible) {\r\n                var parts = bodies[i].parts;\r\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                    var part = parts[j];\r\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\r\n        } else {\r\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body angle indicators and axes\r\n     * @private\r\n     * @method bodyAxes\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyAxes = function(render, bodies, context) {\r\n        var c = context,\r\n            engine = render.engine,\r\n            options = render.options,\r\n            part,\r\n            i,\r\n            j,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                parts = body.parts;\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            if (options.showAxes) {\r\n                // render all axes\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                    part = parts[j];\r\n                    for (k = 0; k < part.axes.length; k++) {\r\n                        var axis = part.axes[k];\r\n                        c.moveTo(part.position.x, part.position.y);\r\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\r\n                    }\r\n                }\r\n            } else {\r\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                    part = parts[j];\r\n                    for (k = 0; k < part.axes.length; k++) {\r\n                        // render a single axis indicator\r\n                        c.moveTo(part.position.x, part.position.y);\r\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\r\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'indianred';\r\n            c.lineWidth = 1;\r\n        } else {\r\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\r\n            c.globalCompositeOperation = 'overlay';\r\n            c.lineWidth = 2;\r\n        }\r\n\r\n        c.stroke();\r\n        c.globalCompositeOperation = 'source-over';\r\n    };\r\n\r\n    /**\r\n     * Draws body positions\r\n     * @private\r\n     * @method bodyPositions\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyPositions = function(render, bodies, context) {\r\n        var c = context,\r\n            engine = render.engine,\r\n            options = render.options,\r\n            body,\r\n            part,\r\n            i,\r\n            k;\r\n\r\n        c.beginPath();\r\n\r\n        // render current positions\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            // handle compound parts\r\n            for (k = 0; k < body.parts.length; k++) {\r\n                part = body.parts[k];\r\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\r\n                c.closePath();\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.fillStyle = 'indianred';\r\n        } else {\r\n            c.fillStyle = 'rgba(0,0,0,0.5)';\r\n        }\r\n        c.fill();\r\n\r\n        c.beginPath();\r\n\r\n        // render previous positions\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n            if (body.render.visible) {\r\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\r\n                c.closePath();\r\n            }\r\n        }\r\n\r\n        c.fillStyle = 'rgba(255,165,0,0.8)';\r\n        c.fill();\r\n    };\r\n\r\n    /**\r\n     * Draws body velocity\r\n     * @private\r\n     * @method bodyVelocity\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyVelocity = function(render, bodies, context) {\r\n        var c = context;\r\n\r\n        c.beginPath();\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            c.moveTo(body.position.x, body.position.y);\r\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\r\n        }\r\n\r\n        c.lineWidth = 3;\r\n        c.strokeStyle = 'cornflowerblue';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body ids\r\n     * @private\r\n     * @method bodyIds\r\n     * @param {render} render\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyIds = function(render, bodies, context) {\r\n        var c = context,\r\n            i,\r\n            j;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            if (!bodies[i].render.visible)\r\n                continue;\r\n\r\n            var parts = bodies[i].parts;\r\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\r\n                var part = parts[j];\r\n                c.font = \"12px Arial\";\r\n                c.fillStyle = 'rgba(255,255,255,0.5)';\r\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method collisions\r\n     * @param {render} render\r\n     * @param {pair[]} pairs\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.collisions = function(render, pairs, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            pair,\r\n            collision,\r\n            corrected,\r\n            bodyA,\r\n            bodyB,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        // render collision positions\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n            for (j = 0; j < pair.activeContacts.length; j++) {\r\n                var contact = pair.activeContacts[j],\r\n                    vertex = contact.vertex;\r\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.fillStyle = 'rgba(255,255,255,0.7)';\r\n        } else {\r\n            c.fillStyle = 'orange';\r\n        }\r\n        c.fill();\r\n\r\n        c.beginPath();\r\n\r\n        // render collision normals\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n\r\n            if (pair.activeContacts.length > 0) {\r\n                var normalPosX = pair.activeContacts[0].vertex.x,\r\n                    normalPosY = pair.activeContacts[0].vertex.y;\r\n\r\n                if (pair.activeContacts.length === 2) {\r\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\r\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\r\n                }\r\n\r\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\r\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\r\n                } else {\r\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\r\n                }\r\n\r\n                c.lineTo(normalPosX, normalPosY);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\r\n        } else {\r\n            c.strokeStyle = 'orange';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method separations\r\n     * @param {render} render\r\n     * @param {pair[]} pairs\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.separations = function(render, pairs, context) {\r\n        var c = context,\r\n            options = render.options,\r\n            pair,\r\n            collision,\r\n            corrected,\r\n            bodyA,\r\n            bodyB,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        // render separations\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n\r\n            var k = 1;\r\n\r\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\r\n            if (bodyB.isStatic) k = 0;\r\n\r\n            c.moveTo(bodyB.position.x, bodyB.position.y);\r\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\r\n\r\n            k = 1;\r\n\r\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\r\n            if (bodyA.isStatic) k = 0;\r\n\r\n            c.moveTo(bodyA.position.x, bodyA.position.y);\r\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\r\n        } else {\r\n            c.strokeStyle = 'orange';\r\n        }\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method grid\r\n     * @param {render} render\r\n     * @param {grid} grid\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.grid = function(render, grid, context) {\r\n        var c = context,\r\n            options = render.options;\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\r\n        } else {\r\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\r\n        }\r\n\r\n        c.beginPath();\r\n\r\n        var bucketKeys = Common.keys(grid.buckets);\r\n\r\n        for (var i = 0; i < bucketKeys.length; i++) {\r\n            var bucketId = bucketKeys[i];\r\n\r\n            if (grid.buckets[bucketId].length < 2)\r\n                continue;\r\n\r\n            var region = bucketId.split(/C|R/);\r\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\r\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\r\n                grid.bucketWidth,\r\n                grid.bucketHeight);\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method inspector\r\n     * @param {inspector} inspector\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.inspector = function(inspector, context) {\r\n        var engine = inspector.engine,\r\n            selected = inspector.selected,\r\n            render = inspector.render,\r\n            options = render.options,\r\n            bounds;\r\n\r\n        if (options.hasBounds) {\r\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n                boundsScaleX = boundsWidth / render.options.width,\r\n                boundsScaleY = boundsHeight / render.options.height;\r\n\r\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\r\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\r\n        }\r\n\r\n        for (var i = 0; i < selected.length; i++) {\r\n            var item = selected[i].data;\r\n\r\n            context.translate(0.5, 0.5);\r\n            context.lineWidth = 1;\r\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\r\n            context.setLineDash([1,2]);\r\n\r\n            switch (item.type) {\r\n\r\n            case 'body':\r\n\r\n                // render body selections\r\n                bounds = item.bounds;\r\n                context.beginPath();\r\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\r\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\r\n                context.closePath();\r\n                context.stroke();\r\n\r\n                break;\r\n\r\n            case 'constraint':\r\n\r\n                // render constraint selections\r\n                var point = item.pointA;\r\n                if (item.bodyA)\r\n                    point = item.pointB;\r\n                context.beginPath();\r\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\r\n                context.closePath();\r\n                context.stroke();\r\n\r\n                break;\r\n\r\n            }\r\n\r\n            context.setLineDash([]);\r\n            context.translate(-0.5, -0.5);\r\n        }\r\n\r\n        // render selection region\r\n        if (inspector.selectStart !== null) {\r\n            context.translate(0.5, 0.5);\r\n            context.lineWidth = 1;\r\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\r\n            context.fillStyle = 'rgba(255,165,0,0.1)';\r\n            bounds = inspector.selectBounds;\r\n            context.beginPath();\r\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\r\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\r\n            context.closePath();\r\n            context.stroke();\r\n            context.fill();\r\n            context.translate(-0.5, -0.5);\r\n        }\r\n\r\n        if (options.hasBounds)\r\n            context.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    /**\r\n     * Updates render timing.\r\n     * @method _updateTiming\r\n     * @private\r\n     * @param {render} render\r\n     * @param {number} time\r\n     */\r\n    var _updateTiming = function(render, time) {\r\n        var engine = render.engine,\r\n            timing = render.timing,\r\n            historySize = timing.historySize,\r\n            timestamp = engine.timing.timestamp;\r\n\r\n        timing.delta = time - timing.lastTime || Render._goodDelta;\r\n        timing.lastTime = time;\r\n\r\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\r\n        timing.lastTimestamp = timestamp;\r\n\r\n        timing.deltaHistory.unshift(timing.delta);\r\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\r\n\r\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\r\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\r\n\r\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\r\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\r\n\r\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\r\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\r\n\r\n        timing.elapsedHistory.unshift(timing.lastElapsed);\r\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\r\n    };\r\n\r\n    /**\r\n     * Returns the mean value of the given numbers.\r\n     * @method _mean\r\n     * @private\r\n     * @param {Number[]} values\r\n     * @return {Number} the mean of given values\r\n     */\r\n    var _mean = function(values) {\r\n        var result = 0;\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            result += values[i];\r\n        }\r\n        return (result / values.length) || 0;\r\n    };\r\n\r\n    /**\r\n     * @method _createCanvas\r\n     * @private\r\n     * @param {} width\r\n     * @param {} height\r\n     * @return canvas\r\n     */\r\n    var _createCanvas = function(width, height) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        canvas.oncontextmenu = function() { return false; };\r\n        canvas.onselectstart = function() { return false; };\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Gets the pixel ratio of the canvas.\r\n     * @method _getPixelRatio\r\n     * @private\r\n     * @param {HTMLElement} canvas\r\n     * @return {Number} pixel ratio\r\n     */\r\n    var _getPixelRatio = function(canvas) {\r\n        var context = canvas.getContext('2d'),\r\n            devicePixelRatio = window.devicePixelRatio || 1,\r\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\r\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\r\n                                      || context.backingStorePixelRatio || 1;\r\n\r\n        return devicePixelRatio / backingStorePixelRatio;\r\n    };\r\n\r\n    /**\r\n     * Gets the requested texture (an Image) via its path\r\n     * @method _getTexture\r\n     * @private\r\n     * @param {render} render\r\n     * @param {string} imagePath\r\n     * @return {Image} texture\r\n     */\r\n    var _getTexture = function(render, imagePath) {\r\n        var image = render.textures[imagePath];\r\n\r\n        if (image)\r\n            return image;\r\n\r\n        image = render.textures[imagePath] = new Image();\r\n        image.src = imagePath;\r\n\r\n        return image;\r\n    };\r\n\r\n    /**\r\n     * Applies the background to the canvas using CSS.\r\n     * @method applyBackground\r\n     * @private\r\n     * @param {render} render\r\n     * @param {string} background\r\n     */\r\n    var _applyBackground = function(render, background) {\r\n        var cssBackground = background;\r\n\r\n        if (/(jpg|gif|png)$/.test(background))\r\n            cssBackground = 'url(' + background + ')';\r\n\r\n        render.canvas.style.background = cssBackground;\r\n        render.canvas.style.backgroundSize = \"contain\";\r\n        render.currentBackground = background;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired before rendering\r\n    *\r\n    * @event beforeRender\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after rendering\r\n    *\r\n    * @event afterRender\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A back-reference to the `Matter.Render` module.\r\n     *\r\n     * @property controller\r\n     * @type render\r\n     */\r\n\r\n    /**\r\n     * A reference to the `Matter.Engine` instance to be used.\r\n     *\r\n     * @property engine\r\n     * @type engine\r\n     */\r\n\r\n    /**\r\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\r\n     *\r\n     * @property element\r\n     * @type HTMLElement\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\r\n     *\r\n     * @property canvas\r\n     * @type HTMLCanvasElement\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that specifies the drawing view region.\r\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\r\n     * This allows for creating views that can pan or zoom around the scene.\r\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n    /**\r\n     * The 2d rendering context from the `render.canvas` element.\r\n     *\r\n     * @property context\r\n     * @type CanvasRenderingContext2D\r\n     */\r\n\r\n    /**\r\n     * The sprite texture cache.\r\n     *\r\n     * @property textures\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * The mouse to render if `render.options.showMousePosition` is enabled.\r\n     *\r\n     * @property mouse\r\n     * @type mouse\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The configuration options of the renderer.\r\n     *\r\n     * @property options\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * The target width in pixels of the `render.canvas` to be created.\r\n     * See also the `options.pixelRatio` property to change render quality.\r\n     *\r\n     * @property options.width\r\n     * @type number\r\n     * @default 800\r\n     */\r\n\r\n    /**\r\n     * The target height in pixels of the `render.canvas` to be created.\r\n     * See also the `options.pixelRatio` property to change render quality.\r\n     *\r\n     * @property options.height\r\n     * @type number\r\n     * @default 600\r\n     */\r\n\r\n    /**\r\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\r\n     *\r\n     * @property options.pixelRatio\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\r\n     * This may be also set to `'transparent'` or equivalent.\r\n     *\r\n     * @property options.background\r\n     * @type string\r\n     * @default '#14151f'\r\n     */\r\n\r\n    /**\r\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\r\n     * This may be also set to `'transparent'` or equivalent.\r\n     *\r\n     * @property options.wireframeBackground\r\n     * @type string\r\n     * @default '#14151f'\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies if `render.bounds` should be used when rendering.\r\n     *\r\n     * @property options.hasBounds\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable all debug information overlays together.  \r\n     * This includes and has priority over the values of:\r\n     *\r\n     * - `render.options.showStats`\r\n     * - `render.options.showPerformance`\r\n     *\r\n     * @property options.showDebug\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the engine stats info overlay.  \r\n     * From left to right, the values shown are:\r\n     *\r\n     * - body parts total\r\n     * - body total\r\n     * - constraints total\r\n     * - composites total\r\n     * - collision pairs total\r\n     *\r\n     * @property options.showStats\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable performance charts.  \r\n     * From left to right, the values shown are:\r\n     *\r\n     * - average render frequency (e.g. 60 fps)\r\n     * - exact engine delta time used for last update (e.g. 16.66ms)\r\n     * - average engine execution duration (e.g. 5.00ms)\r\n     * - average render execution duration (e.g. 0.40ms)\r\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\r\n     *\r\n     * Each value is recorded over a fixed sample of past frames (60 frames).\r\n     *\r\n     * A chart shown below each value indicates the variance from the average over the sample.\r\n     * The more stable or fixed the value is the flatter the chart will appear.\r\n     *\r\n     * @property options.showPerformance\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n    \r\n    /**\r\n     * A flag to enable or disable rendering entirely.\r\n     *\r\n     * @property options.enabled\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\r\n     *\r\n     * @property options.wireframes\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable sleeping bodies indicators.\r\n     *\r\n     * @property options.showSleeping\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the debug information overlay.\r\n     *\r\n     * @property options.showDebug\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the collision broadphase debug overlay.\r\n     *\r\n     * @property options.showBroadphase\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body bounds debug overlay.\r\n     *\r\n     * @property options.showBounds\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body velocity debug overlay.\r\n     *\r\n     * @property options.showVelocity\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body collisions debug overlay.\r\n     *\r\n     * @property options.showCollisions\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the collision resolver separations debug overlay.\r\n     *\r\n     * @property options.showSeparations\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body axes debug overlay.\r\n     *\r\n     * @property options.showAxes\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body positions debug overlay.\r\n     *\r\n     * @property options.showPositions\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body angle debug overlay.\r\n     *\r\n     * @property options.showAngleIndicator\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body and part ids debug overlay.\r\n     *\r\n     * @property options.showIds\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body vertex numbers debug overlay.\r\n     *\r\n     * @property options.showVertexNumbers\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body convex hulls debug overlay.\r\n     *\r\n     * @property options.showConvexHulls\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the body internal edges debug overlay.\r\n     *\r\n     * @property options.showInternalEdges\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag to enable or disable the mouse position debug overlay.\r\n     *\r\n     * @property options.showMousePosition\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 17 */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\r\n*\r\n* @class Contact\r\n*/\r\n\r\nvar Contact = {};\r\n\r\nmodule.exports = Contact;\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new contact.\r\n     * @method create\r\n     * @param {vertex} vertex\r\n     * @return {contact} A new contact\r\n     */\r\n    Contact.create = function(vertex) {\r\n        return {\r\n            id: Contact.id(vertex),\r\n            vertex: vertex,\r\n            normalImpulse: 0,\r\n            tangentImpulse: 0\r\n        };\r\n    };\r\n    \r\n    /**\r\n     * Generates a contact id.\r\n     * @method id\r\n     * @param {vertex} vertex\r\n     * @return {string} Unique contactID\r\n     */\r\n    Contact.id = function(vertex) {\r\n        return vertex.body.id + '_' + vertex.index;\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 18 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\r\n* An engine is a controller that manages updating the simulation of the world.\r\n* See `Matter.Runner` for an optional game loop utility.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Engine\r\n*/\r\n\r\nvar Engine = {};\r\n\r\nmodule.exports = Engine;\r\n\r\nvar Sleeping = __webpack_require__(7);\r\nvar Resolver = __webpack_require__(19);\r\nvar Detector = __webpack_require__(13);\r\nvar Pairs = __webpack_require__(20);\r\nvar Grid = __webpack_require__(21);\r\nvar Events = __webpack_require__(4);\r\nvar Composite = __webpack_require__(5);\r\nvar Constraint = __webpack_require__(8);\r\nvar Common = __webpack_require__(0);\r\nvar Body = __webpack_require__(6);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {object} [options]\r\n     * @return {engine} engine\r\n     */\r\n    Engine.create = function(options) {\r\n        options = options || {};\r\n\r\n        var defaults = {\r\n            positionIterations: 6,\r\n            velocityIterations: 4,\r\n            constraintIterations: 2,\r\n            enableSleeping: false,\r\n            events: [],\r\n            plugin: {},\r\n            grid: null,\r\n            gravity: {\r\n                x: 0,\r\n                y: 1,\r\n                scale: 0.001\r\n            },\r\n            timing: {\r\n                timestamp: 0,\r\n                timeScale: 1,\r\n                lastDelta: 0,\r\n                lastElapsed: 0\r\n            }\r\n        };\r\n\r\n        var engine = Common.extend(defaults, options);\r\n\r\n        engine.world = options.world || Composite.create({ label: 'World' });\r\n        engine.grid = Grid.create(options.grid || options.broadphase);\r\n        engine.pairs = Pairs.create();\r\n\r\n        // temporary back compatibility\r\n        engine.world.gravity = engine.gravity;\r\n        engine.broadphase = engine.grid;\r\n        engine.metrics = {};\r\n        \r\n        return engine;\r\n    };\r\n\r\n    /**\r\n     * Moves the simulation forward in time by `delta` ms.\r\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\r\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\r\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\r\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\r\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\r\n     *\r\n     * Triggers `beforeUpdate` and `afterUpdate` events.\r\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\r\n     * @method update\r\n     * @param {engine} engine\r\n     * @param {number} [delta=16.666]\r\n     * @param {number} [correction=1]\r\n     */\r\n    Engine.update = function(engine, delta, correction) {\r\n        var startTime = Common.now();\r\n\r\n        delta = delta || 1000 / 60;\r\n        correction = correction || 1;\r\n\r\n        var world = engine.world,\r\n            timing = engine.timing,\r\n            grid = engine.grid,\r\n            gridPairs = [],\r\n            i;\r\n\r\n        // increment timestamp\r\n        timing.timestamp += delta * timing.timeScale;\r\n        timing.lastDelta = delta * timing.timeScale;\r\n\r\n        // create an event object\r\n        var event = {\r\n            timestamp: timing.timestamp\r\n        };\r\n\r\n        Events.trigger(engine, 'beforeUpdate', event);\r\n\r\n        // get lists of all bodies and constraints, no matter what composites they are in\r\n        var allBodies = Composite.allBodies(world),\r\n            allConstraints = Composite.allConstraints(world);\r\n\r\n        // if sleeping enabled, call the sleeping controller\r\n        if (engine.enableSleeping)\r\n            Sleeping.update(allBodies, timing.timeScale);\r\n\r\n        // applies gravity to all bodies\r\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\r\n\r\n        // update all body position and rotation by integration\r\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\r\n\r\n        // update all constraints (first pass)\r\n        Constraint.preSolveAll(allBodies);\r\n        for (i = 0; i < engine.constraintIterations; i++) {\r\n            Constraint.solveAll(allConstraints, timing.timeScale);\r\n        }\r\n        Constraint.postSolveAll(allBodies);\r\n\r\n        // broadphase pass: find potential collision pairs\r\n\r\n        // if world is dirty, we must flush the whole grid\r\n        if (world.isModified)\r\n            Grid.clear(grid);\r\n\r\n        // update the grid buckets based on current bodies\r\n        Grid.update(grid, allBodies, engine, world.isModified);\r\n        gridPairs = grid.pairsList;\r\n\r\n        // clear all composite modified flags\r\n        if (world.isModified) {\r\n            Composite.setModified(world, false, false, true);\r\n        }\r\n\r\n        // narrowphase pass: find actual collisions, then create or update collision pairs\r\n        var collisions = Detector.collisions(gridPairs, engine);\r\n\r\n        // update collision pairs\r\n        var pairs = engine.pairs,\r\n            timestamp = timing.timestamp;\r\n        Pairs.update(pairs, collisions, timestamp);\r\n        Pairs.removeOld(pairs, timestamp);\r\n\r\n        // wake up bodies involved in collisions\r\n        if (engine.enableSleeping)\r\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\r\n\r\n        // trigger collision events\r\n        if (pairs.collisionStart.length > 0)\r\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\r\n\r\n        // iteratively resolve position between collisions\r\n        Resolver.preSolvePosition(pairs.list);\r\n        for (i = 0; i < engine.positionIterations; i++) {\r\n            Resolver.solvePosition(pairs.list, timing.timeScale);\r\n        }\r\n        Resolver.postSolvePosition(allBodies);\r\n\r\n        // update all constraints (second pass)\r\n        Constraint.preSolveAll(allBodies);\r\n        for (i = 0; i < engine.constraintIterations; i++) {\r\n            Constraint.solveAll(allConstraints, timing.timeScale);\r\n        }\r\n        Constraint.postSolveAll(allBodies);\r\n\r\n        // iteratively resolve velocity between collisions\r\n        Resolver.preSolveVelocity(pairs.list);\r\n        for (i = 0; i < engine.velocityIterations; i++) {\r\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\r\n        }\r\n\r\n        // trigger collision events\r\n        if (pairs.collisionActive.length > 0)\r\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\r\n\r\n        if (pairs.collisionEnd.length > 0)\r\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\r\n\r\n        // clear force buffers\r\n        Engine._bodiesClearForces(allBodies);\r\n\r\n        Events.trigger(engine, 'afterUpdate', event);\r\n\r\n        // log the time elapsed computing this update\r\n        engine.timing.lastElapsed = Common.now() - startTime;\r\n\r\n        return engine;\r\n    };\r\n    \r\n    /**\r\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\r\n     * @method merge\r\n     * @param {engine} engineA\r\n     * @param {engine} engineB\r\n     */\r\n    Engine.merge = function(engineA, engineB) {\r\n        Common.extend(engineA, engineB);\r\n        \r\n        if (engineB.world) {\r\n            engineA.world = engineB.world;\r\n\r\n            Engine.clear(engineA);\r\n\r\n            var bodies = Composite.allBodies(engineA.world);\r\n\r\n            for (var i = 0; i < bodies.length; i++) {\r\n                var body = bodies[i];\r\n                Sleeping.set(body, false);\r\n                body.id = Common.nextId();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears the engine including the world, pairs and broadphase.\r\n     * @method clear\r\n     * @param {engine} engine\r\n     */\r\n    Engine.clear = function(engine) {\r\n        var world = engine.world,\r\n            bodies = Composite.allBodies(world);\r\n\r\n        Pairs.clear(engine.pairs);\r\n        Grid.clear(engine.grid);\r\n        Grid.update(engine.grid, bodies, engine, true);\r\n    };\r\n\r\n    /**\r\n     * Zeroes the `body.force` and `body.torque` force buffers.\r\n     * @method _bodiesClearForces\r\n     * @private\r\n     * @param {body[]} bodies\r\n     */\r\n    Engine._bodiesClearForces = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            // reset force buffers\r\n            body.force.x = 0;\r\n            body.force.y = 0;\r\n            body.torque = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applys a mass dependant force to all given bodies.\r\n     * @method _bodiesApplyGravity\r\n     * @private\r\n     * @param {body[]} bodies\r\n     * @param {vector} gravity\r\n     */\r\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\r\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\r\n\r\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\r\n            return;\r\n        }\r\n        \r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isStatic || body.isSleeping)\r\n                continue;\r\n\r\n            // apply gravity\r\n            body.force.y += body.mass * gravity.y * gravityScale;\r\n            body.force.x += body.mass * gravity.x * gravityScale;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applys `Body.update` to all given `bodies`.\r\n     * @method _bodiesUpdate\r\n     * @private\r\n     * @param {body[]} bodies\r\n     * @param {number} deltaTime \r\n     * The amount of time elapsed between updates\r\n     * @param {number} timeScale\r\n     * @param {number} correction \r\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\r\n     * @param {bounds} worldBounds\r\n     */\r\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isStatic || body.isSleeping)\r\n                continue;\r\n\r\n            Body.update(body, deltaTime, timeScale, correction);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\r\n     * @deprecated use Matter.Runner.run(engine) instead\r\n     * @method run\r\n     * @param {engine} engine\r\n     */\r\n\r\n    /**\r\n    * Fired just before an update\r\n    *\r\n    * @event beforeUpdate\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update and all collision events\r\n    *\r\n    * @event afterUpdate\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\r\n    *\r\n    * @event collisionStart\r\n    * @param {} event An event object\r\n    * @param {} event.pairs List of affected pairs\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\r\n    *\r\n    * @event collisionActive\r\n    * @param {} event An event object\r\n    * @param {} event.pairs List of affected pairs\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\r\n    *\r\n    * @event collisionEnd\r\n    * @param {} event An event object\r\n    * @param {} event.pairs List of affected pairs\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` that specifies the number of position iterations to perform each update.\r\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\r\n     *\r\n     * @property positionIterations\r\n     * @type number\r\n     * @default 6\r\n     */\r\n\r\n    /**\r\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\r\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\r\n     *\r\n     * @property velocityIterations\r\n     * @type number\r\n     * @default 4\r\n     */\r\n\r\n    /**\r\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\r\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\r\n     * The default value of `2` is usually very adequate.\r\n     *\r\n     * @property constraintIterations\r\n     * @type number\r\n     * @default 2\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\r\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\r\n     *\r\n     * @property enableSleeping\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * An `Object` containing properties regarding the timing systems of the engine. \r\n     *\r\n     * @property timing\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the global scaling factor of time for all bodies.\r\n     * A value of `0` freezes the simulation.\r\n     * A value of `0.1` gives a slow-motion effect.\r\n     * A value of `1.2` gives a speed-up effect.\r\n     *\r\n     * @property timing.timeScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \r\n     * It is incremented on every `Engine.update` by the given `delta` argument. \r\n     *\r\n     * @property timing.timestamp\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\r\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\r\n     *\r\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\r\n     *\r\n     * @property timing.lastElapsed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that represents the `delta` value used in the last engine update.\r\n     *\r\n     * @property timing.lastDelta\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Matter.Grid` instance.\r\n     *\r\n     * @property grid\r\n     * @type grid\r\n     * @default a Matter.Grid instance\r\n     */\r\n\r\n    /**\r\n     * Replaced by and now alias for `engine.grid`.\r\n     *\r\n     * @deprecated use `engine.grid`\r\n     * @property broadphase\r\n     * @type grid\r\n     * @default a Matter.Grid instance\r\n     */\r\n\r\n    /**\r\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\r\n     *\r\n     * @property world\r\n     * @type composite\r\n     * @default a Matter.Composite instance\r\n     */\r\n\r\n    /**\r\n     * An object reserved for storing plugin-specific properties.\r\n     *\r\n     * @property plugin\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * The gravity to apply on all bodies in `engine.world`.\r\n     *\r\n     * @property gravity\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * The gravity x component.\r\n     *\r\n     * @property gravity.x\r\n     * @type object\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * The gravity y component.\r\n     *\r\n     * @property gravity.y\r\n     * @type object\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * The gravity scale factor.\r\n     *\r\n     * @property gravity.scale\r\n     * @type object\r\n     * @default 0.001\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 19 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\r\n*\r\n* @class Resolver\r\n*/\r\n\r\nvar Resolver = {};\r\n\r\nmodule.exports = Resolver;\r\n\r\nvar Vertices = __webpack_require__(3);\r\nvar Vector = __webpack_require__(2);\r\nvar Common = __webpack_require__(0);\r\nvar Bounds = __webpack_require__(1);\r\n\r\n(function() {\r\n\r\n    Resolver._restingThresh = 4;\r\n    Resolver._restingThreshTangent = 6;\r\n    Resolver._positionDampen = 0.9;\r\n    Resolver._positionWarming = 0.8;\r\n    Resolver._frictionNormalMultiplier = 5;\r\n\r\n    /**\r\n     * Prepare pairs for position solving.\r\n     * @method preSolvePosition\r\n     * @param {pair[]} pairs\r\n     */\r\n    Resolver.preSolvePosition = function(pairs) {\r\n        var i,\r\n            pair,\r\n            activeCount;\r\n\r\n        // find total contacts on each body\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            \r\n            if (!pair.isActive)\r\n                continue;\r\n            \r\n            activeCount = pair.activeContacts.length;\r\n            pair.collision.parentA.totalContacts += activeCount;\r\n            pair.collision.parentB.totalContacts += activeCount;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Find a solution for pair positions.\r\n     * @method solvePosition\r\n     * @param {pair[]} pairs\r\n     * @param {number} timeScale\r\n     */\r\n    Resolver.solvePosition = function(pairs, timeScale) {\r\n        var i,\r\n            pair,\r\n            collision,\r\n            bodyA,\r\n            bodyB,\r\n            normal,\r\n            bodyBtoA,\r\n            contactShare,\r\n            positionImpulse,\r\n            contactCount = {},\r\n            tempA = Vector._temp[0],\r\n            tempB = Vector._temp[1],\r\n            tempC = Vector._temp[2],\r\n            tempD = Vector._temp[3];\r\n\r\n        // find impulses required to resolve penetration\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            \r\n            if (!pair.isActive || pair.isSensor)\r\n                continue;\r\n\r\n            collision = pair.collision;\r\n            bodyA = collision.parentA;\r\n            bodyB = collision.parentB;\r\n            normal = collision.normal;\r\n\r\n            // get current separation between body edges involved in collision\r\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \r\n                Vector.add(bodyA.positionImpulse, \r\n                    Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\r\n\r\n            pair.separation = Vector.dot(normal, bodyBtoA);\r\n        }\r\n        \r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n\r\n            if (!pair.isActive || pair.isSensor)\r\n                continue;\r\n            \r\n            collision = pair.collision;\r\n            bodyA = collision.parentA;\r\n            bodyB = collision.parentB;\r\n            normal = collision.normal;\r\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\r\n\r\n            if (bodyA.isStatic || bodyB.isStatic)\r\n                positionImpulse *= 2;\r\n            \r\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\r\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\r\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\r\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\r\n            }\r\n\r\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\r\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\r\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\r\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Apply position resolution.\r\n     * @method postSolvePosition\r\n     * @param {body[]} bodies\r\n     */\r\n    Resolver.postSolvePosition = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            // reset contact count\r\n            body.totalContacts = 0;\r\n\r\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\r\n                // update body geometry\r\n                for (var j = 0; j < body.parts.length; j++) {\r\n                    var part = body.parts[j];\r\n                    Vertices.translate(part.vertices, body.positionImpulse);\r\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\r\n                    part.position.x += body.positionImpulse.x;\r\n                    part.position.y += body.positionImpulse.y;\r\n                }\r\n\r\n                // move the body without changing velocity\r\n                body.positionPrev.x += body.positionImpulse.x;\r\n                body.positionPrev.y += body.positionImpulse.y;\r\n\r\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\r\n                    // reset cached impulse if the body has velocity along it\r\n                    body.positionImpulse.x = 0;\r\n                    body.positionImpulse.y = 0;\r\n                } else {\r\n                    // warm the next iteration\r\n                    body.positionImpulse.x *= Resolver._positionWarming;\r\n                    body.positionImpulse.y *= Resolver._positionWarming;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Prepare pairs for velocity solving.\r\n     * @method preSolveVelocity\r\n     * @param {pair[]} pairs\r\n     */\r\n    Resolver.preSolveVelocity = function(pairs) {\r\n        var i,\r\n            j,\r\n            pair,\r\n            contacts,\r\n            collision,\r\n            bodyA,\r\n            bodyB,\r\n            normal,\r\n            tangent,\r\n            contact,\r\n            contactVertex,\r\n            normalImpulse,\r\n            tangentImpulse,\r\n            offset,\r\n            impulse = Vector._temp[0],\r\n            tempA = Vector._temp[1];\r\n        \r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            \r\n            if (!pair.isActive || pair.isSensor)\r\n                continue;\r\n            \r\n            contacts = pair.activeContacts;\r\n            collision = pair.collision;\r\n            bodyA = collision.parentA;\r\n            bodyB = collision.parentB;\r\n            normal = collision.normal;\r\n            tangent = collision.tangent;\r\n\r\n            // resolve each contact\r\n            for (j = 0; j < contacts.length; j++) {\r\n                contact = contacts[j];\r\n                contactVertex = contact.vertex;\r\n                normalImpulse = contact.normalImpulse;\r\n                tangentImpulse = contact.tangentImpulse;\r\n\r\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\r\n                    // total impulse from contact\r\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\r\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\r\n                    \r\n                    // apply impulse from contact\r\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\r\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\r\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\r\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\r\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\r\n                    }\r\n\r\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\r\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\r\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\r\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\r\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Find a solution for pair velocities.\r\n     * @method solveVelocity\r\n     * @param {pair[]} pairs\r\n     * @param {number} timeScale\r\n     */\r\n    Resolver.solveVelocity = function(pairs, timeScale) {\r\n        var timeScaleSquared = timeScale * timeScale,\r\n            impulse = Vector._temp[0],\r\n            tempA = Vector._temp[1],\r\n            tempB = Vector._temp[2],\r\n            tempC = Vector._temp[3],\r\n            tempD = Vector._temp[4],\r\n            tempE = Vector._temp[5];\r\n        \r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var pair = pairs[i];\r\n            \r\n            if (!pair.isActive || pair.isSensor)\r\n                continue;\r\n            \r\n            var collision = pair.collision,\r\n                bodyA = collision.parentA,\r\n                bodyB = collision.parentB,\r\n                normal = collision.normal,\r\n                tangent = collision.tangent,\r\n                contacts = pair.activeContacts,\r\n                contactShare = 1 / contacts.length;\r\n\r\n            // update body velocities\r\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\r\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\r\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\r\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\r\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\r\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\r\n\r\n            // resolve each contact\r\n            for (var j = 0; j < contacts.length; j++) {\r\n                var contact = contacts[j],\r\n                    contactVertex = contact.vertex,\r\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\r\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\r\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\r\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \r\n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\r\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\r\n\r\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\r\n                    tangentSpeed = Math.abs(tangentVelocity),\r\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\r\n\r\n                // raw impulses\r\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\r\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\r\n\r\n                // coulomb friction\r\n                var tangentImpulse = tangentVelocity,\r\n                    maxFriction = Infinity;\r\n\r\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\r\n                    maxFriction = tangentSpeed;\r\n                    tangentImpulse = Common.clamp(\r\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\r\n                        -maxFriction, maxFriction\r\n                    );\r\n                }\r\n\r\n                // modify impulses accounting for mass, inertia and offset\r\n                var oAcN = Vector.cross(offsetA, normal),\r\n                    oBcN = Vector.cross(offsetB, normal),\r\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\r\n\r\n                normalImpulse *= share;\r\n                tangentImpulse *= share;\r\n\r\n                // handle high velocity and resting collisions separately\r\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\r\n                    // high normal velocity so clear cached contact normal impulse\r\n                    contact.normalImpulse = 0;\r\n                } else {\r\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\r\n                    // impulse constraint tends to 0\r\n                    var contactNormalImpulse = contact.normalImpulse;\r\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\r\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\r\n                }\r\n\r\n                // handle high velocity and resting collisions separately\r\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\r\n                    // high tangent velocity so clear cached contact tangent impulse\r\n                    contact.tangentImpulse = 0;\r\n                } else {\r\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\r\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\r\n                    var contactTangentImpulse = contact.tangentImpulse;\r\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\r\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\r\n                }\r\n\r\n                // total impulse from contact\r\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\r\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\r\n                \r\n                // apply impulse from contact\r\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\r\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\r\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\r\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\r\n                }\r\n\r\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\r\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\r\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\r\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 20 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\r\n*\r\n* @class Pairs\r\n*/\r\n\r\nvar Pairs = {};\r\n\r\nmodule.exports = Pairs;\r\n\r\nvar Pair = __webpack_require__(9);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n    \r\n    Pairs._pairMaxIdleLife = 1000;\r\n\r\n    /**\r\n     * Creates a new pairs structure.\r\n     * @method create\r\n     * @param {object} options\r\n     * @return {pairs} A new pairs structure\r\n     */\r\n    Pairs.create = function(options) {\r\n        return Common.extend({ \r\n            table: {},\r\n            list: [],\r\n            collisionStart: [],\r\n            collisionActive: [],\r\n            collisionEnd: []\r\n        }, options);\r\n    };\r\n\r\n    /**\r\n     * Updates pairs given a list of collisions.\r\n     * @method update\r\n     * @param {object} pairs\r\n     * @param {collision[]} collisions\r\n     * @param {number} timestamp\r\n     */\r\n    Pairs.update = function(pairs, collisions, timestamp) {\r\n        var pairsList = pairs.list,\r\n            pairsTable = pairs.table,\r\n            collisionStart = pairs.collisionStart,\r\n            collisionEnd = pairs.collisionEnd,\r\n            collisionActive = pairs.collisionActive,\r\n            collision,\r\n            pairId,\r\n            pair,\r\n            i;\r\n\r\n        // clear collision state arrays, but maintain old reference\r\n        collisionStart.length = 0;\r\n        collisionEnd.length = 0;\r\n        collisionActive.length = 0;\r\n\r\n        for (i = 0; i < pairsList.length; i++) {\r\n            pairsList[i].confirmedActive = false;\r\n        }\r\n\r\n        for (i = 0; i < collisions.length; i++) {\r\n            collision = collisions[i];\r\n\r\n            if (collision.collided) {\r\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\r\n\r\n                pair = pairsTable[pairId];\r\n                \r\n                if (pair) {\r\n                    // pair already exists (but may or may not be active)\r\n                    if (pair.isActive) {\r\n                        // pair exists and is active\r\n                        collisionActive.push(pair);\r\n                    } else {\r\n                        // pair exists but was inactive, so a collision has just started again\r\n                        collisionStart.push(pair);\r\n                    }\r\n\r\n                    // update the pair\r\n                    Pair.update(pair, collision, timestamp);\r\n                    pair.confirmedActive = true;\r\n                } else {\r\n                    // pair did not exist, create a new pair\r\n                    pair = Pair.create(collision, timestamp);\r\n                    pairsTable[pairId] = pair;\r\n\r\n                    // push the new pair\r\n                    collisionStart.push(pair);\r\n                    pairsList.push(pair);\r\n                }\r\n            }\r\n        }\r\n\r\n        // deactivate previously active pairs that are now inactive\r\n        for (i = 0; i < pairsList.length; i++) {\r\n            pair = pairsList[i];\r\n            if (pair.isActive && !pair.confirmedActive) {\r\n                Pair.setActive(pair, false, timestamp);\r\n                collisionEnd.push(pair);\r\n            }\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Finds and removes pairs that have been inactive for a set amount of time.\r\n     * @method removeOld\r\n     * @param {object} pairs\r\n     * @param {number} timestamp\r\n     */\r\n    Pairs.removeOld = function(pairs, timestamp) {\r\n        var pairsList = pairs.list,\r\n            pairsTable = pairs.table,\r\n            indexesToRemove = [],\r\n            pair,\r\n            collision,\r\n            pairIndex,\r\n            i;\r\n\r\n        for (i = 0; i < pairsList.length; i++) {\r\n            pair = pairsList[i];\r\n            collision = pair.collision;\r\n            \r\n            // never remove sleeping pairs\r\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\r\n                pair.timeUpdated = timestamp;\r\n                continue;\r\n            }\r\n\r\n            // if pair is inactive for too long, mark it to be removed\r\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\r\n                indexesToRemove.push(i);\r\n            }\r\n        }\r\n\r\n        // remove marked pairs\r\n        for (i = 0; i < indexesToRemove.length; i++) {\r\n            pairIndex = indexesToRemove[i] - i;\r\n            pair = pairsList[pairIndex];\r\n            delete pairsTable[pair.id];\r\n            pairsList.splice(pairIndex, 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears the given pairs structure.\r\n     * @method clear\r\n     * @param {pairs} pairs\r\n     * @return {pairs} pairs\r\n     */\r\n    Pairs.clear = function(pairs) {\r\n        pairs.table = {};\r\n        pairs.list.length = 0;\r\n        pairs.collisionStart.length = 0;\r\n        pairs.collisionActive.length = 0;\r\n        pairs.collisionEnd.length = 0;\r\n        return pairs;\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 21 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\r\n*\r\n* @class Grid\r\n*/\r\n\r\nvar Grid = {};\r\n\r\nmodule.exports = Grid;\r\n\r\nvar Pair = __webpack_require__(9);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new grid.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {grid} A new grid\r\n     */\r\n    Grid.create = function(options) {\r\n        var defaults = {\r\n            buckets: {},\r\n            pairs: {},\r\n            pairsList: [],\r\n            bucketWidth: 48,\r\n            bucketHeight: 48\r\n        };\r\n\r\n        return Common.extend(defaults, options);\r\n    };\r\n\r\n    /**\r\n     * The width of a single grid bucket.\r\n     *\r\n     * @property bucketWidth\r\n     * @type number\r\n     * @default 48\r\n     */\r\n\r\n    /**\r\n     * The height of a single grid bucket.\r\n     *\r\n     * @property bucketHeight\r\n     * @type number\r\n     * @default 48\r\n     */\r\n\r\n    /**\r\n     * Updates the grid.\r\n     * @method update\r\n     * @param {grid} grid\r\n     * @param {body[]} bodies\r\n     * @param {engine} engine\r\n     * @param {boolean} forceUpdate\r\n     */\r\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\r\n        var i, col, row,\r\n            world = engine.world,\r\n            buckets = grid.buckets,\r\n            bucket,\r\n            bucketId,\r\n            gridChanged = false;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isSleeping && !forceUpdate)\r\n                continue;\r\n\r\n            // temporary back compatibility bounds check\r\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\r\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\r\n                continue;\r\n\r\n            var newRegion = Grid._getRegion(grid, body);\r\n\r\n            // if the body has changed grid region\r\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\r\n\r\n                if (!body.region || forceUpdate)\r\n                    body.region = newRegion;\r\n\r\n                var union = Grid._regionUnion(newRegion, body.region);\r\n\r\n                // update grid buckets affected by region change\r\n                // iterate over the union of both regions\r\n                for (col = union.startCol; col <= union.endCol; col++) {\r\n                    for (row = union.startRow; row <= union.endRow; row++) {\r\n                        bucketId = Grid._getBucketId(col, row);\r\n                        bucket = buckets[bucketId];\r\n\r\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\r\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\r\n\r\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\r\n                                                && row >= body.region.startRow && row <= body.region.endRow);\r\n\r\n                        // remove from old region buckets\r\n                        if (!isInsideNewRegion && isInsideOldRegion) {\r\n                            if (isInsideOldRegion) {\r\n                                if (bucket)\r\n                                    Grid._bucketRemoveBody(grid, bucket, body);\r\n                            }\r\n                        }\r\n\r\n                        // add to new region buckets\r\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\r\n                            if (!bucket)\r\n                                bucket = Grid._createBucket(buckets, bucketId);\r\n                            Grid._bucketAddBody(grid, bucket, body);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // set the new region\r\n                body.region = newRegion;\r\n\r\n                // flag changes so we can update pairs\r\n                gridChanged = true;\r\n            }\r\n        }\r\n\r\n        // update pairs list only if pairs changed (i.e. a body changed region)\r\n        if (gridChanged)\r\n            grid.pairsList = Grid._createActivePairsList(grid);\r\n    };\r\n\r\n    /**\r\n     * Clears the grid.\r\n     * @method clear\r\n     * @param {grid} grid\r\n     */\r\n    Grid.clear = function(grid) {\r\n        grid.buckets = {};\r\n        grid.pairs = {};\r\n        grid.pairsList = [];\r\n    };\r\n\r\n    /**\r\n     * Finds the union of two regions.\r\n     * @method _regionUnion\r\n     * @private\r\n     * @param {} regionA\r\n     * @param {} regionB\r\n     * @return {} region\r\n     */\r\n    Grid._regionUnion = function(regionA, regionB) {\r\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\r\n            endCol = Math.max(regionA.endCol, regionB.endCol),\r\n            startRow = Math.min(regionA.startRow, regionB.startRow),\r\n            endRow = Math.max(regionA.endRow, regionB.endRow);\r\n\r\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Gets the region a given body falls in for a given grid.\r\n     * @method _getRegion\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} body\r\n     * @return {} region\r\n     */\r\n    Grid._getRegion = function(grid, body) {\r\n        var bounds = body.bounds,\r\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\r\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\r\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\r\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\r\n\r\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Creates a region.\r\n     * @method _createRegion\r\n     * @private\r\n     * @param {} startCol\r\n     * @param {} endCol\r\n     * @param {} startRow\r\n     * @param {} endRow\r\n     * @return {} region\r\n     */\r\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\r\n        return { \r\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\r\n            startCol: startCol, \r\n            endCol: endCol, \r\n            startRow: startRow, \r\n            endRow: endRow \r\n        };\r\n    };\r\n\r\n    /**\r\n     * Gets the bucket id at the given position.\r\n     * @method _getBucketId\r\n     * @private\r\n     * @param {} column\r\n     * @param {} row\r\n     * @return {string} bucket id\r\n     */\r\n    Grid._getBucketId = function(column, row) {\r\n        return 'C' + column + 'R' + row;\r\n    };\r\n\r\n    /**\r\n     * Creates a bucket.\r\n     * @method _createBucket\r\n     * @private\r\n     * @param {} buckets\r\n     * @param {} bucketId\r\n     * @return {} bucket\r\n     */\r\n    Grid._createBucket = function(buckets, bucketId) {\r\n        var bucket = buckets[bucketId] = [];\r\n        return bucket;\r\n    };\r\n\r\n    /**\r\n     * Adds a body to a bucket.\r\n     * @method _bucketAddBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    Grid._bucketAddBody = function(grid, bucket, body) {\r\n        // add new pairs\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            var bodyB = bucket[i];\r\n\r\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\r\n                continue;\r\n\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for Grid.update to work\r\n            var pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair) {\r\n                pair[2] += 1;\r\n            } else {\r\n                grid.pairs[pairId] = [body, bodyB, 1];\r\n            }\r\n        }\r\n\r\n        // add to bodies (after pairs, otherwise pairs with self)\r\n        bucket.push(body);\r\n    };\r\n\r\n    /**\r\n     * Removes a body from a bucket.\r\n     * @method _bucketRemoveBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\r\n        // remove from bucket\r\n        bucket.splice(Common.indexOf(bucket, body), 1);\r\n\r\n        // update pair counts\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for _createActivePairsList to work\r\n            var bodyB = bucket[i],\r\n                pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair)\r\n                pair[2] -= 1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generates a list of the active pairs in the grid.\r\n     * @method _createActivePairsList\r\n     * @private\r\n     * @param {} grid\r\n     * @return [] pairs\r\n     */\r\n    Grid._createActivePairsList = function(grid) {\r\n        var pairKeys,\r\n            pair,\r\n            pairs = [];\r\n\r\n        // grid.pairs is used as a hashmap\r\n        pairKeys = Common.keys(grid.pairs);\r\n\r\n        // iterate over grid.pairs\r\n        for (var k = 0; k < pairKeys.length; k++) {\r\n            pair = grid.pairs[pairKeys[k]];\r\n\r\n            // if pair exists in at least one bucket\r\n            // it is a pair that needs further collision testing so push it\r\n            if (pair[2] > 0) {\r\n                pairs.push(pair);\r\n            } else {\r\n                delete grid.pairs[pairKeys[k]];\r\n            }\r\n        }\r\n\r\n        return pairs;\r\n    };\r\n    \r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 22 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar Matter = module.exports = __webpack_require__(23);\r\n\r\nMatter.Axes = __webpack_require__(10);\r\nMatter.Bodies = __webpack_require__(11);\r\nMatter.Body = __webpack_require__(6);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Composite = __webpack_require__(5);\r\nMatter.Composites = __webpack_require__(24);\r\nMatter.Constraint = __webpack_require__(8);\r\nMatter.Contact = __webpack_require__(17);\r\nMatter.Detector = __webpack_require__(13);\r\nMatter.Engine = __webpack_require__(18);\r\nMatter.Events = __webpack_require__(4);\r\nMatter.Grid = __webpack_require__(21);\r\nMatter.Mouse = __webpack_require__(12);\r\nMatter.MouseConstraint = __webpack_require__(25);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Pairs = __webpack_require__(20);\r\nMatter.Plugin = __webpack_require__(15);\r\nMatter.Query = __webpack_require__(26);\r\nMatter.Render = __webpack_require__(16);\r\nMatter.Resolver = __webpack_require__(19);\r\nMatter.Runner = __webpack_require__(27);\r\nMatter.SAT = __webpack_require__(14);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Svg = __webpack_require__(28);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\nMatter.World = __webpack_require__(29);\r\n\r\n// temporary back compatibility\r\nMatter.Engine.run = Matter.Runner.run;\r\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run ➤ use Matter.Runner.run(engine) instead');\r\n\r\n\r\n/***/ }),\r\n/* 23 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(15);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.17.1\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 24 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Composites` module contains factory methods for creating composite bodies\r\n* with commonly used configurations (such as stacks and chains).\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Composites\r\n*/\r\n\r\nvar Composites = {};\r\n\r\nmodule.exports = Composites;\r\n\r\nvar Composite = __webpack_require__(5);\r\nvar Constraint = __webpack_require__(8);\r\nvar Common = __webpack_require__(0);\r\nvar Body = __webpack_require__(6);\r\nvar Bodies = __webpack_require__(11);\r\nvar deprecated = Common.deprecated;\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\r\n     * This function uses the body's bounds to prevent overlaps.\r\n     * @method stack\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {number} columnGap\r\n     * @param {number} rowGap\r\n     * @param {function} callback\r\n     * @return {composite} A new composite containing objects created in the callback\r\n     */\r\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\r\n        var stack = Composite.create({ label: 'Stack' }),\r\n            x = xx,\r\n            y = yy,\r\n            lastBody,\r\n            i = 0;\r\n\r\n        for (var row = 0; row < rows; row++) {\r\n            var maxHeight = 0;\r\n            \r\n            for (var column = 0; column < columns; column++) {\r\n                var body = callback(x, y, column, row, lastBody, i);\r\n                    \r\n                if (body) {\r\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\r\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \r\n\r\n                    if (bodyHeight > maxHeight)\r\n                        maxHeight = bodyHeight;\r\n                    \r\n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\r\n\r\n                    x = body.bounds.max.x + columnGap;\r\n\r\n                    Composite.addBody(stack, body);\r\n                    \r\n                    lastBody = body;\r\n                    i += 1;\r\n                } else {\r\n                    x += columnGap;\r\n                }\r\n            }\r\n            \r\n            y += maxHeight + rowGap;\r\n            x = xx;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n    \r\n    /**\r\n     * Chains all bodies in the given composite together using constraints.\r\n     * @method chain\r\n     * @param {composite} composite\r\n     * @param {number} xOffsetA\r\n     * @param {number} yOffsetA\r\n     * @param {number} xOffsetB\r\n     * @param {number} yOffsetB\r\n     * @param {object} options\r\n     * @return {composite} A new composite containing objects chained together with constraints\r\n     */\r\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\r\n        var bodies = composite.bodies;\r\n        \r\n        for (var i = 1; i < bodies.length; i++) {\r\n            var bodyA = bodies[i - 1],\r\n                bodyB = bodies[i],\r\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\r\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \r\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\r\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\r\n        \r\n            var defaults = {\r\n                bodyA: bodyA,\r\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\r\n                bodyB: bodyB,\r\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\r\n            };\r\n            \r\n            var constraint = Common.extend(defaults, options);\r\n        \r\n            Composite.addConstraint(composite, Constraint.create(constraint));\r\n        }\r\n\r\n        composite.label += ' Chain';\r\n        \r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\r\n     * @method mesh\r\n     * @param {composite} composite\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {boolean} crossBrace\r\n     * @param {object} options\r\n     * @return {composite} The composite containing objects meshed together with constraints\r\n     */\r\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\r\n        var bodies = composite.bodies,\r\n            row,\r\n            col,\r\n            bodyA,\r\n            bodyB,\r\n            bodyC;\r\n        \r\n        for (row = 0; row < rows; row++) {\r\n            for (col = 1; col < columns; col++) {\r\n                bodyA = bodies[(col - 1) + (row * columns)];\r\n                bodyB = bodies[col + (row * columns)];\r\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\r\n            }\r\n\r\n            if (row > 0) {\r\n                for (col = 0; col < columns; col++) {\r\n                    bodyA = bodies[col + ((row - 1) * columns)];\r\n                    bodyB = bodies[col + (row * columns)];\r\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\r\n\r\n                    if (crossBrace && col > 0) {\r\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\r\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\r\n                    }\r\n\r\n                    if (crossBrace && col < columns - 1) {\r\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\r\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        composite.label += ' Mesh';\r\n        \r\n        return composite;\r\n    };\r\n    \r\n    /**\r\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\r\n     * This function uses the body's bounds to prevent overlaps.\r\n     * @method pyramid\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {number} columnGap\r\n     * @param {number} rowGap\r\n     * @param {function} callback\r\n     * @return {composite} A new composite containing objects created in the callback\r\n     */\r\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\r\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\r\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\r\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\r\n            \r\n            if (row > actualRows)\r\n                return;\r\n            \r\n            // reverse row order\r\n            row = actualRows - row;\r\n            \r\n            var start = row,\r\n                end = columns - 1 - row;\r\n\r\n            if (column < start || column > end)\r\n                return;\r\n            \r\n            // retroactively fix the first body's position, since width was unknown\r\n            if (i === 1) {\r\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\r\n            }\r\n\r\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\r\n            \r\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\r\n     * @deprecated moved to newtonsCradle example\r\n     * @method newtonsCradle\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} number\r\n     * @param {number} size\r\n     * @param {number} length\r\n     * @return {composite} A new composite newtonsCradle body\r\n     */\r\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\r\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\r\n\r\n        for (var i = 0; i < number; i++) {\r\n            var separation = 1.9,\r\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \r\n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\r\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\r\n\r\n            Composite.addBody(newtonsCradle, circle);\r\n            Composite.addConstraint(newtonsCradle, constraint);\r\n        }\r\n\r\n        return newtonsCradle;\r\n    };\r\n\r\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle ➤ moved to newtonsCradle example');\r\n    \r\n    /**\r\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\r\n     * @deprecated moved to car example\r\n     * @method car\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {number} wheelSize\r\n     * @return {composite} A new composite car body\r\n     */\r\n    Composites.car = function(xx, yy, width, height, wheelSize) {\r\n        var group = Body.nextGroup(true),\r\n            wheelBase = 20,\r\n            wheelAOffset = -width * 0.5 + wheelBase,\r\n            wheelBOffset = width * 0.5 - wheelBase,\r\n            wheelYOffset = 0;\r\n    \r\n        var car = Composite.create({ label: 'Car' }),\r\n            body = Bodies.rectangle(xx, yy, width, height, { \r\n                collisionFilter: {\r\n                    group: group\r\n                },\r\n                chamfer: {\r\n                    radius: height * 0.5\r\n                },\r\n                density: 0.0002\r\n            });\r\n    \r\n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \r\n            collisionFilter: {\r\n                group: group\r\n            },\r\n            friction: 0.8\r\n        });\r\n                    \r\n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \r\n            collisionFilter: {\r\n                group: group\r\n            },\r\n            friction: 0.8\r\n        });\r\n                    \r\n        var axelA = Constraint.create({\r\n            bodyB: body,\r\n            pointB: { x: wheelAOffset, y: wheelYOffset },\r\n            bodyA: wheelA,\r\n            stiffness: 1,\r\n            length: 0\r\n        });\r\n                        \r\n        var axelB = Constraint.create({\r\n            bodyB: body,\r\n            pointB: { x: wheelBOffset, y: wheelYOffset },\r\n            bodyA: wheelB,\r\n            stiffness: 1,\r\n            length: 0\r\n        });\r\n        \r\n        Composite.addBody(car, body);\r\n        Composite.addBody(car, wheelA);\r\n        Composite.addBody(car, wheelB);\r\n        Composite.addConstraint(car, axelA);\r\n        Composite.addConstraint(car, axelB);\r\n\r\n        return car;\r\n    };\r\n\r\n    deprecated(Composites, 'car', 'Composites.car ➤ moved to car example');\r\n\r\n    /**\r\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\r\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\r\n     * @deprecated moved to softBody and cloth examples\r\n     * @method softBody\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {number} columnGap\r\n     * @param {number} rowGap\r\n     * @param {boolean} crossBrace\r\n     * @param {number} particleRadius\r\n     * @param {} particleOptions\r\n     * @param {} constraintOptions\r\n     * @return {composite} A new composite softBody\r\n     */\r\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\r\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\r\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\r\n\r\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\r\n            return Bodies.circle(x, y, particleRadius, particleOptions);\r\n        });\r\n\r\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\r\n\r\n        softBody.label = 'Soft Body';\r\n\r\n        return softBody;\r\n    };\r\n\r\n    deprecated(Composites, 'softBody', 'Composites.softBody ➤ moved to softBody and cloth examples');\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 25 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\r\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class MouseConstraint\r\n*/\r\n\r\nvar MouseConstraint = {};\r\n\r\nmodule.exports = MouseConstraint;\r\n\r\nvar Vertices = __webpack_require__(3);\r\nvar Sleeping = __webpack_require__(7);\r\nvar Mouse = __webpack_require__(12);\r\nvar Events = __webpack_require__(4);\r\nvar Detector = __webpack_require__(13);\r\nvar Constraint = __webpack_require__(8);\r\nvar Composite = __webpack_require__(5);\r\nvar Common = __webpack_require__(0);\r\nvar Bounds = __webpack_require__(1);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new mouse constraint.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {engine} engine\r\n     * @param {} options\r\n     * @return {MouseConstraint} A new MouseConstraint\r\n     */\r\n    MouseConstraint.create = function(engine, options) {\r\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\r\n\r\n        if (!mouse) {\r\n            if (engine && engine.render && engine.render.canvas) {\r\n                mouse = Mouse.create(engine.render.canvas);\r\n            } else if (options && options.element) {\r\n                mouse = Mouse.create(options.element);\r\n            } else {\r\n                mouse = Mouse.create();\r\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\r\n            }\r\n        }\r\n\r\n        var constraint = Constraint.create({ \r\n            label: 'Mouse Constraint',\r\n            pointA: mouse.position,\r\n            pointB: { x: 0, y: 0 },\r\n            length: 0.01, \r\n            stiffness: 0.1,\r\n            angularStiffness: 1,\r\n            render: {\r\n                strokeStyle: '#90EE90',\r\n                lineWidth: 3\r\n            }\r\n        });\r\n\r\n        var defaults = {\r\n            type: 'mouseConstraint',\r\n            mouse: mouse,\r\n            element: null,\r\n            body: null,\r\n            constraint: constraint,\r\n            collisionFilter: {\r\n                category: 0x0001,\r\n                mask: 0xFFFFFFFF,\r\n                group: 0\r\n            }\r\n        };\r\n\r\n        var mouseConstraint = Common.extend(defaults, options);\r\n\r\n        Events.on(engine, 'beforeUpdate', function() {\r\n            var allBodies = Composite.allBodies(engine.world);\r\n            MouseConstraint.update(mouseConstraint, allBodies);\r\n            MouseConstraint._triggerEvents(mouseConstraint);\r\n        });\r\n\r\n        return mouseConstraint;\r\n    };\r\n\r\n    /**\r\n     * Updates the given mouse constraint.\r\n     * @private\r\n     * @method update\r\n     * @param {MouseConstraint} mouseConstraint\r\n     * @param {body[]} bodies\r\n     */\r\n    MouseConstraint.update = function(mouseConstraint, bodies) {\r\n        var mouse = mouseConstraint.mouse,\r\n            constraint = mouseConstraint.constraint,\r\n            body = mouseConstraint.body;\r\n\r\n        if (mouse.button === 0) {\r\n            if (!constraint.bodyB) {\r\n                for (var i = 0; i < bodies.length; i++) {\r\n                    body = bodies[i];\r\n                    if (Bounds.contains(body.bounds, mouse.position) \r\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\r\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\r\n                            var part = body.parts[j];\r\n                            if (Vertices.contains(part.vertices, mouse.position)) {\r\n                                constraint.pointA = mouse.position;\r\n                                constraint.bodyB = mouseConstraint.body = body;\r\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\r\n                                constraint.angleB = body.angle;\r\n\r\n                                Sleeping.set(body, false);\r\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                Sleeping.set(constraint.bodyB, false);\r\n                constraint.pointA = mouse.position;\r\n            }\r\n        } else {\r\n            constraint.bodyB = mouseConstraint.body = null;\r\n            constraint.pointB = null;\r\n\r\n            if (body)\r\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggers mouse constraint events.\r\n     * @method _triggerEvents\r\n     * @private\r\n     * @param {mouse} mouseConstraint\r\n     */\r\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\r\n        var mouse = mouseConstraint.mouse,\r\n            mouseEvents = mouse.sourceEvents;\r\n\r\n        if (mouseEvents.mousemove)\r\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\r\n\r\n        if (mouseEvents.mousedown)\r\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\r\n\r\n        if (mouseEvents.mouseup)\r\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\r\n\r\n        // reset the mouse state ready for the next step\r\n        Mouse.clearSourceEvents(mouse);\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when the mouse has moved (or a touch moves) during the last step\r\n    *\r\n    * @event mousemove\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the mouse is down (or a touch has started) during the last step\r\n    *\r\n    * @event mousedown\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the mouse is up (or a touch has ended) during the last step\r\n    *\r\n    * @event mouseup\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the user starts dragging a body\r\n    *\r\n    * @event startdrag\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {body} event.body The body being dragged\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the user ends dragging a body\r\n    *\r\n    * @event enddrag\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {body} event.body The body that has stopped being dragged\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"constraint\"\r\n     * @readOnly\r\n     */\r\n\r\n    /**\r\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\r\n     *\r\n     * @property mouse\r\n     * @type mouse\r\n     * @default mouse\r\n     */\r\n\r\n    /**\r\n     * The `Body` that is currently being moved by the user, or `null` if no body.\r\n     *\r\n     * @property body\r\n     * @type body\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The `Constraint` object that is used to move the body during interaction.\r\n     *\r\n     * @property constraint\r\n     * @type constraint\r\n     */\r\n\r\n    /**\r\n     * An `Object` that specifies the collision filter properties.\r\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter\r\n     * @type object\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 26 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Query` module contains methods for performing collision queries.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Query\r\n*/\r\n\r\nvar Query = {};\r\n\r\nmodule.exports = Query;\r\n\r\nvar Vector = __webpack_require__(2);\r\nvar SAT = __webpack_require__(14);\r\nvar Bounds = __webpack_require__(1);\r\nvar Bodies = __webpack_require__(11);\r\nvar Vertices = __webpack_require__(3);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Returns a list of collisions between `body` and `bodies`.\r\n     * @method collides\r\n     * @param {body} body\r\n     * @param {body[]} bodies\r\n     * @return {object[]} Collisions\r\n     */\r\n    Query.collides = function(body, bodies) {\r\n        var collisions = [];\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var bodyA = bodies[i];\r\n            \r\n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\r\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\r\n                    var part = bodyA.parts[j];\r\n\r\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\r\n                        var collision = SAT.collides(part, body);\r\n\r\n                        if (collision.collided) {\r\n                            collisions.push(collision);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisions;\r\n    };\r\n\r\n    /**\r\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\r\n     * @method ray\r\n     * @param {body[]} bodies\r\n     * @param {vector} startPoint\r\n     * @param {vector} endPoint\r\n     * @param {number} [rayWidth]\r\n     * @return {object[]} Collisions\r\n     */\r\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\r\n        rayWidth = rayWidth || 1e-100;\r\n\r\n        var rayAngle = Vector.angle(startPoint, endPoint),\r\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\r\n            rayX = (endPoint.x + startPoint.x) * 0.5,\r\n            rayY = (endPoint.y + startPoint.y) * 0.5,\r\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\r\n            collisions = Query.collides(ray, bodies);\r\n\r\n        for (var i = 0; i < collisions.length; i += 1) {\r\n            var collision = collisions[i];\r\n            collision.body = collision.bodyB = collision.bodyA;            \r\n        }\r\n\r\n        return collisions;\r\n    };\r\n\r\n    /**\r\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\r\n     * @method region\r\n     * @param {body[]} bodies\r\n     * @param {bounds} bounds\r\n     * @param {bool} [outside=false]\r\n     * @return {body[]} The bodies matching the query\r\n     */\r\n    Query.region = function(bodies, bounds, outside) {\r\n        var result = [];\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                overlaps = Bounds.overlaps(body.bounds, bounds);\r\n            if ((overlaps && !outside) || (!overlaps && outside))\r\n                result.push(body);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\r\n     * @method point\r\n     * @param {body[]} bodies\r\n     * @param {vector} point\r\n     * @return {body[]} The bodies matching the query\r\n     */\r\n    Query.point = function(bodies, point) {\r\n        var result = [];\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n            \r\n            if (Bounds.contains(body.bounds, point)) {\r\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\r\n                    var part = body.parts[j];\r\n\r\n                    if (Bounds.contains(part.bounds, point)\r\n                        && Vertices.contains(part.vertices, point)) {\r\n                        result.push(body);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 27 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Runner` module is an optional utility which provides a game loop, \r\n* that handles continuously updating a `Matter.Engine` for you within a browser.\r\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\r\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\r\n* Instead just call `Engine.update(engine, delta)` in your own loop.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Runner\r\n*/\r\n\r\nvar Runner = {};\r\n\r\nmodule.exports = Runner;\r\n\r\nvar Events = __webpack_require__(4);\r\nvar Engine = __webpack_require__(18);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    var _requestAnimationFrame,\r\n        _cancelAnimationFrame;\r\n\r\n    if (typeof window !== 'undefined') {\r\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\r\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\r\n   \r\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \r\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\r\n    }\r\n\r\n    if (!_requestAnimationFrame) {\r\n        var _frameTimeout;\r\n\r\n        _requestAnimationFrame = function(callback){ \r\n            _frameTimeout = setTimeout(function() { \r\n                callback(Common.now()); \r\n            }, 1000 / 60);\r\n        };\r\n\r\n        _cancelAnimationFrame = function() {\r\n            clearTimeout(_frameTimeout);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * @method create\r\n     * @param {} options\r\n     */\r\n    Runner.create = function(options) {\r\n        var defaults = {\r\n            fps: 60,\r\n            correction: 1,\r\n            deltaSampleSize: 60,\r\n            counterTimestamp: 0,\r\n            frameCounter: 0,\r\n            deltaHistory: [],\r\n            timePrev: null,\r\n            timeScalePrev: 1,\r\n            frameRequestId: null,\r\n            isFixed: false,\r\n            enabled: true\r\n        };\r\n\r\n        var runner = Common.extend(defaults, options);\r\n\r\n        runner.delta = runner.delta || 1000 / runner.fps;\r\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\r\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\r\n        runner.fps = 1000 / runner.delta;\r\n\r\n        return runner;\r\n    };\r\n\r\n    /**\r\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\r\n     * @method run\r\n     * @param {engine} engine\r\n     */\r\n    Runner.run = function(runner, engine) {\r\n        // create runner if engine is first argument\r\n        if (typeof runner.positionIterations !== 'undefined') {\r\n            engine = runner;\r\n            runner = Runner.create();\r\n        }\r\n\r\n        (function render(time){\r\n            runner.frameRequestId = _requestAnimationFrame(render);\r\n\r\n            if (time && runner.enabled) {\r\n                Runner.tick(runner, engine, time);\r\n            }\r\n        })();\r\n\r\n        return runner;\r\n    };\r\n\r\n    /**\r\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\r\n     * Features delta smoothing, time correction and fixed or dynamic timing.\r\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\r\n     * @method tick\r\n     * @param {runner} runner\r\n     * @param {engine} engine\r\n     * @param {number} time\r\n     */\r\n    Runner.tick = function(runner, engine, time) {\r\n        var timing = engine.timing,\r\n            correction = 1,\r\n            delta;\r\n\r\n        // create an event object\r\n        var event = {\r\n            timestamp: timing.timestamp\r\n        };\r\n\r\n        Events.trigger(runner, 'beforeTick', event);\r\n\r\n        if (runner.isFixed) {\r\n            // fixed timestep\r\n            delta = runner.delta;\r\n        } else {\r\n            // dynamic timestep based on wall clock between calls\r\n            delta = (time - runner.timePrev) || runner.delta;\r\n            runner.timePrev = time;\r\n\r\n            // optimistically filter delta over a few frames, to improve stability\r\n            runner.deltaHistory.push(delta);\r\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\r\n            delta = Math.min.apply(null, runner.deltaHistory);\r\n            \r\n            // limit delta\r\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\r\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\r\n\r\n            // correction for delta\r\n            correction = delta / runner.delta;\r\n\r\n            // update engine timing object\r\n            runner.delta = delta;\r\n        }\r\n\r\n        // time correction for time scaling\r\n        if (runner.timeScalePrev !== 0)\r\n            correction *= timing.timeScale / runner.timeScalePrev;\r\n\r\n        if (timing.timeScale === 0)\r\n            correction = 0;\r\n\r\n        runner.timeScalePrev = timing.timeScale;\r\n        runner.correction = correction;\r\n\r\n        // fps counter\r\n        runner.frameCounter += 1;\r\n        if (time - runner.counterTimestamp >= 1000) {\r\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\r\n            runner.counterTimestamp = time;\r\n            runner.frameCounter = 0;\r\n        }\r\n\r\n        Events.trigger(runner, 'tick', event);\r\n\r\n        // update\r\n        Events.trigger(runner, 'beforeUpdate', event);\r\n        Engine.update(engine, delta, correction);\r\n        Events.trigger(runner, 'afterUpdate', event);\r\n\r\n        Events.trigger(runner, 'afterTick', event);\r\n    };\r\n\r\n    /**\r\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\r\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\r\n     * @method stop\r\n     * @param {runner} runner\r\n     */\r\n    Runner.stop = function(runner) {\r\n        _cancelAnimationFrame(runner.frameRequestId);\r\n    };\r\n\r\n    /**\r\n     * Alias for `Runner.run`.\r\n     * @method start\r\n     * @param {runner} runner\r\n     * @param {engine} engine\r\n     */\r\n    Runner.start = function(runner, engine) {\r\n        Runner.run(runner, engine);\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired at the start of a tick, before any updates to the engine or timing\r\n    *\r\n    * @event beforeTick\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine timing updated, but just before update\r\n    *\r\n    * @event tick\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired at the end of a tick, after engine update and after rendering\r\n    *\r\n    * @event afterTick\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired before update\r\n    *\r\n    * @event beforeUpdate\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after update\r\n    *\r\n    * @event afterUpdate\r\n    * @param {} event An event object\r\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A flag that specifies whether the runner is running or not.\r\n     *\r\n     * @property enabled\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\r\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\r\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\r\n     *\r\n     * @property isFixed\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the time step between updates in milliseconds.\r\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\r\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\r\n     *\r\n     * @property delta\r\n     * @type number\r\n     * @default 1000 / 60\r\n     */\r\n\r\n})();\r\n\r\n\r\n/***/ }),\r\n/* 28 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\r\n*\r\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Svg\r\n*/\r\n\r\nvar Svg = {};\r\n\r\nmodule.exports = Svg;\r\n\r\nvar Bounds = __webpack_require__(1);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Converts an SVG path into an array of vector points.\r\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\r\n     * See `Bodies.fromVertices` which provides support for this.\r\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\r\n     * You must load the `pathseg.js` polyfill on newer browsers.\r\n     * @method pathToVertices\r\n     * @param {SVGPathElement} path\r\n     * @param {Number} [sampleLength=15]\r\n     * @return {Vector[]} points\r\n     */\r\n    Svg.pathToVertices = function(path, sampleLength) {\r\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\r\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\r\n        }\r\n\r\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\r\n        var i, il, total, point, segment, segments, \r\n            segmentsQueue, lastSegment, \r\n            lastPoint, segmentIndex, points = [],\r\n            lx, ly, length = 0, x = 0, y = 0;\r\n\r\n        sampleLength = sampleLength || 15;\r\n\r\n        var addPoint = function(px, py, pathSegType) {\r\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\r\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\r\n\r\n            // when the last point doesn't equal the current point add the current point\r\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\r\n                if (lastPoint && isRelative) {\r\n                    lx = lastPoint.x;\r\n                    ly = lastPoint.y;\r\n                } else {\r\n                    lx = 0;\r\n                    ly = 0;\r\n                }\r\n\r\n                var point = {\r\n                    x: lx + px,\r\n                    y: ly + py\r\n                };\r\n\r\n                // set last point\r\n                if (isRelative || !lastPoint) {\r\n                    lastPoint = point;\r\n                }\r\n\r\n                points.push(point);\r\n\r\n                x = lx + px;\r\n                y = ly + py;\r\n            }\r\n        };\r\n\r\n        var addSegmentPoint = function(segment) {\r\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\r\n\r\n            // skip path ends\r\n            if (segType === 'Z') \r\n                return;\r\n\r\n            // map segment to x and y\r\n            switch (segType) {\r\n\r\n            case 'M':\r\n            case 'L':\r\n            case 'T':\r\n            case 'C':\r\n            case 'S':\r\n            case 'Q':\r\n                x = segment.x;\r\n                y = segment.y;\r\n                break;\r\n            case 'H':\r\n                x = segment.x;\r\n                break;\r\n            case 'V':\r\n                y = segment.y;\r\n                break;\r\n            }\r\n\r\n            addPoint(x, y, segment.pathSegType);\r\n        };\r\n\r\n        // ensure path is absolute\r\n        Svg._svgPathToAbsolute(path);\r\n\r\n        // get total length\r\n        total = path.getTotalLength();\r\n\r\n        // queue segments\r\n        segments = [];\r\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\r\n            segments.push(path.pathSegList.getItem(i));\r\n\r\n        segmentsQueue = segments.concat();\r\n\r\n        // sample through path\r\n        while (length < total) {\r\n            // get segment at position\r\n            segmentIndex = path.getPathSegAtLength(length);\r\n            segment = segments[segmentIndex];\r\n\r\n            // new segment\r\n            if (segment != lastSegment) {\r\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\r\n                    addSegmentPoint(segmentsQueue.shift());\r\n\r\n                lastSegment = segment;\r\n            }\r\n\r\n            // add points in between when curving\r\n            // TODO: adaptive sampling\r\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\r\n\r\n            case 'C':\r\n            case 'T':\r\n            case 'S':\r\n            case 'Q':\r\n            case 'A':\r\n                point = path.getPointAtLength(length);\r\n                addPoint(point.x, point.y, 0);\r\n                break;\r\n\r\n            }\r\n\r\n            // increment by sample value\r\n            length += sampleLength;\r\n        }\r\n\r\n        // add remaining segments not passed by sampling\r\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\r\n            addSegmentPoint(segmentsQueue[i]);\r\n\r\n        return points;\r\n    };\r\n\r\n    Svg._svgPathToAbsolute = function(path) {\r\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\r\n        // Copyright (c) Gavin Kistner\r\n        // http://phrogz.net/js/_ReuseLicense.txt\r\n        // Modifications: tidy formatting and naming\r\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\r\n            x = 0, y = 0, len = segs.numberOfItems;\r\n\r\n        for (var i = 0; i < len; ++i) {\r\n            var seg = segs.getItem(i),\r\n                segType = seg.pathSegTypeAsLetter;\r\n\r\n            if (/[MLHVCSQTA]/.test(segType)) {\r\n                if ('x' in seg) x = seg.x;\r\n                if ('y' in seg) y = seg.y;\r\n            } else {\r\n                if ('x1' in seg) x1 = x + seg.x1;\r\n                if ('x2' in seg) x2 = x + seg.x2;\r\n                if ('y1' in seg) y1 = y + seg.y1;\r\n                if ('y2' in seg) y2 = y + seg.y2;\r\n                if ('x' in seg) x += seg.x;\r\n                if ('y' in seg) y += seg.y;\r\n\r\n                switch (segType) {\r\n\r\n                case 'm':\r\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\r\n                    break;\r\n                case 'l':\r\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\r\n                    break;\r\n                case 'h':\r\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\r\n                    break;\r\n                case 'v':\r\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\r\n                    break;\r\n                case 'c':\r\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\r\n                    break;\r\n                case 's':\r\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\r\n                    break;\r\n                case 'q':\r\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\r\n                    break;\r\n                case 't':\r\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\r\n                    break;\r\n                case 'a':\r\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\r\n                    break;\r\n                case 'z':\r\n                case 'Z':\r\n                    x = x0;\r\n                    y = y0;\r\n                    break;\r\n\r\n                }\r\n            }\r\n\r\n            if (segType == 'M' || segType == 'm') {\r\n                x0 = x;\r\n                y0 = y;\r\n            }\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n/***/ }),\r\n/* 29 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n* This module has now been replaced by `Matter.Composite`.\r\n*\r\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\r\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\r\n*\r\n* The property `world.gravity` has been moved to `engine.gravity`.\r\n*\r\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\r\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\r\n*\r\n* @class World\r\n*/\r\n\r\nvar World = {};\r\n\r\nmodule.exports = World;\r\n\r\nvar Composite = __webpack_require__(5);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * See above, aliases for back compatibility only\r\n     */\r\n    World.create = Composite.create;\r\n    World.add = Composite.add;\r\n    World.remove = Composite.remove;\r\n    World.clear = Composite.clear;\r\n    World.addComposite = Composite.addComposite;\r\n    World.addBody = Composite.addBody;\r\n    World.addConstraint = Composite.addConstraint;\r\n\r\n})();\r\n\r\n\r\n/***/ })\r\n/******/ ]);\r\n});", "export class NBuf3 {\r\n    constructor(ct) {\r\n        this.top = 0;\r\n        this.array = new Float32Array(ct);\r\n    }\r\n    write(v) {\r\n        this.array[this.top++] = v.x;\r\n        this.array[this.top++] = v.y;\r\n        this.array[this.top++] = v.z;\r\n    }\r\n}\r\nexport class NBuf2 {\r\n    constructor(ct) {\r\n        this.top = 0;\r\n        this.array = new Float32Array(ct);\r\n    }\r\n    write(v) {\r\n        this.array[this.top++] = v.x;\r\n        this.array[this.top++] = v.y;\r\n    }\r\n}\r\n", "/**\r\n * Holds a node in a BSP tree. A BSP tree is built from a collection of polygons\r\n * by picking a polygon to split along. That polygon (and all other coplanar\r\n * polygons) are added directly to that node and the other polygons are added to\r\n * the front and/or back subtrees. This is not a leafy BSP tree since there is\r\n * no distinction between internal and leaf nodes.\r\n */\r\nexport class Node {\r\n    constructor(polygons) {\r\n        this.plane = null;\r\n        this.front = null;\r\n        this.back = null;\r\n        this.polygons = [];\r\n        if (polygons)\r\n            this.build(polygons);\r\n    }\r\n    clone() {\r\n        const node = new Node();\r\n        node.plane = this.plane && this.plane.clone();\r\n        node.front = this.front && this.front.clone();\r\n        node.back = this.back && this.back.clone();\r\n        node.polygons = this.polygons.map((p) => p.clone());\r\n        return node;\r\n    }\r\n    // Convert solid space to empty space and empty space to solid space.\r\n    invert() {\r\n        for (let i = 0; i < this.polygons.length; i++)\r\n            this.polygons[i].flip();\r\n        this.plane && this.plane.flip();\r\n        this.front && this.front.invert();\r\n        this.back && this.back.invert();\r\n        const temp = this.front;\r\n        this.front = this.back;\r\n        this.back = temp;\r\n    }\r\n    // Recursively remove all polygons in `polygons` that are inside this BSP\r\n    // tree.\r\n    clipPolygons(polygons) {\r\n        if (!this.plane)\r\n            return polygons.slice();\r\n        let front = new Array(), back = new Array();\r\n        for (let i = 0; i < polygons.length; i++) {\r\n            this.plane.splitPolygon(polygons[i], front, back, front, back);\r\n        }\r\n        if (this.front)\r\n            front = this.front.clipPolygons(front);\r\n        this.back ? (back = this.back.clipPolygons(back)) : (back = []);\r\n        return front.concat(back);\r\n    }\r\n    // Remove all polygons in this BSP tree that are inside the other BSP tree\r\n    // `bsp`.\r\n    clipTo(bsp) {\r\n        this.polygons = bsp.clipPolygons(this.polygons);\r\n        if (this.front)\r\n            this.front.clipTo(bsp);\r\n        if (this.back)\r\n            this.back.clipTo(bsp);\r\n    }\r\n    // Return a list of all polygons in this BSP tree.\r\n    allPolygons() {\r\n        let polygons = this.polygons.slice();\r\n        if (this.front)\r\n            polygons = polygons.concat(this.front.allPolygons());\r\n        if (this.back)\r\n            polygons = polygons.concat(this.back.allPolygons());\r\n        return polygons;\r\n    }\r\n    // Build a BSP tree out of `polygons`. When called on an existing tree, the\r\n    // new polygons are filtered down to the bottom of the tree and become new\r\n    // nodes there. Each set of polygons is partitioned using the first polygon\r\n    // (no heuristic is used to pick a good split).\r\n    build(polygons) {\r\n        if (!polygons.length)\r\n            return;\r\n        if (!this.plane)\r\n            this.plane = polygons[0].plane.clone();\r\n        const front = [], back = [];\r\n        for (let i = 0; i < polygons.length; i++) {\r\n            this.plane.splitPolygon(polygons[i], this.polygons, this.polygons, front, back);\r\n        }\r\n        if (front.length) {\r\n            if (!this.front)\r\n                this.front = new Node();\r\n            this.front.build(front);\r\n        }\r\n        if (back.length) {\r\n            if (!this.back)\r\n                this.back = new Node();\r\n            this.back.build(back);\r\n        }\r\n    }\r\n}\r\n", "import { Vector3 } from 'three';\r\n/**\r\n * Represents a 3D vector.\r\n */\r\nexport class Vector {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    copy(v) {\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n        return this;\r\n    }\r\n    clone() {\r\n        return new Vector(this.x, this.y, this.z);\r\n    }\r\n    negate() {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n        this.z *= -1;\r\n        return this;\r\n    }\r\n    add(a) {\r\n        this.x += a.x;\r\n        this.y += a.y;\r\n        this.z += a.z;\r\n        return this;\r\n    }\r\n    sub(a) {\r\n        this.x -= a.x;\r\n        this.y -= a.y;\r\n        this.z -= a.z;\r\n        return this;\r\n    }\r\n    times(a) {\r\n        this.x *= a;\r\n        this.y *= a;\r\n        this.z *= a;\r\n        return this;\r\n    }\r\n    dividedBy(a) {\r\n        this.x /= a;\r\n        this.y /= a;\r\n        this.z /= a;\r\n        return this;\r\n    }\r\n    lerp(a, t) {\r\n        return this.add(new Vector().copy(a).sub(this).times(t));\r\n    }\r\n    unit() {\r\n        return this.dividedBy(this.length());\r\n    }\r\n    length() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\r\n    }\r\n    normalize() {\r\n        return this.unit();\r\n    }\r\n    cross(b) {\r\n        const a = this.clone();\r\n        const ax = a.x, ay = a.y, az = a.z;\r\n        const bx = b.x, by = b.y, bz = b.z;\r\n        this.x = ay * bz - az * by;\r\n        this.y = az * bx - ax * bz;\r\n        this.z = ax * by - ay * bx;\r\n        return this;\r\n    }\r\n    dot(b) {\r\n        return this.x * b.x + this.y * b.y + this.z * b.z;\r\n    }\r\n    toVector3() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n}\r\n", "import { Polygon } from './Polygon';\r\nimport { Vector } from './Vector';\r\n/**\r\n * Represents a plane in 3D space.\r\n */\r\nexport class Plane {\r\n    constructor(normal, w) {\r\n        this.normal = normal;\r\n        this.w = w;\r\n        this.normal = normal;\r\n        this.w = w;\r\n    }\r\n    clone() {\r\n        return new Plane(this.normal.clone(), this.w);\r\n    }\r\n    flip() {\r\n        this.normal.negate();\r\n        this.w = -this.w;\r\n    }\r\n    // Split `polygon` by this plane if needed, then put the polygon or polygon\r\n    // fragments in the appropriate lists. Coplanar polygons go into either\r\n    // `coplanarFront` or `coplanarBack` depending on their orientation with\r\n    // respect to this plane. Polygons in front or in back of this plane go into\r\n    // either `front` or `back`.\r\n    splitPolygon(polygon, coplanarFront, coplanarBack, front, back) {\r\n        const COPLANAR = 0;\r\n        const FRONT = 1;\r\n        const BACK = 2;\r\n        const SPANNING = 3;\r\n        // Classify each point as well as the entire polygon into one of the above\r\n        // four classes.\r\n        let polygonType = 0;\r\n        const types = [];\r\n        for (let i = 0; i < polygon.vertices.length; i++) {\r\n            const t = this.normal.dot(polygon.vertices[i].pos) - this.w;\r\n            const type = t < -Plane.EPSILON ? BACK : t > Plane.EPSILON ? FRONT : COPLANAR;\r\n            polygonType |= type;\r\n            types.push(type);\r\n        }\r\n        // Put the polygon in the correct list, splitting it when necessary.\r\n        switch (polygonType) {\r\n            case COPLANAR:\r\n                (this.normal.dot(polygon.plane.normal) > 0\r\n                    ? coplanarFront\r\n                    : coplanarBack).push(polygon);\r\n                break;\r\n            case FRONT:\r\n                front.push(polygon);\r\n                break;\r\n            case BACK:\r\n                back.push(polygon);\r\n                break;\r\n            case SPANNING: {\r\n                const f = [], b = [];\r\n                for (let i = 0; i < polygon.vertices.length; i++) {\r\n                    const j = (i + 1) % polygon.vertices.length;\r\n                    const ti = types[i], tj = types[j];\r\n                    const vi = polygon.vertices[i], vj = polygon.vertices[j];\r\n                    if (ti != BACK)\r\n                        f.push(vi);\r\n                    if (ti != FRONT)\r\n                        b.push(ti != BACK ? vi.clone() : vi);\r\n                    if ((ti | tj) == SPANNING) {\r\n                        const t = (this.w - this.normal.dot(vi.pos)) /\r\n                            this.normal.dot(new Vector().copy(vj.pos).sub(vi.pos));\r\n                        const v = vi.interpolate(vj, t);\r\n                        f.push(v);\r\n                        b.push(v.clone());\r\n                    }\r\n                }\r\n                if (f.length >= 3)\r\n                    front.push(new Polygon(f, polygon.shared));\r\n                if (b.length >= 3)\r\n                    back.push(new Polygon(b, polygon.shared));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static fromPoints(a, b, c) {\r\n        const n = new Vector()\r\n            .copy(b)\r\n            .sub(a)\r\n            .cross(new Vector().copy(c).sub(a))\r\n            .normalize();\r\n        return new Plane(n.clone(), n.dot(a));\r\n    }\r\n}\r\nPlane.EPSILON = 1e-5;\r\n", "import { Plane } from './Plane';\r\n/**\r\n * Represents a convex polygon. The vertices used to initialize a polygon must\r\n * be coplanar and form a convex loop. They do not have to be `Vertex`\r\n * instances but they must behave similarly (duck typing can be used for\r\n * customization).\r\n *\r\n * Each convex polygon has a `shared` property, which is shared between all\r\n * polygons that are clones of each other or were split from the same polygon.\r\n * This can be used to define per-polygon properties (such as surface color).\r\n */\r\nexport class Polygon {\r\n    constructor(vertices, shared) {\r\n        this.vertices = vertices;\r\n        this.shared = shared;\r\n        this.plane = Plane.fromPoints(vertices[0].pos, vertices[1].pos, vertices[2].pos);\r\n    }\r\n    clone() {\r\n        return new Polygon(this.vertices.map((v) => v.clone()), this.shared);\r\n    }\r\n    flip() {\r\n        this.vertices.reverse().map((v) => v.flip());\r\n        this.plane.flip();\r\n    }\r\n}\r\n", "import { Vector } from './Vector';\r\n/**\r\n * Represents a vertex of a polygon. Use your own vertex class instead of this\r\n * one to provide additional features like texture coordinates and vertex\r\n * colors. Custom vertex classes need to provide a `pos` property and `clone()`,\r\n * `flip()`, and `interpolate()` methods that behave analogous to the ones\r\n * defined by `CSG.Vertex`. This class provides `normal` so convenience\r\n * functions like `CSG.sphere()` can return a smooth vertex normal, but `normal`\r\n * is not used anywhere else.\r\n */\r\nexport class Vertex {\r\n    constructor(pos, normal, uv, color) {\r\n        this.pos = new Vector().copy(pos);\r\n        this.normal = new Vector().copy(normal);\r\n        this.uv = new Vector().copy(uv);\r\n        this.uv.z = 0;\r\n        color && (this.color = new Vector().copy(color));\r\n    }\r\n    clone() {\r\n        return new Vertex(this.pos, this.normal, this.uv, this.color);\r\n    }\r\n    // Invert all orientation-specific data (e.g. vertex normal). Called when the\r\n    // orientation of a polygon is flipped.\r\n    flip() {\r\n        this.normal.negate();\r\n    }\r\n    // Create a new vertex between this vertex and `other` by linearly\r\n    // interpolating all properties using a parameter of `t`. Subclasses should\r\n    // override this to interpolate additional properties.\r\n    interpolate(other, t) {\r\n        return new Vertex(this.pos.clone().lerp(other.pos, t), this.normal.clone().lerp(other.normal, t), this.uv.clone().lerp(other.uv, t), this.color && other.color && this.color.clone().lerp(other.color, t));\r\n    }\r\n}\r\n", "import { BufferAttribute, BufferGeometry, Matrix3, Matrix4, Mesh, Vector3, } from 'three';\r\nimport { NBuf2, NBuf3 } from './NBuf';\r\nimport { Node } from './Node';\r\nimport { Polygon } from './Polygon';\r\nimport { Vector } from './Vector';\r\nimport { Vertex } from './Vertex';\r\n/**\r\n * Holds a binary space partition tree representing a 3D solid. Two solids can\r\n * be combined using the `union()`, `subtract()`, and `intersect()` methods.\r\n */\r\nexport class CSG {\r\n    constructor() {\r\n        this.polygons = [];\r\n    }\r\n    static fromPolygons(polygons) {\r\n        const csg = new CSG();\r\n        csg.polygons = polygons;\r\n        return csg;\r\n    }\r\n    static fromGeometry(geom, objectIndex) {\r\n        let polys = [];\r\n        const posattr = geom.attributes.position;\r\n        const normalattr = geom.attributes.normal;\r\n        const uvattr = geom.attributes.uv;\r\n        const colorattr = geom.attributes.color;\r\n        const grps = geom.groups;\r\n        let index;\r\n        if (geom.index) {\r\n            index = geom.index.array;\r\n        }\r\n        else {\r\n            index = new Array((posattr.array.length / posattr.itemSize) | 0);\r\n            for (let i = 0; i < index.length; i++)\r\n                index[i] = i;\r\n        }\r\n        const triCount = (index.length / 3) | 0;\r\n        polys = new Array(triCount);\r\n        for (let i = 0, pli = 0, l = index.length; i < l; i += 3, pli++) {\r\n            const vertices = new Array(3);\r\n            for (let j = 0; j < 3; j++) {\r\n                const vi = index[i + j];\r\n                const vp = vi * 3;\r\n                const vt = vi * 2;\r\n                const x = posattr.array[vp];\r\n                const y = posattr.array[vp + 1];\r\n                const z = posattr.array[vp + 2];\r\n                const nx = normalattr.array[vp];\r\n                const ny = normalattr.array[vp + 1];\r\n                const nz = normalattr.array[vp + 2];\r\n                const u = uvattr === null || uvattr === void 0 ? void 0 : uvattr.array[vt];\r\n                const v = uvattr === null || uvattr === void 0 ? void 0 : uvattr.array[vt + 1];\r\n                vertices[j] = new Vertex(new Vector(x, y, z), new Vector(nx, ny, nz), new Vector(u, v, 0), colorattr &&\r\n                    new Vector(colorattr.array[vp], colorattr.array[vp + 1], colorattr.array[vp + 2]));\r\n            }\r\n            if (objectIndex === undefined && grps && grps.length > 0) {\r\n                for (const grp of grps) {\r\n                    if (i >= grp.start && i < grp.start + grp.count) {\r\n                        polys[pli] = new Polygon(vertices, grp.materialIndex);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                polys[pli] = new Polygon(vertices, objectIndex);\r\n            }\r\n        }\r\n        return CSG.fromPolygons(polys.filter((p) => !Number.isNaN(p.plane.normal.x)));\r\n    }\r\n    static toGeometry(csg, toMatrix) {\r\n        let triCount = 0;\r\n        const ps = csg.polygons;\r\n        for (const p of ps) {\r\n            triCount += p.vertices.length - 2;\r\n        }\r\n        const geom = new BufferGeometry();\r\n        const vertices = new NBuf3(triCount * 3 * 3);\r\n        const normals = new NBuf3(triCount * 3 * 3);\r\n        const uvs = new NBuf2(triCount * 2 * 3);\r\n        let colors;\r\n        const grps = [];\r\n        const dgrp = [];\r\n        for (const p of ps) {\r\n            const pvs = p.vertices;\r\n            const pvlen = pvs.length;\r\n            if (p.shared !== undefined) {\r\n                if (!grps[p.shared])\r\n                    grps[p.shared] = [];\r\n            }\r\n            if (pvlen && pvs[0].color !== undefined) {\r\n                if (!colors)\r\n                    colors = new NBuf3(triCount * 3 * 3);\r\n            }\r\n            for (let j = 3; j <= pvlen; j++) {\r\n                const grp = p.shared === undefined ? dgrp : grps[p.shared];\r\n                grp.push(vertices.top / 3, vertices.top / 3 + 1, vertices.top / 3 + 2);\r\n                vertices.write(pvs[0].pos);\r\n                vertices.write(pvs[j - 2].pos);\r\n                vertices.write(pvs[j - 1].pos);\r\n                normals.write(pvs[0].normal);\r\n                normals.write(pvs[j - 2].normal);\r\n                normals.write(pvs[j - 1].normal);\r\n                if (uvs) {\r\n                    uvs.write(pvs[0].uv);\r\n                    uvs.write(pvs[j - 2].uv);\r\n                    uvs.write(pvs[j - 1].uv);\r\n                }\r\n                if (colors) {\r\n                    colors.write(pvs[0].color);\r\n                    colors.write(pvs[j - 2].color);\r\n                    colors.write(pvs[j - 1].color);\r\n                }\r\n            }\r\n        }\r\n        geom.setAttribute('position', new BufferAttribute(vertices.array, 3));\r\n        geom.setAttribute('normal', new BufferAttribute(normals.array, 3));\r\n        uvs && geom.setAttribute('uv', new BufferAttribute(uvs.array, 2));\r\n        colors && geom.setAttribute('color', new BufferAttribute(colors.array, 3));\r\n        for (let gi = 0; gi < grps.length; gi++) {\r\n            if (grps[gi] === undefined) {\r\n                grps[gi] = [];\r\n            }\r\n        }\r\n        if (grps.length) {\r\n            let index = [];\r\n            let gbase = 0;\r\n            for (let gi = 0; gi < grps.length; gi++) {\r\n                geom.addGroup(gbase, grps[gi].length, gi);\r\n                gbase += grps[gi].length;\r\n                index = index.concat(grps[gi]);\r\n            }\r\n            geom.addGroup(gbase, dgrp.length, grps.length);\r\n            index = index.concat(dgrp);\r\n            geom.setIndex(index);\r\n        }\r\n        const inv = new Matrix4().copy(toMatrix).invert();\r\n        geom.applyMatrix4(inv);\r\n        geom.computeBoundingSphere();\r\n        geom.computeBoundingBox();\r\n        return geom;\r\n    }\r\n    static fromMesh(mesh, objectIndex) {\r\n        const csg = CSG.fromGeometry(mesh.geometry, objectIndex);\r\n        const ttvv0 = new Vector3();\r\n        const tmpm3 = new Matrix3();\r\n        tmpm3.getNormalMatrix(mesh.matrix);\r\n        for (let i = 0; i < csg.polygons.length; i++) {\r\n            const p = csg.polygons[i];\r\n            for (let j = 0; j < p.vertices.length; j++) {\r\n                const v = p.vertices[j];\r\n                v.pos.copy(ttvv0.copy(v.pos.toVector3()).applyMatrix4(mesh.matrix));\r\n                v.normal.copy(ttvv0.copy(v.normal.toVector3()).applyMatrix3(tmpm3));\r\n            }\r\n        }\r\n        return csg;\r\n    }\r\n    static toMesh(csg, toMatrix, toMaterial) {\r\n        const geom = CSG.toGeometry(csg, toMatrix);\r\n        const m = new Mesh(geom, toMaterial);\r\n        m.matrix.copy(toMatrix);\r\n        m.matrix.decompose(m.position, m.quaternion, m.scale);\r\n        m.rotation.setFromQuaternion(m.quaternion);\r\n        m.updateMatrixWorld();\r\n        m.castShadow = m.receiveShadow = true;\r\n        return m;\r\n    }\r\n    static union(meshA, meshB) {\r\n        const csgA = CSG.fromMesh(meshA);\r\n        const csgB = CSG.fromMesh(meshB);\r\n        return CSG.toMesh(csgA.union(csgB), meshA.matrix, meshA.material);\r\n    }\r\n    static subtract(meshA, meshB) {\r\n        const csgA = CSG.fromMesh(meshA);\r\n        const csgB = CSG.fromMesh(meshB);\r\n        return CSG.toMesh(csgA.subtract(csgB), meshA.matrix, meshA.material);\r\n    }\r\n    static intersect(meshA, meshB) {\r\n        const csgA = CSG.fromMesh(meshA);\r\n        const csgB = CSG.fromMesh(meshB);\r\n        return CSG.toMesh(csgA.intersect(csgB), meshA.matrix, meshA.material);\r\n    }\r\n    clone() {\r\n        const csg = new CSG();\r\n        csg.polygons = this.polygons\r\n            .map((p) => p.clone())\r\n            .filter((p) => Number.isFinite(p.plane.w));\r\n        return csg;\r\n    }\r\n    toPolygons() {\r\n        return this.polygons;\r\n    }\r\n    union(csg) {\r\n        const a = new Node(this.clone().polygons);\r\n        const b = new Node(csg.clone().polygons);\r\n        a.clipTo(b);\r\n        b.clipTo(a);\r\n        b.invert();\r\n        b.clipTo(a);\r\n        b.invert();\r\n        a.build(b.allPolygons());\r\n        return CSG.fromPolygons(a.allPolygons());\r\n    }\r\n    subtract(csg) {\r\n        const a = new Node(this.clone().polygons);\r\n        const b = new Node(csg.clone().polygons);\r\n        a.invert();\r\n        a.clipTo(b);\r\n        b.clipTo(a);\r\n        b.invert();\r\n        b.clipTo(a);\r\n        b.invert();\r\n        a.build(b.allPolygons());\r\n        a.invert();\r\n        return CSG.fromPolygons(a.allPolygons());\r\n    }\r\n    intersect(csg) {\r\n        const a = new Node(this.clone().polygons);\r\n        const b = new Node(csg.clone().polygons);\r\n        a.invert();\r\n        b.clipTo(a);\r\n        b.invert();\r\n        a.clipTo(b);\r\n        b.clipTo(a);\r\n        a.build(b.allPolygons());\r\n        a.invert();\r\n        return CSG.fromPolygons(a.allPolygons());\r\n    }\r\n    // Return a new CSG solid with solid and empty space switched. This solid is\r\n    // not modified.\r\n    inverse() {\r\n        const csg = this.clone();\r\n        for (const p of csg.polygons) {\r\n            p.flip();\r\n        }\r\n        return csg;\r\n    }\r\n    toMesh(toMatrix, toMaterial) {\r\n        return CSG.toMesh(this, toMatrix, toMaterial);\r\n    }\r\n    toGeometry(toMatrix) {\r\n        return CSG.toGeometry(this, toMatrix);\r\n    }\r\n}\r\n", null, "/*!\r\nfflate - fast JavaScript compression/decompression\r\n<https://101arrowz.github.io/fflate>\r\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\r\nversion 0.6.9\r\n*/\r\n\r\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\r\n// https://tools.ietf.org/html/rfc1951\r\n// You may also wish to take a look at the guide I made about this program:\r\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\r\n// Some of the following code is similar to that of UZIP.js:\r\n// https://github.com/photopea/UZIP.js\r\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\r\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\r\n// is better for memory in most engines (I *think*).\r\nvar ch2 = {};\r\nvar durl = function (c) { return URL.createObjectURL(new Blob([c], { type: 'text/javascript' })); };\r\nvar cwk = function (u) { return new Worker(u); };\r\ntry {\r\n    URL.revokeObjectURL(durl(''));\r\n}\r\ncatch (e) {\r\n    // We're in Deno or a very old browser\r\n    durl = function (c) { return 'data:application/javascript;charset=UTF-8,' + encodeURI(c); };\r\n    // If Deno, this is necessary; if not, this changes nothing\r\n    cwk = function (u) { return new Worker(u, { type: 'module' }); };\r\n}\r\nvar wk = (function (c, id, msg, transfer, cb) {\r\n    var w = cwk(ch2[id] || (ch2[id] = durl(c)));\r\n    w.onerror = function (e) { return cb(e.error, null); };\r\n    w.onmessage = function (e) { return cb(null, e.data); };\r\n    w.postMessage(msg, transfer);\r\n    return w;\r\n});\r\n\r\n// aliases for shorter compressed code (most minifers don't do this)\r\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\r\n// fixed length extra bits\r\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\r\n// fixed distance extra bits\r\n// see fleb note\r\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\r\n// code length index map\r\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\r\n// get base, reverse index map from extra bits\r\nvar freb = function (eb, start) {\r\n    var b = new u16(31);\r\n    for (var i = 0; i < 31; ++i) {\r\n        b[i] = start += 1 << eb[i - 1];\r\n    }\r\n    // numbers here are at max 18 bits\r\n    var r = new u32(b[30]);\r\n    for (var i = 1; i < 30; ++i) {\r\n        for (var j = b[i]; j < b[i + 1]; ++j) {\r\n            r[j] = ((j - b[i]) << 5) | i;\r\n        }\r\n    }\r\n    return [b, r];\r\n};\r\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\r\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\r\nfl[28] = 258, revfl[258] = 28;\r\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\r\n// map of value to reverse (assuming 16 bits)\r\nvar rev = new u16(32768);\r\nfor (var i = 0; i < 32768; ++i) {\r\n    // reverse table algorithm from SO\r\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\r\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\r\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\r\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\r\n}\r\n// create huffman tree from u8 \"map\": index -> code length for code index\r\n// mb (max bits) must be at most 15\r\n// TODO: optimize/split up?\r\nvar hMap = (function (cd, mb, r) {\r\n    var s = cd.length;\r\n    // index\r\n    var i = 0;\r\n    // u16 \"map\": index -> # of codes with bit length = index\r\n    var l = new u16(mb);\r\n    // length of cd must be 288 (total # of codes)\r\n    for (; i < s; ++i)\r\n        ++l[cd[i] - 1];\r\n    // u16 \"map\": index -> minimum code for bit length = index\r\n    var le = new u16(mb);\r\n    for (i = 0; i < mb; ++i) {\r\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\r\n    }\r\n    var co;\r\n    if (r) {\r\n        // u16 \"map\": index -> number of actual bits, symbol for code\r\n        co = new u16(1 << mb);\r\n        // bits to remove for reverser\r\n        var rvb = 15 - mb;\r\n        for (i = 0; i < s; ++i) {\r\n            // ignore 0 lengths\r\n            if (cd[i]) {\r\n                // num encoding both symbol and bits read\r\n                var sv = (i << 4) | cd[i];\r\n                // free bits\r\n                var r_1 = mb - cd[i];\r\n                // start value\r\n                var v = le[cd[i] - 1]++ << r_1;\r\n                // m is end value\r\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\r\n                    // every 16 bit value starting with the code yields the same result\r\n                    co[rev[v] >>> rvb] = sv;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        co = new u16(s);\r\n        for (i = 0; i < s; ++i) {\r\n            if (cd[i]) {\r\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\r\n            }\r\n        }\r\n    }\r\n    return co;\r\n});\r\n// fixed length tree\r\nvar flt = new u8(288);\r\nfor (var i = 0; i < 144; ++i)\r\n    flt[i] = 8;\r\nfor (var i = 144; i < 256; ++i)\r\n    flt[i] = 9;\r\nfor (var i = 256; i < 280; ++i)\r\n    flt[i] = 7;\r\nfor (var i = 280; i < 288; ++i)\r\n    flt[i] = 8;\r\n// fixed distance tree\r\nvar fdt = new u8(32);\r\nfor (var i = 0; i < 32; ++i)\r\n    fdt[i] = 5;\r\n// fixed length map\r\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\r\n// fixed distance map\r\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\r\n// find max of array\r\nvar max = function (a) {\r\n    var m = a[0];\r\n    for (var i = 1; i < a.length; ++i) {\r\n        if (a[i] > m)\r\n            m = a[i];\r\n    }\r\n    return m;\r\n};\r\n// read d, starting at bit p and mask with m\r\nvar bits = function (d, p, m) {\r\n    var o = (p / 8) | 0;\r\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\r\n};\r\n// read d, starting at bit p continuing for at least 16 bits\r\nvar bits16 = function (d, p) {\r\n    var o = (p / 8) | 0;\r\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\r\n};\r\n// get end of byte\r\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\r\n// typed array slice - allows garbage collector to free original reference,\r\n// while being more compatible than .slice\r\nvar slc = function (v, s, e) {\r\n    if (s == null || s < 0)\r\n        s = 0;\r\n    if (e == null || e > v.length)\r\n        e = v.length;\r\n    // can't use .constructor in case user-supplied\r\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\r\n    n.set(v.subarray(s, e));\r\n    return n;\r\n};\r\n// expands raw DEFLATE data\r\nvar inflt = function (dat, buf, st) {\r\n    // source length\r\n    var sl = dat.length;\r\n    if (!sl || (st && !st.l && sl < 5))\r\n        return buf || new u8(0);\r\n    // have to estimate size\r\n    var noBuf = !buf || st;\r\n    // no state\r\n    var noSt = !st || st.i;\r\n    if (!st)\r\n        st = {};\r\n    // Assumes roughly 33% compression ratio average\r\n    if (!buf)\r\n        buf = new u8(sl * 3);\r\n    // ensure buffer can fit at least l elements\r\n    var cbuf = function (l) {\r\n        var bl = buf.length;\r\n        // need to increase size to fit\r\n        if (l > bl) {\r\n            // Double or set to necessary, whichever is greater\r\n            var nbuf = new u8(Math.max(bl * 2, l));\r\n            nbuf.set(buf);\r\n            buf = nbuf;\r\n        }\r\n    };\r\n    //  last chunk         bitpos           bytes\r\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\r\n    // total bits\r\n    var tbts = sl * 8;\r\n    do {\r\n        if (!lm) {\r\n            // BFINAL - this is only 1 when last chunk is next\r\n            st.f = final = bits(dat, pos, 1);\r\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\r\n            var type = bits(dat, pos + 1, 3);\r\n            pos += 3;\r\n            if (!type) {\r\n                // go to end of byte boundary\r\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\r\n                if (t > sl) {\r\n                    if (noSt)\r\n                        throw 'unexpected EOF';\r\n                    break;\r\n                }\r\n                // ensure size\r\n                if (noBuf)\r\n                    cbuf(bt + l);\r\n                // Copy over uncompressed data\r\n                buf.set(dat.subarray(s, t), bt);\r\n                // Get new bitpos, update byte count\r\n                st.b = bt += l, st.p = pos = t * 8;\r\n                continue;\r\n            }\r\n            else if (type == 1)\r\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\r\n            else if (type == 2) {\r\n                //  literal                            lengths\r\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\r\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\r\n                pos += 14;\r\n                // length+distance tree\r\n                var ldt = new u8(tl);\r\n                // code length tree\r\n                var clt = new u8(19);\r\n                for (var i = 0; i < hcLen; ++i) {\r\n                    // use index map to get real code\r\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\r\n                }\r\n                pos += hcLen * 3;\r\n                // code lengths bits\r\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\r\n                // code lengths map\r\n                var clm = hMap(clt, clb, 1);\r\n                for (var i = 0; i < tl;) {\r\n                    var r = clm[bits(dat, pos, clbmsk)];\r\n                    // bits read\r\n                    pos += r & 15;\r\n                    // symbol\r\n                    var s = r >>> 4;\r\n                    // code length to copy\r\n                    if (s < 16) {\r\n                        ldt[i++] = s;\r\n                    }\r\n                    else {\r\n                        //  copy   count\r\n                        var c = 0, n = 0;\r\n                        if (s == 16)\r\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\r\n                        else if (s == 17)\r\n                            n = 3 + bits(dat, pos, 7), pos += 3;\r\n                        else if (s == 18)\r\n                            n = 11 + bits(dat, pos, 127), pos += 7;\r\n                        while (n--)\r\n                            ldt[i++] = c;\r\n                    }\r\n                }\r\n                //    length tree                 distance tree\r\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\r\n                // max length bits\r\n                lbt = max(lt);\r\n                // max dist bits\r\n                dbt = max(dt);\r\n                lm = hMap(lt, lbt, 1);\r\n                dm = hMap(dt, dbt, 1);\r\n            }\r\n            else\r\n                throw 'invalid block type';\r\n            if (pos > tbts) {\r\n                if (noSt)\r\n                    throw 'unexpected EOF';\r\n                break;\r\n            }\r\n        }\r\n        // Make sure the buffer can hold this + the largest possible addition\r\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\r\n        if (noBuf)\r\n            cbuf(bt + 131072);\r\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\r\n        var lpos = pos;\r\n        for (;; lpos = pos) {\r\n            // bits read, code\r\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\r\n            pos += c & 15;\r\n            if (pos > tbts) {\r\n                if (noSt)\r\n                    throw 'unexpected EOF';\r\n                break;\r\n            }\r\n            if (!c)\r\n                throw 'invalid length/literal';\r\n            if (sym < 256)\r\n                buf[bt++] = sym;\r\n            else if (sym == 256) {\r\n                lpos = pos, lm = null;\r\n                break;\r\n            }\r\n            else {\r\n                var add = sym - 254;\r\n                // no extra bits needed if less\r\n                if (sym > 264) {\r\n                    // index\r\n                    var i = sym - 257, b = fleb[i];\r\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\r\n                    pos += b;\r\n                }\r\n                // dist\r\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\r\n                if (!d)\r\n                    throw 'invalid distance';\r\n                pos += d & 15;\r\n                var dt = fd[dsym];\r\n                if (dsym > 3) {\r\n                    var b = fdeb[dsym];\r\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\r\n                }\r\n                if (pos > tbts) {\r\n                    if (noSt)\r\n                        throw 'unexpected EOF';\r\n                    break;\r\n                }\r\n                if (noBuf)\r\n                    cbuf(bt + 131072);\r\n                var end = bt + add;\r\n                for (; bt < end; bt += 4) {\r\n                    buf[bt] = buf[bt - dt];\r\n                    buf[bt + 1] = buf[bt + 1 - dt];\r\n                    buf[bt + 2] = buf[bt + 2 - dt];\r\n                    buf[bt + 3] = buf[bt + 3 - dt];\r\n                }\r\n                bt = end;\r\n            }\r\n        }\r\n        st.l = lm, st.p = lpos, st.b = bt;\r\n        if (lm)\r\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\r\n    } while (!final);\r\n    return bt == buf.length ? buf : slc(buf, 0, bt);\r\n};\r\n// starting at p, write the minimum number of bits that can hold v to d\r\nvar wbits = function (d, p, v) {\r\n    v <<= p & 7;\r\n    var o = (p / 8) | 0;\r\n    d[o] |= v;\r\n    d[o + 1] |= v >>> 8;\r\n};\r\n// starting at p, write the minimum number of bits (>8) that can hold v to d\r\nvar wbits16 = function (d, p, v) {\r\n    v <<= p & 7;\r\n    var o = (p / 8) | 0;\r\n    d[o] |= v;\r\n    d[o + 1] |= v >>> 8;\r\n    d[o + 2] |= v >>> 16;\r\n};\r\n// creates code lengths from a frequency table\r\nvar hTree = function (d, mb) {\r\n    // Need extra info to make a tree\r\n    var t = [];\r\n    for (var i = 0; i < d.length; ++i) {\r\n        if (d[i])\r\n            t.push({ s: i, f: d[i] });\r\n    }\r\n    var s = t.length;\r\n    var t2 = t.slice();\r\n    if (!s)\r\n        return [et, 0];\r\n    if (s == 1) {\r\n        var v = new u8(t[0].s + 1);\r\n        v[t[0].s] = 1;\r\n        return [v, 1];\r\n    }\r\n    t.sort(function (a, b) { return a.f - b.f; });\r\n    // after i2 reaches last ind, will be stopped\r\n    // freq must be greater than largest possible number of symbols\r\n    t.push({ s: -1, f: 25001 });\r\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\r\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\r\n    // efficient algorithm from UZIP.js\r\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\r\n    // symbols that combined have high freq, will start processing i2 (high-freq,\r\n    // non-composite) symbols instead\r\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\r\n    while (i1 != s - 1) {\r\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\r\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\r\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\r\n    }\r\n    var maxSym = t2[0].s;\r\n    for (var i = 1; i < s; ++i) {\r\n        if (t2[i].s > maxSym)\r\n            maxSym = t2[i].s;\r\n    }\r\n    // code lengths\r\n    var tr = new u16(maxSym + 1);\r\n    // max bits in tree\r\n    var mbt = ln(t[i1 - 1], tr, 0);\r\n    if (mbt > mb) {\r\n        // more algorithms from UZIP.js\r\n        // TODO: find out how this code works (debt)\r\n        //  ind    debt\r\n        var i = 0, dt = 0;\r\n        //    left            cost\r\n        var lft = mbt - mb, cst = 1 << lft;\r\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\r\n        for (; i < s; ++i) {\r\n            var i2_1 = t2[i].s;\r\n            if (tr[i2_1] > mb) {\r\n                dt += cst - (1 << (mbt - tr[i2_1]));\r\n                tr[i2_1] = mb;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        dt >>>= lft;\r\n        while (dt > 0) {\r\n            var i2_2 = t2[i].s;\r\n            if (tr[i2_2] < mb)\r\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\r\n            else\r\n                ++i;\r\n        }\r\n        for (; i >= 0 && dt; --i) {\r\n            var i2_3 = t2[i].s;\r\n            if (tr[i2_3] == mb) {\r\n                --tr[i2_3];\r\n                ++dt;\r\n            }\r\n        }\r\n        mbt = mb;\r\n    }\r\n    return [new u8(tr), mbt];\r\n};\r\n// get the max length and assign length codes\r\nvar ln = function (n, l, d) {\r\n    return n.s == -1\r\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\r\n        : (l[n.s] = d);\r\n};\r\n// length codes generation\r\nvar lc = function (c) {\r\n    var s = c.length;\r\n    // Note that the semicolon was intentional\r\n    while (s && !c[--s])\r\n        ;\r\n    var cl = new u16(++s);\r\n    //  ind      num         streak\r\n    var cli = 0, cln = c[0], cls = 1;\r\n    var w = function (v) { cl[cli++] = v; };\r\n    for (var i = 1; i <= s; ++i) {\r\n        if (c[i] == cln && i != s)\r\n            ++cls;\r\n        else {\r\n            if (!cln && cls > 2) {\r\n                for (; cls > 138; cls -= 138)\r\n                    w(32754);\r\n                if (cls > 2) {\r\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\r\n                    cls = 0;\r\n                }\r\n            }\r\n            else if (cls > 3) {\r\n                w(cln), --cls;\r\n                for (; cls > 6; cls -= 6)\r\n                    w(8304);\r\n                if (cls > 2)\r\n                    w(((cls - 3) << 5) | 8208), cls = 0;\r\n            }\r\n            while (cls--)\r\n                w(cln);\r\n            cls = 1;\r\n            cln = c[i];\r\n        }\r\n    }\r\n    return [cl.subarray(0, cli), s];\r\n};\r\n// calculate the length of output from tree, code lengths\r\nvar clen = function (cf, cl) {\r\n    var l = 0;\r\n    for (var i = 0; i < cl.length; ++i)\r\n        l += cf[i] * cl[i];\r\n    return l;\r\n};\r\n// writes a fixed block\r\n// returns the new bit pos\r\nvar wfblk = function (out, pos, dat) {\r\n    // no need to write 00 as type: TypedArray defaults to 0\r\n    var s = dat.length;\r\n    var o = shft(pos + 2);\r\n    out[o] = s & 255;\r\n    out[o + 1] = s >>> 8;\r\n    out[o + 2] = out[o] ^ 255;\r\n    out[o + 3] = out[o + 1] ^ 255;\r\n    for (var i = 0; i < s; ++i)\r\n        out[o + i + 4] = dat[i];\r\n    return (o + 4 + s) * 8;\r\n};\r\n// writes a block\r\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\r\n    wbits(out, p++, final);\r\n    ++lf[256];\r\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\r\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\r\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\r\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\r\n    var lcfreq = new u16(19);\r\n    for (var i = 0; i < lclt.length; ++i)\r\n        lcfreq[lclt[i] & 31]++;\r\n    for (var i = 0; i < lcdt.length; ++i)\r\n        lcfreq[lcdt[i] & 31]++;\r\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\r\n    var nlcc = 19;\r\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\r\n        ;\r\n    var flen = (bl + 5) << 3;\r\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\r\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\r\n    if (flen <= ftlen && flen <= dtlen)\r\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\r\n    var lm, ll, dm, dl;\r\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\r\n    if (dtlen < ftlen) {\r\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\r\n        var llm = hMap(lct, mlcb, 0);\r\n        wbits(out, p, nlc - 257);\r\n        wbits(out, p + 5, ndc - 1);\r\n        wbits(out, p + 10, nlcc - 4);\r\n        p += 14;\r\n        for (var i = 0; i < nlcc; ++i)\r\n            wbits(out, p + 3 * i, lct[clim[i]]);\r\n        p += 3 * nlcc;\r\n        var lcts = [lclt, lcdt];\r\n        for (var it = 0; it < 2; ++it) {\r\n            var clct = lcts[it];\r\n            for (var i = 0; i < clct.length; ++i) {\r\n                var len = clct[i] & 31;\r\n                wbits(out, p, llm[len]), p += lct[len];\r\n                if (len > 15)\r\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\r\n    }\r\n    for (var i = 0; i < li; ++i) {\r\n        if (syms[i] > 255) {\r\n            var len = (syms[i] >>> 18) & 31;\r\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\r\n            if (len > 7)\r\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\r\n            var dst = syms[i] & 31;\r\n            wbits16(out, p, dm[dst]), p += dl[dst];\r\n            if (dst > 3)\r\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\r\n        }\r\n        else {\r\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\r\n        }\r\n    }\r\n    wbits16(out, p, lm[256]);\r\n    return p + ll[256];\r\n};\r\n// deflate options (nice << 13) | chain\r\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\r\n// empty\r\nvar et = /*#__PURE__*/ new u8(0);\r\n// compresses data into a raw DEFLATE buffer\r\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\r\n    var s = dat.length;\r\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\r\n    // writing to this writes to the output buffer\r\n    var w = o.subarray(pre, o.length - post);\r\n    var pos = 0;\r\n    if (!lvl || s < 8) {\r\n        for (var i = 0; i <= s; i += 65535) {\r\n            // end\r\n            var e = i + 65535;\r\n            if (e < s) {\r\n                // write full block\r\n                pos = wfblk(w, pos, dat.subarray(i, e));\r\n            }\r\n            else {\r\n                // write final block\r\n                w[i] = lst;\r\n                pos = wfblk(w, pos, dat.subarray(i, s));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var opt = deo[lvl - 1];\r\n        var n = opt >>> 13, c = opt & 8191;\r\n        var msk_1 = (1 << plvl) - 1;\r\n        //    prev 2-byte val map    curr 2-byte val map\r\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\r\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\r\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\r\n        // 24576 is an arbitrary number of maximum symbols per block\r\n        // 424 buffer for last block\r\n        var syms = new u32(25000);\r\n        // length/literal freq   distance freq\r\n        var lf = new u16(288), df = new u16(32);\r\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\r\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\r\n        for (; i < s; ++i) {\r\n            // hash value\r\n            // deopt when i > s - 3 - at end, deopt acceptable\r\n            var hv = hsh(i);\r\n            // index mod 32768    previous index mod\r\n            var imod = i & 32767, pimod = head[hv];\r\n            prev[imod] = pimod;\r\n            head[hv] = imod;\r\n            // We always should modify head and prev, but only add symbols if\r\n            // this data is not yet processed (\"wait\" for wait index)\r\n            if (wi <= i) {\r\n                // bytes remaining\r\n                var rem = s - i;\r\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\r\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\r\n                    li = lc_1 = eb = 0, bs = i;\r\n                    for (var j = 0; j < 286; ++j)\r\n                        lf[j] = 0;\r\n                    for (var j = 0; j < 30; ++j)\r\n                        df[j] = 0;\r\n                }\r\n                //  len    dist   chain\r\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\r\n                if (rem > 2 && hv == hsh(i - dif)) {\r\n                    var maxn = Math.min(n, rem) - 1;\r\n                    var maxd = Math.min(32767, i);\r\n                    // max possible length\r\n                    // not capped at dif because decompressors implement \"rolling\" index population\r\n                    var ml = Math.min(258, rem);\r\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\r\n                        if (dat[i + l] == dat[i + l - dif]) {\r\n                            var nl = 0;\r\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\r\n                                ;\r\n                            if (nl > l) {\r\n                                l = nl, d = dif;\r\n                                // break out early when we reach \"nice\" (we are satisfied enough)\r\n                                if (nl > maxn)\r\n                                    break;\r\n                                // now, find the rarest 2-byte sequence within this\r\n                                // length of literals and search for that instead.\r\n                                // Much faster than just using the start\r\n                                var mmd = Math.min(dif, nl - 2);\r\n                                var md = 0;\r\n                                for (var j = 0; j < mmd; ++j) {\r\n                                    var ti = (i - dif + j + 32768) & 32767;\r\n                                    var pti = prev[ti];\r\n                                    var cd = (ti - pti + 32768) & 32767;\r\n                                    if (cd > md)\r\n                                        md = cd, pimod = ti;\r\n                                }\r\n                            }\r\n                        }\r\n                        // check the previous match\r\n                        imod = pimod, pimod = prev[imod];\r\n                        dif += (imod - pimod + 32768) & 32767;\r\n                    }\r\n                }\r\n                // d will be nonzero only when a match was found\r\n                if (d) {\r\n                    // store both dist and len data in one Uint32\r\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\r\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\r\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\r\n                    eb += fleb[lin] + fdeb[din];\r\n                    ++lf[257 + lin];\r\n                    ++df[din];\r\n                    wi = i + l;\r\n                    ++lc_1;\r\n                }\r\n                else {\r\n                    syms[li++] = dat[i];\r\n                    ++lf[dat[i]];\r\n                }\r\n            }\r\n        }\r\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\r\n        // this is the easiest way to avoid needing to maintain state\r\n        if (!lst && pos & 7)\r\n            pos = wfblk(w, pos + 1, et);\r\n    }\r\n    return slc(o, 0, pre + shft(pos) + post);\r\n};\r\n// CRC32 table\r\nvar crct = /*#__PURE__*/ (function () {\r\n    var t = new u32(256);\r\n    for (var i = 0; i < 256; ++i) {\r\n        var c = i, k = 9;\r\n        while (--k)\r\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\r\n        t[i] = c;\r\n    }\r\n    return t;\r\n})();\r\n// CRC32\r\nvar crc = function () {\r\n    var c = -1;\r\n    return {\r\n        p: function (d) {\r\n            // closures have awful performance\r\n            var cr = c;\r\n            for (var i = 0; i < d.length; ++i)\r\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\r\n            c = cr;\r\n        },\r\n        d: function () { return ~c; }\r\n    };\r\n};\r\n// Alder32\r\nvar adler = function () {\r\n    var a = 1, b = 0;\r\n    return {\r\n        p: function (d) {\r\n            // closures have awful performance\r\n            var n = a, m = b;\r\n            var l = d.length;\r\n            for (var i = 0; i != l;) {\r\n                var e = Math.min(i + 2655, l);\r\n                for (; i < e; ++i)\r\n                    m += n += d[i];\r\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\r\n            }\r\n            a = n, b = m;\r\n        },\r\n        d: function () {\r\n            a %= 65521, b %= 65521;\r\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\r\n        }\r\n    };\r\n};\r\n;\r\n// deflate with opts\r\nvar dopt = function (dat, opt, pre, post, st) {\r\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\r\n};\r\n// Walmart object spread\r\nvar mrg = function (a, b) {\r\n    var o = {};\r\n    for (var k in a)\r\n        o[k] = a[k];\r\n    for (var k in b)\r\n        o[k] = b[k];\r\n    return o;\r\n};\r\n// worker clone\r\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\r\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\r\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\r\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\r\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\r\n// This took me three weeks to figure out how to do.\r\nvar wcln = function (fn, fnStr, td) {\r\n    var dt = fn();\r\n    var st = fn.toString();\r\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\r\n    for (var i = 0; i < dt.length; ++i) {\r\n        var v = dt[i], k = ks[i];\r\n        if (typeof v == 'function') {\r\n            fnStr += ';' + k + '=';\r\n            var st_1 = v.toString();\r\n            if (v.prototype) {\r\n                // for global objects\r\n                if (st_1.indexOf('[native code]') != -1) {\r\n                    var spInd = st_1.indexOf(' ', 8) + 1;\r\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\r\n                }\r\n                else {\r\n                    fnStr += st_1;\r\n                    for (var t in v.prototype)\r\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\r\n                }\r\n            }\r\n            else\r\n                fnStr += st_1;\r\n        }\r\n        else\r\n            td[k] = v;\r\n    }\r\n    return [fnStr, td];\r\n};\r\nvar ch = [];\r\n// clone bufs\r\nvar cbfs = function (v) {\r\n    var tl = [];\r\n    for (var k in v) {\r\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\r\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\r\n    }\r\n    return tl;\r\n};\r\n// use a worker to execute code\r\nvar wrkr = function (fns, init, id, cb) {\r\n    var _a;\r\n    if (!ch[id]) {\r\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\r\n        for (var i = 0; i < m; ++i)\r\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\r\n        ch[id] = wcln(fns[m], fnStr, td_1);\r\n    }\r\n    var td = mrg({}, ch[id][1]);\r\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\r\n};\r\n// base async inflate fn\r\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\r\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\r\n// gzip extra\r\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\r\n// gunzip extra\r\nvar guze = function () { return [gzs, gzl]; };\r\n// zlib extra\r\nvar zle = function () { return [zlh, wbytes, adler]; };\r\n// unzlib extra\r\nvar zule = function () { return [zlv]; };\r\n// post buf\r\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\r\n// get u8\r\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\r\n// async helper\r\nvar cbify = function (dat, opts, fns, init, id, cb) {\r\n    var w = wrkr(fns, init, id, function (err, dat) {\r\n        w.terminate();\r\n        cb(err, dat);\r\n    });\r\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\r\n    return function () { w.terminate(); };\r\n};\r\n// auto stream\r\nvar astrm = function (strm) {\r\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\r\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\r\n};\r\n// async stream attach\r\nvar astrmify = function (fns, strm, opts, init, id) {\r\n    var t;\r\n    var w = wrkr(fns, init, id, function (err, dat) {\r\n        if (err)\r\n            w.terminate(), strm.ondata.call(strm, err);\r\n        else {\r\n            if (dat[1])\r\n                w.terminate();\r\n            strm.ondata.call(strm, err, dat[0], dat[1]);\r\n        }\r\n    });\r\n    w.postMessage(opts);\r\n    strm.push = function (d, f) {\r\n        if (t)\r\n            throw 'stream finished';\r\n        if (!strm.ondata)\r\n            throw 'no stream handler';\r\n        w.postMessage([d, t = f], [d.buffer]);\r\n    };\r\n    strm.terminate = function () { w.terminate(); };\r\n};\r\n// read 2 bytes\r\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\r\n// read 4 bytes\r\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\r\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\r\n// write bytes\r\nvar wbytes = function (d, b, v) {\r\n    for (; v; ++b)\r\n        d[b] = v, v >>>= 8;\r\n};\r\n// gzip header\r\nvar gzh = function (c, o) {\r\n    var fn = o.filename;\r\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\r\n    if (o.mtime != 0)\r\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\r\n    if (fn) {\r\n        c[3] = 8;\r\n        for (var i = 0; i <= fn.length; ++i)\r\n            c[i + 10] = fn.charCodeAt(i);\r\n    }\r\n};\r\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\r\n// gzip start\r\nvar gzs = function (d) {\r\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\r\n        throw 'invalid gzip data';\r\n    var flg = d[3];\r\n    var st = 10;\r\n    if (flg & 4)\r\n        st += d[10] | (d[11] << 8) + 2;\r\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\r\n        ;\r\n    return st + (flg & 2);\r\n};\r\n// gzip length\r\nvar gzl = function (d) {\r\n    var l = d.length;\r\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\r\n};\r\n// gzip header length\r\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\r\n// zlib header\r\nvar zlh = function (c, o) {\r\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\r\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\r\n};\r\n// zlib valid\r\nvar zlv = function (d) {\r\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\r\n        throw 'invalid zlib data';\r\n    if (d[1] & 32)\r\n        throw 'invalid zlib data: preset dictionaries not supported';\r\n};\r\nfunction AsyncCmpStrm(opts, cb) {\r\n    if (!cb && typeof opts == 'function')\r\n        cb = opts, opts = {};\r\n    this.ondata = cb;\r\n    return opts;\r\n}\r\n// zlib footer: -4 to -0 is Adler32\r\n/**\r\n * Streaming DEFLATE compression\r\n */\r\nvar Deflate = /*#__PURE__*/ (function () {\r\n    function Deflate(opts, cb) {\r\n        if (!cb && typeof opts == 'function')\r\n            cb = opts, opts = {};\r\n        this.ondata = cb;\r\n        this.o = opts || {};\r\n    }\r\n    Deflate.prototype.p = function (c, f) {\r\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\r\n    };\r\n    /**\r\n     * Pushes a chunk to be deflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Deflate.prototype.push = function (chunk, final) {\r\n        if (this.d)\r\n            throw 'stream finished';\r\n        if (!this.ondata)\r\n            throw 'no stream handler';\r\n        this.d = final;\r\n        this.p(chunk, final || false);\r\n    };\r\n    return Deflate;\r\n}());\r\nexport { Deflate };\r\n/**\r\n * Asynchronous streaming DEFLATE compression\r\n */\r\nvar AsyncDeflate = /*#__PURE__*/ (function () {\r\n    function AsyncDeflate(opts, cb) {\r\n        astrmify([\r\n            bDflt,\r\n            function () { return [astrm, Deflate]; }\r\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\r\n            var strm = new Deflate(ev.data);\r\n            onmessage = astrm(strm);\r\n        }, 6);\r\n    }\r\n    return AsyncDeflate;\r\n}());\r\nexport { AsyncDeflate };\r\nexport function deflate(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return cbify(data, opts, [\r\n        bDflt,\r\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\r\n}\r\n/**\r\n * Compresses data with DEFLATE without any wrapper\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The deflated version of the data\r\n */\r\nexport function deflateSync(data, opts) {\r\n    return dopt(data, opts || {}, 0, 0);\r\n}\r\n/**\r\n * Streaming DEFLATE decompression\r\n */\r\nvar Inflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an inflation stream\r\n     * @param cb The callback to call whenever data is inflated\r\n     */\r\n    function Inflate(cb) {\r\n        this.s = {};\r\n        this.p = new u8(0);\r\n        this.ondata = cb;\r\n    }\r\n    Inflate.prototype.e = function (c) {\r\n        if (this.d)\r\n            throw 'stream finished';\r\n        if (!this.ondata)\r\n            throw 'no stream handler';\r\n        var l = this.p.length;\r\n        var n = new u8(l + c.length);\r\n        n.set(this.p), n.set(c, l), this.p = n;\r\n    };\r\n    Inflate.prototype.c = function (final) {\r\n        this.d = this.s.i = final || false;\r\n        var bts = this.s.b;\r\n        var dt = inflt(this.p, this.o, this.s);\r\n        this.ondata(slc(dt, bts, this.s.b), this.d);\r\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\r\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\r\n    };\r\n    /**\r\n     * Pushes a chunk to be inflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the final chunk\r\n     */\r\n    Inflate.prototype.push = function (chunk, final) {\r\n        this.e(chunk), this.c(final);\r\n    };\r\n    return Inflate;\r\n}());\r\nexport { Inflate };\r\n/**\r\n * Asynchronous streaming DEFLATE decompression\r\n */\r\nvar AsyncInflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an asynchronous inflation stream\r\n     * @param cb The callback to call whenever data is deflated\r\n     */\r\n    function AsyncInflate(cb) {\r\n        this.ondata = cb;\r\n        astrmify([\r\n            bInflt,\r\n            function () { return [astrm, Inflate]; }\r\n        ], this, 0, function () {\r\n            var strm = new Inflate();\r\n            onmessage = astrm(strm);\r\n        }, 7);\r\n    }\r\n    return AsyncInflate;\r\n}());\r\nexport { AsyncInflate };\r\nexport function inflate(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return cbify(data, opts, [\r\n        bInflt\r\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\r\n}\r\n/**\r\n * Expands DEFLATE data with no wrapper\r\n * @param data The data to decompress\r\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\r\n * @returns The decompressed version of the data\r\n */\r\nexport function inflateSync(data, out) {\r\n    return inflt(data, out);\r\n}\r\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\r\n/**\r\n * Streaming GZIP compression\r\n */\r\nvar Gzip = /*#__PURE__*/ (function () {\r\n    function Gzip(opts, cb) {\r\n        this.c = crc();\r\n        this.l = 0;\r\n        this.v = 1;\r\n        Deflate.call(this, opts, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be GZIPped\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Gzip.prototype.push = function (chunk, final) {\r\n        Deflate.prototype.push.call(this, chunk, final);\r\n    };\r\n    Gzip.prototype.p = function (c, f) {\r\n        this.c.p(c);\r\n        this.l += c.length;\r\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\r\n        if (this.v)\r\n            gzh(raw, this.o), this.v = 0;\r\n        if (f)\r\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\r\n        this.ondata(raw, f);\r\n    };\r\n    return Gzip;\r\n}());\r\nexport { Gzip };\r\n/**\r\n * Asynchronous streaming GZIP compression\r\n */\r\nvar AsyncGzip = /*#__PURE__*/ (function () {\r\n    function AsyncGzip(opts, cb) {\r\n        astrmify([\r\n            bDflt,\r\n            gze,\r\n            function () { return [astrm, Deflate, Gzip]; }\r\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\r\n            var strm = new Gzip(ev.data);\r\n            onmessage = astrm(strm);\r\n        }, 8);\r\n    }\r\n    return AsyncGzip;\r\n}());\r\nexport { AsyncGzip };\r\nexport function gzip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return cbify(data, opts, [\r\n        bDflt,\r\n        gze,\r\n        function () { return [gzipSync]; }\r\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\r\n}\r\n/**\r\n * Compresses data with GZIP\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The gzipped version of the data\r\n */\r\nexport function gzipSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var c = crc(), l = data.length;\r\n    c.p(data);\r\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\r\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\r\n}\r\n/**\r\n * Streaming GZIP decompression\r\n */\r\nvar Gunzip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a GUNZIP stream\r\n     * @param cb The callback to call whenever data is inflated\r\n     */\r\n    function Gunzip(cb) {\r\n        this.v = 1;\r\n        Inflate.call(this, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be GUNZIPped\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Gunzip.prototype.push = function (chunk, final) {\r\n        Inflate.prototype.e.call(this, chunk);\r\n        if (this.v) {\r\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\r\n            if (s >= this.p.length && !final)\r\n                return;\r\n            this.p = this.p.subarray(s), this.v = 0;\r\n        }\r\n        if (final) {\r\n            if (this.p.length < 8)\r\n                throw 'invalid gzip stream';\r\n            this.p = this.p.subarray(0, -8);\r\n        }\r\n        // necessary to prevent TS from using the closure value\r\n        // This allows for workerization to function correctly\r\n        Inflate.prototype.c.call(this, final);\r\n    };\r\n    return Gunzip;\r\n}());\r\nexport { Gunzip };\r\n/**\r\n * Asynchronous streaming GZIP decompression\r\n */\r\nvar AsyncGunzip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an asynchronous GUNZIP stream\r\n     * @param cb The callback to call whenever data is deflated\r\n     */\r\n    function AsyncGunzip(cb) {\r\n        this.ondata = cb;\r\n        astrmify([\r\n            bInflt,\r\n            guze,\r\n            function () { return [astrm, Inflate, Gunzip]; }\r\n        ], this, 0, function () {\r\n            var strm = new Gunzip();\r\n            onmessage = astrm(strm);\r\n        }, 9);\r\n    }\r\n    return AsyncGunzip;\r\n}());\r\nexport { AsyncGunzip };\r\nexport function gunzip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return cbify(data, opts, [\r\n        bInflt,\r\n        guze,\r\n        function () { return [gunzipSync]; }\r\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\r\n}\r\n/**\r\n * Expands GZIP data\r\n * @param data The data to decompress\r\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\r\n * @returns The decompressed version of the data\r\n */\r\nexport function gunzipSync(data, out) {\r\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\r\n}\r\n/**\r\n * Streaming Zlib compression\r\n */\r\nvar Zlib = /*#__PURE__*/ (function () {\r\n    function Zlib(opts, cb) {\r\n        this.c = adler();\r\n        this.v = 1;\r\n        Deflate.call(this, opts, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be zlibbed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Zlib.prototype.push = function (chunk, final) {\r\n        Deflate.prototype.push.call(this, chunk, final);\r\n    };\r\n    Zlib.prototype.p = function (c, f) {\r\n        this.c.p(c);\r\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\r\n        if (this.v)\r\n            zlh(raw, this.o), this.v = 0;\r\n        if (f)\r\n            wbytes(raw, raw.length - 4, this.c.d());\r\n        this.ondata(raw, f);\r\n    };\r\n    return Zlib;\r\n}());\r\nexport { Zlib };\r\n/**\r\n * Asynchronous streaming Zlib compression\r\n */\r\nvar AsyncZlib = /*#__PURE__*/ (function () {\r\n    function AsyncZlib(opts, cb) {\r\n        astrmify([\r\n            bDflt,\r\n            zle,\r\n            function () { return [astrm, Deflate, Zlib]; }\r\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\r\n            var strm = new Zlib(ev.data);\r\n            onmessage = astrm(strm);\r\n        }, 10);\r\n    }\r\n    return AsyncZlib;\r\n}());\r\nexport { AsyncZlib };\r\nexport function zlib(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return cbify(data, opts, [\r\n        bDflt,\r\n        zle,\r\n        function () { return [zlibSync]; }\r\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\r\n}\r\n/**\r\n * Compress data with Zlib\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The zlib-compressed version of the data\r\n */\r\nexport function zlibSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var a = adler();\r\n    a.p(data);\r\n    var d = dopt(data, opts, 2, 4);\r\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\r\n}\r\n/**\r\n * Streaming Zlib decompression\r\n */\r\nvar Unzlib = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a Zlib decompression stream\r\n     * @param cb The callback to call whenever data is inflated\r\n     */\r\n    function Unzlib(cb) {\r\n        this.v = 1;\r\n        Inflate.call(this, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be unzlibbed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Unzlib.prototype.push = function (chunk, final) {\r\n        Inflate.prototype.e.call(this, chunk);\r\n        if (this.v) {\r\n            if (this.p.length < 2 && !final)\r\n                return;\r\n            this.p = this.p.subarray(2), this.v = 0;\r\n        }\r\n        if (final) {\r\n            if (this.p.length < 4)\r\n                throw 'invalid zlib stream';\r\n            this.p = this.p.subarray(0, -4);\r\n        }\r\n        // necessary to prevent TS from using the closure value\r\n        // This allows for workerization to function correctly\r\n        Inflate.prototype.c.call(this, final);\r\n    };\r\n    return Unzlib;\r\n}());\r\nexport { Unzlib };\r\n/**\r\n * Asynchronous streaming Zlib decompression\r\n */\r\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an asynchronous Zlib decompression stream\r\n     * @param cb The callback to call whenever data is deflated\r\n     */\r\n    function AsyncUnzlib(cb) {\r\n        this.ondata = cb;\r\n        astrmify([\r\n            bInflt,\r\n            zule,\r\n            function () { return [astrm, Inflate, Unzlib]; }\r\n        ], this, 0, function () {\r\n            var strm = new Unzlib();\r\n            onmessage = astrm(strm);\r\n        }, 11);\r\n    }\r\n    return AsyncUnzlib;\r\n}());\r\nexport { AsyncUnzlib };\r\nexport function unzlib(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return cbify(data, opts, [\r\n        bInflt,\r\n        zule,\r\n        function () { return [unzlibSync]; }\r\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\r\n}\r\n/**\r\n * Expands Zlib data\r\n * @param data The data to decompress\r\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\r\n * @returns The decompressed version of the data\r\n */\r\nexport function unzlibSync(data, out) {\r\n    return inflt((zlv(data), data.subarray(2, -4)), out);\r\n}\r\n// Default algorithm for compression (used because having a known output size allows faster decompression)\r\nexport { gzip as compress, AsyncGzip as AsyncCompress };\r\n// Default algorithm for compression (used because having a known output size allows faster decompression)\r\nexport { gzipSync as compressSync, Gzip as Compress };\r\n/**\r\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\r\n */\r\nvar Decompress = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a decompression stream\r\n     * @param cb The callback to call whenever data is decompressed\r\n     */\r\n    function Decompress(cb) {\r\n        this.G = Gunzip;\r\n        this.I = Inflate;\r\n        this.Z = Unzlib;\r\n        this.ondata = cb;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be decompressed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Decompress.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            throw 'no stream handler';\r\n        if (!this.s) {\r\n            if (this.p && this.p.length) {\r\n                var n = new u8(this.p.length + chunk.length);\r\n                n.set(this.p), n.set(chunk, this.p.length);\r\n            }\r\n            else\r\n                this.p = chunk;\r\n            if (this.p.length > 2) {\r\n                var _this_1 = this;\r\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\r\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\r\n                    ? new this.G(cb)\r\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\r\n                        ? new this.I(cb)\r\n                        : new this.Z(cb);\r\n                this.s.push(this.p, final);\r\n                this.p = null;\r\n            }\r\n        }\r\n        else\r\n            this.s.push(chunk, final);\r\n    };\r\n    return Decompress;\r\n}());\r\nexport { Decompress };\r\n/**\r\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\r\n */\r\nvar AsyncDecompress = /*#__PURE__*/ (function () {\r\n    /**\r\n   * Creates an asynchronous decompression stream\r\n   * @param cb The callback to call whenever data is decompressed\r\n   */\r\n    function AsyncDecompress(cb) {\r\n        this.G = AsyncGunzip;\r\n        this.I = AsyncInflate;\r\n        this.Z = AsyncUnzlib;\r\n        this.ondata = cb;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be decompressed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    AsyncDecompress.prototype.push = function (chunk, final) {\r\n        Decompress.prototype.push.call(this, chunk, final);\r\n    };\r\n    return AsyncDecompress;\r\n}());\r\nexport { AsyncDecompress };\r\nexport function decompress(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\r\n        ? gunzip(data, opts, cb)\r\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\r\n            ? inflate(data, opts, cb)\r\n            : unzlib(data, opts, cb);\r\n}\r\n/**\r\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\r\n * @param data The data to decompress\r\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\r\n * @returns The decompressed version of the data\r\n */\r\nexport function decompressSync(data, out) {\r\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\r\n        ? gunzipSync(data, out)\r\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\r\n            ? inflateSync(data, out)\r\n            : unzlibSync(data, out);\r\n}\r\n// flatten a directory structure\r\nvar fltn = function (d, p, t, o) {\r\n    for (var k in d) {\r\n        var val = d[k], n = p + k;\r\n        if (val instanceof u8)\r\n            t[n] = [val, o];\r\n        else if (Array.isArray(val))\r\n            t[n] = [val[0], mrg(o, val[1])];\r\n        else\r\n            fltn(val, n + '/', t, o);\r\n    }\r\n};\r\n// text encoder\r\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\r\n// text decoder\r\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\r\n// text decoder stream\r\nvar tds = 0;\r\ntry {\r\n    td.decode(et, { stream: true });\r\n    tds = 1;\r\n}\r\ncatch (e) { }\r\n// decode UTF8\r\nvar dutf8 = function (d) {\r\n    for (var r = '', i = 0;;) {\r\n        var c = d[i++];\r\n        var eb = (c > 127) + (c > 223) + (c > 239);\r\n        if (i + eb > d.length)\r\n            return [r, slc(d, i - 1)];\r\n        if (!eb)\r\n            r += String.fromCharCode(c);\r\n        else if (eb == 3) {\r\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\r\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\r\n        }\r\n        else if (eb & 1)\r\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\r\n        else\r\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\r\n    }\r\n};\r\n/**\r\n * Streaming UTF-8 decoding\r\n */\r\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a UTF-8 decoding stream\r\n     * @param cb The callback to call whenever data is decoded\r\n     */\r\n    function DecodeUTF8(cb) {\r\n        this.ondata = cb;\r\n        if (tds)\r\n            this.t = new TextDecoder();\r\n        else\r\n            this.p = et;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be decoded from UTF-8 binary\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    DecodeUTF8.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            throw 'no callback';\r\n        final = !!final;\r\n        if (this.t) {\r\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\r\n            if (final) {\r\n                if (this.t.decode().length)\r\n                    throw 'invalid utf-8 data';\r\n                this.t = null;\r\n            }\r\n            return;\r\n        }\r\n        if (!this.p)\r\n            throw 'stream finished';\r\n        var dat = new u8(this.p.length + chunk.length);\r\n        dat.set(this.p);\r\n        dat.set(chunk, this.p.length);\r\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\r\n        if (final) {\r\n            if (np.length)\r\n                throw 'invalid utf-8 data';\r\n            this.p = null;\r\n        }\r\n        else\r\n            this.p = np;\r\n        this.ondata(ch, final);\r\n    };\r\n    return DecodeUTF8;\r\n}());\r\nexport { DecodeUTF8 };\r\n/**\r\n * Streaming UTF-8 encoding\r\n */\r\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a UTF-8 decoding stream\r\n     * @param cb The callback to call whenever data is encoded\r\n     */\r\n    function EncodeUTF8(cb) {\r\n        this.ondata = cb;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be encoded to UTF-8\r\n     * @param chunk The string data to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    EncodeUTF8.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            throw 'no callback';\r\n        if (this.d)\r\n            throw 'stream finished';\r\n        this.ondata(strToU8(chunk), this.d = final || false);\r\n    };\r\n    return EncodeUTF8;\r\n}());\r\nexport { EncodeUTF8 };\r\n/**\r\n * Converts a string into a Uint8Array for use with compression/decompression methods\r\n * @param str The string to encode\r\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\r\n *               not need to be true unless decoding a binary string.\r\n * @returns The string encoded in UTF-8/Latin-1 binary\r\n */\r\nexport function strToU8(str, latin1) {\r\n    if (latin1) {\r\n        var ar_1 = new u8(str.length);\r\n        for (var i = 0; i < str.length; ++i)\r\n            ar_1[i] = str.charCodeAt(i);\r\n        return ar_1;\r\n    }\r\n    if (te)\r\n        return te.encode(str);\r\n    var l = str.length;\r\n    var ar = new u8(str.length + (str.length >> 1));\r\n    var ai = 0;\r\n    var w = function (v) { ar[ai++] = v; };\r\n    for (var i = 0; i < l; ++i) {\r\n        if (ai + 5 > ar.length) {\r\n            var n = new u8(ai + 8 + ((l - i) << 1));\r\n            n.set(ar);\r\n            ar = n;\r\n        }\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128 || latin1)\r\n            w(c);\r\n        else if (c < 2048)\r\n            w(192 | (c >> 6)), w(128 | (c & 63));\r\n        else if (c > 55295 && c < 57344)\r\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\r\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\r\n        else\r\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\r\n    }\r\n    return slc(ar, 0, ai);\r\n}\r\n/**\r\n * Converts a Uint8Array to a string\r\n * @param dat The data to decode to string\r\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\r\n *               not need to be true unless encoding to binary string.\r\n * @returns The original UTF-8/Latin-1 string\r\n */\r\nexport function strFromU8(dat, latin1) {\r\n    if (latin1) {\r\n        var r = '';\r\n        for (var i = 0; i < dat.length; i += 16384)\r\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\r\n        return r;\r\n    }\r\n    else if (td)\r\n        return td.decode(dat);\r\n    else {\r\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\r\n        if (ext.length)\r\n            throw 'invalid utf-8 data';\r\n        return out;\r\n    }\r\n}\r\n;\r\n// deflate bit flag\r\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\r\n// skip local zip header\r\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\r\n// read zip header\r\nvar zh = function (d, b, z) {\r\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\r\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\r\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\r\n};\r\n// read zip64 extra field\r\nvar z64e = function (d, b) {\r\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\r\n        ;\r\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\r\n};\r\n// extra field length\r\nvar exfl = function (ex) {\r\n    var le = 0;\r\n    if (ex) {\r\n        for (var k in ex) {\r\n            var l = ex[k].length;\r\n            if (l > 65535)\r\n                throw 'extra field too long';\r\n            le += l + 4;\r\n        }\r\n    }\r\n    return le;\r\n};\r\n// write zip header\r\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\r\n    var fl = fn.length, ex = f.extra, col = co && co.length;\r\n    var exl = exfl(ex);\r\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\r\n    if (ce != null)\r\n        d[b++] = 20, d[b++] = f.os;\r\n    d[b] = 20, b += 2; // spec compliance? what's that?\r\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\r\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\r\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\r\n    if (y < 0 || y > 119)\r\n        throw 'date not in range 1980-2099';\r\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\r\n    if (c != null) {\r\n        wbytes(d, b, f.crc);\r\n        wbytes(d, b + 4, c);\r\n        wbytes(d, b + 8, f.size);\r\n    }\r\n    wbytes(d, b + 12, fl);\r\n    wbytes(d, b + 14, exl), b += 16;\r\n    if (ce != null) {\r\n        wbytes(d, b, col);\r\n        wbytes(d, b + 6, f.attrs);\r\n        wbytes(d, b + 10, ce), b += 14;\r\n    }\r\n    d.set(fn, b);\r\n    b += fl;\r\n    if (exl) {\r\n        for (var k in ex) {\r\n            var exf = ex[k], l = exf.length;\r\n            wbytes(d, b, +k);\r\n            wbytes(d, b + 2, l);\r\n            d.set(exf, b + 4), b += 4 + l;\r\n        }\r\n    }\r\n    if (col)\r\n        d.set(co, b), b += col;\r\n    return b;\r\n};\r\n// write zip footer (end of central directory)\r\nvar wzf = function (o, b, c, d, e) {\r\n    wbytes(o, b, 0x6054B50); // skip disk\r\n    wbytes(o, b + 8, c);\r\n    wbytes(o, b + 10, c);\r\n    wbytes(o, b + 12, d);\r\n    wbytes(o, b + 16, e);\r\n};\r\n/**\r\n * A pass-through stream to keep data uncompressed in a ZIP archive.\r\n */\r\nvar ZipPassThrough = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a pass-through stream that can be added to ZIP archives\r\n     * @param filename The filename to associate with this data stream\r\n     */\r\n    function ZipPassThrough(filename) {\r\n        this.filename = filename;\r\n        this.c = crc();\r\n        this.size = 0;\r\n        this.compression = 0;\r\n    }\r\n    /**\r\n     * Processes a chunk and pushes to the output stream. You can override this\r\n     * method in a subclass for custom behavior, but by default this passes\r\n     * the data through. You must call this.ondata(err, chunk, final) at some\r\n     * point in this method.\r\n     * @param chunk The chunk to process\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    ZipPassThrough.prototype.process = function (chunk, final) {\r\n        this.ondata(null, chunk, final);\r\n    };\r\n    /**\r\n     * Pushes a chunk to be added. If you are subclassing this with a custom\r\n     * compression algorithm, note that you must push data from the source\r\n     * file only, pre-compression.\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    ZipPassThrough.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            throw 'no callback - add to ZIP archive before pushing';\r\n        this.c.p(chunk);\r\n        this.size += chunk.length;\r\n        if (final)\r\n            this.crc = this.c.d();\r\n        this.process(chunk, final || false);\r\n    };\r\n    return ZipPassThrough;\r\n}());\r\nexport { ZipPassThrough };\r\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\r\n/**\r\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\r\n * for better performance\r\n */\r\nvar ZipDeflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE stream that can be added to ZIP archives\r\n     * @param filename The filename to associate with this data stream\r\n     * @param opts The compression options\r\n     */\r\n    function ZipDeflate(filename, opts) {\r\n        var _this_1 = this;\r\n        if (!opts)\r\n            opts = {};\r\n        ZipPassThrough.call(this, filename);\r\n        this.d = new Deflate(opts, function (dat, final) {\r\n            _this_1.ondata(null, dat, final);\r\n        });\r\n        this.compression = 8;\r\n        this.flag = dbf(opts.level);\r\n    }\r\n    ZipDeflate.prototype.process = function (chunk, final) {\r\n        try {\r\n            this.d.push(chunk, final);\r\n        }\r\n        catch (e) {\r\n            this.ondata(e, null, final);\r\n        }\r\n    };\r\n    /**\r\n     * Pushes a chunk to be deflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    ZipDeflate.prototype.push = function (chunk, final) {\r\n        ZipPassThrough.prototype.push.call(this, chunk, final);\r\n    };\r\n    return ZipDeflate;\r\n}());\r\nexport { ZipDeflate };\r\n/**\r\n * Asynchronous streaming DEFLATE compression for ZIP archives\r\n */\r\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE stream that can be added to ZIP archives\r\n     * @param filename The filename to associate with this data stream\r\n     * @param opts The compression options\r\n     */\r\n    function AsyncZipDeflate(filename, opts) {\r\n        var _this_1 = this;\r\n        if (!opts)\r\n            opts = {};\r\n        ZipPassThrough.call(this, filename);\r\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\r\n            _this_1.ondata(err, dat, final);\r\n        });\r\n        this.compression = 8;\r\n        this.flag = dbf(opts.level);\r\n        this.terminate = this.d.terminate;\r\n    }\r\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\r\n        this.d.push(chunk, final);\r\n    };\r\n    /**\r\n     * Pushes a chunk to be deflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\r\n        ZipPassThrough.prototype.push.call(this, chunk, final);\r\n    };\r\n    return AsyncZipDeflate;\r\n}());\r\nexport { AsyncZipDeflate };\r\n// TODO: Better tree shaking\r\n/**\r\n * A zippable archive to which files can incrementally be added\r\n */\r\nvar Zip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an empty ZIP archive to which files can be added\r\n     * @param cb The callback to call whenever data for the generated ZIP archive\r\n     *           is available\r\n     */\r\n    function Zip(cb) {\r\n        this.ondata = cb;\r\n        this.u = [];\r\n        this.d = 1;\r\n    }\r\n    /**\r\n     * Adds a file to the ZIP archive\r\n     * @param file The file stream to add\r\n     */\r\n    Zip.prototype.add = function (file) {\r\n        var _this_1 = this;\r\n        if (this.d & 2)\r\n            throw 'stream finished';\r\n        var f = strToU8(file.filename), fl = f.length;\r\n        var com = file.comment, o = com && strToU8(com);\r\n        var u = fl != file.filename.length || (o && (com.length != o.length));\r\n        var hl = fl + exfl(file.extra) + 30;\r\n        if (fl > 65535)\r\n            throw 'filename too long';\r\n        var header = new u8(hl);\r\n        wzh(header, 0, file, f, u);\r\n        var chks = [header];\r\n        var pAll = function () {\r\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\r\n                var chk = chks_1[_i];\r\n                _this_1.ondata(null, chk, false);\r\n            }\r\n            chks = [];\r\n        };\r\n        var tr = this.d;\r\n        this.d = 0;\r\n        var ind = this.u.length;\r\n        var uf = mrg(file, {\r\n            f: f,\r\n            u: u,\r\n            o: o,\r\n            t: function () {\r\n                if (file.terminate)\r\n                    file.terminate();\r\n            },\r\n            r: function () {\r\n                pAll();\r\n                if (tr) {\r\n                    var nxt = _this_1.u[ind + 1];\r\n                    if (nxt)\r\n                        nxt.r();\r\n                    else\r\n                        _this_1.d = 1;\r\n                }\r\n                tr = 1;\r\n            }\r\n        });\r\n        var cl = 0;\r\n        file.ondata = function (err, dat, final) {\r\n            if (err) {\r\n                _this_1.ondata(err, dat, final);\r\n                _this_1.terminate();\r\n            }\r\n            else {\r\n                cl += dat.length;\r\n                chks.push(dat);\r\n                if (final) {\r\n                    var dd = new u8(16);\r\n                    wbytes(dd, 0, 0x8074B50);\r\n                    wbytes(dd, 4, file.crc);\r\n                    wbytes(dd, 8, cl);\r\n                    wbytes(dd, 12, file.size);\r\n                    chks.push(dd);\r\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\r\n                    if (tr)\r\n                        uf.r();\r\n                    tr = 1;\r\n                }\r\n                else if (tr)\r\n                    pAll();\r\n            }\r\n        };\r\n        this.u.push(uf);\r\n    };\r\n    /**\r\n     * Ends the process of adding files and prepares to emit the final chunks.\r\n     * This *must* be called after adding all desired files for the resulting\r\n     * ZIP file to work properly.\r\n     */\r\n    Zip.prototype.end = function () {\r\n        var _this_1 = this;\r\n        if (this.d & 2) {\r\n            if (this.d & 1)\r\n                throw 'stream finishing';\r\n            throw 'stream finished';\r\n        }\r\n        if (this.d)\r\n            this.e();\r\n        else\r\n            this.u.push({\r\n                r: function () {\r\n                    if (!(_this_1.d & 1))\r\n                        return;\r\n                    _this_1.u.splice(-1, 1);\r\n                    _this_1.e();\r\n                },\r\n                t: function () { }\r\n            });\r\n        this.d = 3;\r\n    };\r\n    Zip.prototype.e = function () {\r\n        var bt = 0, l = 0, tl = 0;\r\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\r\n            var f = _a[_i];\r\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\r\n        }\r\n        var out = new u8(tl + 22);\r\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\r\n            var f = _c[_b];\r\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\r\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\r\n        }\r\n        wzf(out, bt, this.u.length, tl, l);\r\n        this.ondata(null, out, true);\r\n        this.d = 2;\r\n    };\r\n    /**\r\n     * A method to terminate any internal workers used by the stream. Subsequent\r\n     * calls to add() will fail.\r\n     */\r\n    Zip.prototype.terminate = function () {\r\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\r\n            var f = _a[_i];\r\n            f.t();\r\n        }\r\n        this.d = 2;\r\n    };\r\n    return Zip;\r\n}());\r\nexport { Zip };\r\nexport function zip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    var r = {};\r\n    fltn(data, '', r, opts);\r\n    var k = Object.keys(r);\r\n    var lft = k.length, o = 0, tot = 0;\r\n    var slft = lft, files = new Array(lft);\r\n    var term = [];\r\n    var tAll = function () {\r\n        for (var i = 0; i < term.length; ++i)\r\n            term[i]();\r\n    };\r\n    var cbf = function () {\r\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\r\n        tot = 0;\r\n        for (var i = 0; i < slft; ++i) {\r\n            var f = files[i];\r\n            try {\r\n                var l = f.c.length;\r\n                wzh(out, tot, f, f.f, f.u, l);\r\n                var badd = 30 + f.f.length + exfl(f.extra);\r\n                var loc = tot + badd;\r\n                out.set(f.c, loc);\r\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\r\n            }\r\n            catch (e) {\r\n                return cb(e, null);\r\n            }\r\n        }\r\n        wzf(out, o, files.length, cdl, oe);\r\n        cb(null, out);\r\n    };\r\n    if (!lft)\r\n        cbf();\r\n    var _loop_1 = function (i) {\r\n        var fn = k[i];\r\n        var _a = r[fn], file = _a[0], p = _a[1];\r\n        var c = crc(), size = file.length;\r\n        c.p(file);\r\n        var f = strToU8(fn), s = f.length;\r\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\r\n        var exl = exfl(p.extra);\r\n        var compression = p.level == 0 ? 0 : 8;\r\n        var cbl = function (e, d) {\r\n            if (e) {\r\n                tAll();\r\n                cb(e, null);\r\n            }\r\n            else {\r\n                var l = d.length;\r\n                files[i] = mrg(p, {\r\n                    size: size,\r\n                    crc: c.d(),\r\n                    c: d,\r\n                    f: f,\r\n                    m: m,\r\n                    u: s != fn.length || (m && (com.length != ms)),\r\n                    compression: compression\r\n                });\r\n                o += 30 + s + exl + l;\r\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\r\n                if (!--lft)\r\n                    cbf();\r\n            }\r\n        };\r\n        if (s > 65535)\r\n            cbl('filename too long', null);\r\n        if (!compression)\r\n            cbl(null, file);\r\n        else if (size < 160000) {\r\n            try {\r\n                cbl(null, deflateSync(file, p));\r\n            }\r\n            catch (e) {\r\n                cbl(e, null);\r\n            }\r\n        }\r\n        else\r\n            term.push(deflate(file, p, cbl));\r\n    };\r\n    // Cannot use lft because it can decrease\r\n    for (var i = 0; i < slft; ++i) {\r\n        _loop_1(i);\r\n    }\r\n    return tAll;\r\n}\r\n/**\r\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\r\n * with more than one file.\r\n * @param data The directory structure for the ZIP archive\r\n * @param opts The main options, merged with per-file options\r\n * @returns The generated ZIP archive\r\n */\r\nexport function zipSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var r = {};\r\n    var files = [];\r\n    fltn(data, '', r, opts);\r\n    var o = 0;\r\n    var tot = 0;\r\n    for (var fn in r) {\r\n        var _a = r[fn], file = _a[0], p = _a[1];\r\n        var compression = p.level == 0 ? 0 : 8;\r\n        var f = strToU8(fn), s = f.length;\r\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\r\n        var exl = exfl(p.extra);\r\n        if (s > 65535)\r\n            throw 'filename too long';\r\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\r\n        var c = crc();\r\n        c.p(file);\r\n        files.push(mrg(p, {\r\n            size: file.length,\r\n            crc: c.d(),\r\n            c: d,\r\n            f: f,\r\n            m: m,\r\n            u: s != fn.length || (m && (com.length != ms)),\r\n            o: o,\r\n            compression: compression\r\n        }));\r\n        o += 30 + s + exl + l;\r\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\r\n    }\r\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\r\n    for (var i = 0; i < files.length; ++i) {\r\n        var f = files[i];\r\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\r\n        var badd = 30 + f.f.length + exfl(f.extra);\r\n        out.set(f.c, f.o + badd);\r\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\r\n    }\r\n    wzf(out, o, files.length, cdl, oe);\r\n    return out;\r\n}\r\n/**\r\n * Streaming pass-through decompression for ZIP archives\r\n */\r\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\r\n    function UnzipPassThrough() {\r\n    }\r\n    UnzipPassThrough.prototype.push = function (data, final) {\r\n        this.ondata(null, data, final);\r\n    };\r\n    UnzipPassThrough.compression = 0;\r\n    return UnzipPassThrough;\r\n}());\r\nexport { UnzipPassThrough };\r\n/**\r\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\r\n * better performance.\r\n */\r\nvar UnzipInflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE decompression that can be used in ZIP archives\r\n     */\r\n    function UnzipInflate() {\r\n        var _this_1 = this;\r\n        this.i = new Inflate(function (dat, final) {\r\n            _this_1.ondata(null, dat, final);\r\n        });\r\n    }\r\n    UnzipInflate.prototype.push = function (data, final) {\r\n        try {\r\n            this.i.push(data, final);\r\n        }\r\n        catch (e) {\r\n            this.ondata(e, data, final);\r\n        }\r\n    };\r\n    UnzipInflate.compression = 8;\r\n    return UnzipInflate;\r\n}());\r\nexport { UnzipInflate };\r\n/**\r\n * Asynchronous streaming DEFLATE decompression for ZIP archives\r\n */\r\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE decompression that can be used in ZIP archives\r\n     */\r\n    function AsyncUnzipInflate(_, sz) {\r\n        var _this_1 = this;\r\n        if (sz < 320000) {\r\n            this.i = new Inflate(function (dat, final) {\r\n                _this_1.ondata(null, dat, final);\r\n            });\r\n        }\r\n        else {\r\n            this.i = new AsyncInflate(function (err, dat, final) {\r\n                _this_1.ondata(err, dat, final);\r\n            });\r\n            this.terminate = this.i.terminate;\r\n        }\r\n    }\r\n    AsyncUnzipInflate.prototype.push = function (data, final) {\r\n        if (this.i.terminate)\r\n            data = slc(data, 0);\r\n        this.i.push(data, final);\r\n    };\r\n    AsyncUnzipInflate.compression = 8;\r\n    return AsyncUnzipInflate;\r\n}());\r\nexport { AsyncUnzipInflate };\r\n/**\r\n * A ZIP archive decompression stream that emits files as they are discovered\r\n */\r\nvar Unzip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a ZIP decompression stream\r\n     * @param cb The callback to call whenever a file in the ZIP archive is found\r\n     */\r\n    function Unzip(cb) {\r\n        this.onfile = cb;\r\n        this.k = [];\r\n        this.o = {\r\n            0: UnzipPassThrough\r\n        };\r\n        this.p = et;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be unzipped\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Unzip.prototype.push = function (chunk, final) {\r\n        var _this_1 = this;\r\n        if (!this.onfile)\r\n            throw 'no callback';\r\n        if (!this.p)\r\n            throw 'stream finished';\r\n        if (this.c > 0) {\r\n            var len = Math.min(this.c, chunk.length);\r\n            var toAdd = chunk.subarray(0, len);\r\n            this.c -= len;\r\n            if (this.d)\r\n                this.d.push(toAdd, !this.c);\r\n            else\r\n                this.k[0].push(toAdd);\r\n            chunk = chunk.subarray(len);\r\n            if (chunk.length)\r\n                return this.push(chunk, final);\r\n        }\r\n        else {\r\n            var f = 0, i = 0, is = void 0, buf = void 0;\r\n            if (!this.p.length)\r\n                buf = chunk;\r\n            else if (!chunk.length)\r\n                buf = this.p;\r\n            else {\r\n                buf = new u8(this.p.length + chunk.length);\r\n                buf.set(this.p), buf.set(chunk, this.p.length);\r\n            }\r\n            var l = buf.length, oc = this.c, add = oc && this.d;\r\n            var _loop_2 = function () {\r\n                var _a;\r\n                var sig = b4(buf, i);\r\n                if (sig == 0x4034B50) {\r\n                    f = 1, is = i;\r\n                    this_1.d = null;\r\n                    this_1.c = 0;\r\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\r\n                    if (l > i + 30 + fnl + es) {\r\n                        var chks_2 = [];\r\n                        this_1.k.unshift(chks_2);\r\n                        f = 2;\r\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\r\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\r\n                        if (sc_1 == 4294967295) {\r\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\r\n                        }\r\n                        else if (dd)\r\n                            sc_1 = -1;\r\n                        i += es;\r\n                        this_1.c = sc_1;\r\n                        var d_1;\r\n                        var file_1 = {\r\n                            name: fn_1,\r\n                            compression: cmp_1,\r\n                            start: function () {\r\n                                if (!file_1.ondata)\r\n                                    throw 'no callback';\r\n                                if (!sc_1)\r\n                                    file_1.ondata(null, et, true);\r\n                                else {\r\n                                    var ctr = _this_1.o[cmp_1];\r\n                                    if (!ctr)\r\n                                        throw 'unknown compression type ' + cmp_1;\r\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\r\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\r\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\r\n                                        var dat = chks_3[_i];\r\n                                        d_1.push(dat, false);\r\n                                    }\r\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\r\n                                        _this_1.d = d_1;\r\n                                    else\r\n                                        d_1.push(et, true);\r\n                                }\r\n                            },\r\n                            terminate: function () {\r\n                                if (d_1 && d_1.terminate)\r\n                                    d_1.terminate();\r\n                            }\r\n                        };\r\n                        if (sc_1 >= 0)\r\n                            file_1.size = sc_1, file_1.originalSize = su_1;\r\n                        this_1.onfile(file_1);\r\n                    }\r\n                    return \"break\";\r\n                }\r\n                else if (oc) {\r\n                    if (sig == 0x8074B50) {\r\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\r\n                        return \"break\";\r\n                    }\r\n                    else if (sig == 0x2014B50) {\r\n                        is = i -= 4, f = 3, this_1.c = 0;\r\n                        return \"break\";\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (; i < l - 4; ++i) {\r\n                var state_1 = _loop_2();\r\n                if (state_1 === \"break\")\r\n                    break;\r\n            }\r\n            this.p = et;\r\n            if (oc < 0) {\r\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\r\n                if (add)\r\n                    add.push(dat, !!f);\r\n                else\r\n                    this.k[+(f == 2)].push(dat);\r\n            }\r\n            if (f & 2)\r\n                return this.push(buf.subarray(i), final);\r\n            this.p = buf.subarray(i);\r\n        }\r\n        if (final) {\r\n            if (this.c)\r\n                throw 'invalid zip file';\r\n            this.p = null;\r\n        }\r\n    };\r\n    /**\r\n     * Registers a decoder with the stream, allowing for files compressed with\r\n     * the compression type provided to be expanded correctly\r\n     * @param decoder The decoder constructor\r\n     */\r\n    Unzip.prototype.register = function (decoder) {\r\n        this.o[decoder.compression] = decoder;\r\n    };\r\n    return Unzip;\r\n}());\r\nexport { Unzip };\r\n/**\r\n * Asynchronously decompresses a ZIP archive\r\n * @param data The raw compressed ZIP file\r\n * @param cb The callback to call with the decompressed files\r\n * @returns A function that can be used to immediately terminate the unzipping\r\n */\r\nexport function unzip(data, cb) {\r\n    if (typeof cb != 'function')\r\n        throw 'no callback';\r\n    var term = [];\r\n    var tAll = function () {\r\n        for (var i = 0; i < term.length; ++i)\r\n            term[i]();\r\n    };\r\n    var files = {};\r\n    var e = data.length - 22;\r\n    for (; b4(data, e) != 0x6054B50; --e) {\r\n        if (!e || data.length - e > 65558) {\r\n            cb('invalid zip file', null);\r\n            return;\r\n        }\r\n    }\r\n    ;\r\n    var lft = b2(data, e + 8);\r\n    if (!lft)\r\n        cb(null, {});\r\n    var c = lft;\r\n    var o = b4(data, e + 16);\r\n    var z = o == 4294967295;\r\n    if (z) {\r\n        e = b4(data, e - 12);\r\n        if (b4(data, e) != 0x6064B50) {\r\n            cb('invalid zip file', null);\r\n            return;\r\n        }\r\n        c = lft = b4(data, e + 32);\r\n        o = b4(data, e + 48);\r\n    }\r\n    var _loop_3 = function (i) {\r\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\r\n        o = no;\r\n        var cbl = function (e, d) {\r\n            if (e) {\r\n                tAll();\r\n                cb(e, null);\r\n            }\r\n            else {\r\n                files[fn] = d;\r\n                if (!--lft)\r\n                    cb(null, files);\r\n            }\r\n        };\r\n        if (!c_1)\r\n            cbl(null, slc(data, b, b + sc));\r\n        else if (c_1 == 8) {\r\n            var infl = data.subarray(b, b + sc);\r\n            if (sc < 320000) {\r\n                try {\r\n                    cbl(null, inflateSync(infl, new u8(su)));\r\n                }\r\n                catch (e) {\r\n                    cbl(e, null);\r\n                }\r\n            }\r\n            else\r\n                term.push(inflate(infl, { size: su }, cbl));\r\n        }\r\n        else\r\n            cbl('unknown compression type ' + c_1, null);\r\n    };\r\n    for (var i = 0; i < c; ++i) {\r\n        _loop_3(i);\r\n    }\r\n    return tAll;\r\n}\r\n/**\r\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\r\n * performance with more than one file.\r\n * @param data The raw compressed ZIP file\r\n * @returns The decompressed files\r\n */\r\nexport function unzipSync(data) {\r\n    var files = {};\r\n    var e = data.length - 22;\r\n    for (; b4(data, e) != 0x6054B50; --e) {\r\n        if (!e || data.length - e > 65558)\r\n            throw 'invalid zip file';\r\n    }\r\n    ;\r\n    var c = b2(data, e + 8);\r\n    if (!c)\r\n        return {};\r\n    var o = b4(data, e + 16);\r\n    var z = o == 4294967295;\r\n    if (z) {\r\n        e = b4(data, e - 12);\r\n        if (b4(data, e) != 0x6064B50)\r\n            throw 'invalid zip file';\r\n        c = b4(data, e + 32);\r\n        o = b4(data, e + 48);\r\n    }\r\n    for (var i = 0; i < c; ++i) {\r\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\r\n        o = no;\r\n        if (!c_2)\r\n            files[fn] = slc(data, b, b + sc);\r\n        else if (c_2 == 8)\r\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\r\n        else\r\n            throw 'unknown compression type ' + c_2;\r\n    }\r\n    return files;\r\n}\r\n", "import {\r\n\tVector3,\r\n\tVector4\r\n} from 'three';\r\n\r\n/**\r\n * NURBS utils\r\n *\r\n * See NURBSCurve and NURBSSurface.\r\n **/\r\n\r\n\r\n/**************************************************************\r\n *\tNURBS Utils\r\n **************************************************************/\r\n\r\n/*\r\nFinds knot vector span.\r\n\r\np : degree\r\nu : parametric value\r\nU : knot vector\r\n\r\nreturns the span\r\n*/\r\nfunction findSpan( p, u, U ) {\r\n\r\n\tconst n = U.length - p - 1;\r\n\r\n\tif ( u >= U[ n ] ) {\r\n\r\n\t\treturn n - 1;\r\n\r\n\t}\r\n\r\n\tif ( u <= U[ p ] ) {\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\tlet low = p;\r\n\tlet high = n;\r\n\tlet mid = Math.floor( ( low + high ) / 2 );\r\n\r\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\r\n\r\n\t\tif ( u < U[ mid ] ) {\r\n\r\n\t\t\thigh = mid;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlow = mid;\r\n\r\n\t\t}\r\n\r\n\t\tmid = Math.floor( ( low + high ) / 2 );\r\n\r\n\t}\r\n\r\n\treturn mid;\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\r\n\r\nspan : span in which u lies\r\nu    : parametric point\r\np    : degree\r\nU    : knot vector\r\n\r\nreturns array[p+1] with basis functions values.\r\n*/\r\nfunction calcBasisFunctions( span, u, p, U ) {\r\n\r\n\tconst N = [];\r\n\tconst left = [];\r\n\tconst right = [];\r\n\tN[ 0 ] = 1.0;\r\n\r\n\tfor ( let j = 1; j <= p; ++ j ) {\r\n\r\n\t\tleft[ j ] = u - U[ span + 1 - j ];\r\n\t\tright[ j ] = U[ span + j ] - u;\r\n\r\n\t\tlet saved = 0.0;\r\n\r\n\t\tfor ( let r = 0; r < j; ++ r ) {\r\n\r\n\t\t\tconst rv = right[ r + 1 ];\r\n\t\t\tconst lv = left[ j - r ];\r\n\t\t\tconst temp = N[ r ] / ( rv + lv );\r\n\t\t\tN[ r ] = saved + rv * temp;\r\n\t\t\tsaved = lv * temp;\r\n\r\n\t\t}\r\n\r\n\t\tN[ j ] = saved;\r\n\r\n\t}\r\n\r\n\treturn N;\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\r\n\r\np : degree of B-Spline\r\nU : knot vector\r\nP : control points (x, y, z, w)\r\nu : parametric point\r\n\r\nreturns point for given u\r\n*/\r\nfunction calcBSplinePoint( p, U, P, u ) {\r\n\r\n\tconst span = findSpan( p, u, U );\r\n\tconst N = calcBasisFunctions( span, u, p, U );\r\n\tconst C = new Vector4( 0, 0, 0, 0 );\r\n\r\n\tfor ( let j = 0; j <= p; ++ j ) {\r\n\r\n\t\tconst point = P[ span - p + j ];\r\n\t\tconst Nj = N[ j ];\r\n\t\tconst wNj = point.w * Nj;\r\n\t\tC.x += point.x * wNj;\r\n\t\tC.y += point.y * wNj;\r\n\t\tC.z += point.z * wNj;\r\n\t\tC.w += point.w * Nj;\r\n\r\n\t}\r\n\r\n\treturn C;\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\r\n\r\nspan : span in which u lies\r\nu    : parametric point\r\np    : degree\r\nn    : number of derivatives to calculate\r\nU    : knot vector\r\n\r\nreturns array[n+1][p+1] with basis functions derivatives\r\n*/\r\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\r\n\r\n\tconst zeroArr = [];\r\n\tfor ( let i = 0; i <= p; ++ i )\r\n\t\tzeroArr[ i ] = 0.0;\r\n\r\n\tconst ders = [];\r\n\r\n\tfor ( let i = 0; i <= n; ++ i )\r\n\t\tders[ i ] = zeroArr.slice( 0 );\r\n\r\n\tconst ndu = [];\r\n\r\n\tfor ( let i = 0; i <= p; ++ i )\r\n\t\tndu[ i ] = zeroArr.slice( 0 );\r\n\r\n\tndu[ 0 ][ 0 ] = 1.0;\r\n\r\n\tconst left = zeroArr.slice( 0 );\r\n\tconst right = zeroArr.slice( 0 );\r\n\r\n\tfor ( let j = 1; j <= p; ++ j ) {\r\n\r\n\t\tleft[ j ] = u - U[ span + 1 - j ];\r\n\t\tright[ j ] = U[ span + j ] - u;\r\n\r\n\t\tlet saved = 0.0;\r\n\r\n\t\tfor ( let r = 0; r < j; ++ r ) {\r\n\r\n\t\t\tconst rv = right[ r + 1 ];\r\n\t\t\tconst lv = left[ j - r ];\r\n\t\t\tndu[ j ][ r ] = rv + lv;\r\n\r\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\r\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\r\n\t\t\tsaved = lv * temp;\r\n\r\n\t\t}\r\n\r\n\t\tndu[ j ][ j ] = saved;\r\n\r\n\t}\r\n\r\n\tfor ( let j = 0; j <= p; ++ j ) {\r\n\r\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\r\n\r\n\t}\r\n\r\n\tfor ( let r = 0; r <= p; ++ r ) {\r\n\r\n\t\tlet s1 = 0;\r\n\t\tlet s2 = 1;\r\n\r\n\t\tconst a = [];\r\n\t\tfor ( let i = 0; i <= p; ++ i ) {\r\n\r\n\t\t\ta[ i ] = zeroArr.slice( 0 );\r\n\r\n\t\t}\r\n\r\n\t\ta[ 0 ][ 0 ] = 1.0;\r\n\r\n\t\tfor ( let k = 1; k <= n; ++ k ) {\r\n\r\n\t\t\tlet d = 0.0;\r\n\t\t\tconst rk = r - k;\r\n\t\t\tconst pk = p - k;\r\n\r\n\t\t\tif ( r >= k ) {\r\n\r\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\r\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\r\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\r\n\r\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\r\n\r\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\r\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( r <= pk ) {\r\n\r\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\r\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tders[ k ][ r ] = d;\r\n\r\n\t\t\tconst j = s1;\r\n\t\t\ts1 = s2;\r\n\t\t\ts2 = j;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet r = p;\r\n\r\n\tfor ( let k = 1; k <= n; ++ k ) {\r\n\r\n\t\tfor ( let j = 0; j <= p; ++ j ) {\r\n\r\n\t\t\tders[ k ][ j ] *= r;\r\n\r\n\t\t}\r\n\r\n\t\tr *= p - k;\r\n\r\n\t}\r\n\r\n\treturn ders;\r\n\r\n}\r\n\r\n\r\n/*\r\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\r\n\r\n\tp  : degree\r\n\tU  : knot vector\r\n\tP  : control points\r\n\tu  : Parametric points\r\n\tnd : number of derivatives\r\n\r\n\treturns array[d+1] with derivatives\r\n\t*/\r\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\r\n\r\n\tconst du = nd < p ? nd : p;\r\n\tconst CK = [];\r\n\tconst span = findSpan( p, u, U );\r\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\r\n\tconst Pw = [];\r\n\r\n\tfor ( let i = 0; i < P.length; ++ i ) {\r\n\r\n\t\tconst point = P[ i ].clone();\r\n\t\tconst w = point.w;\r\n\r\n\t\tpoint.x *= w;\r\n\t\tpoint.y *= w;\r\n\t\tpoint.z *= w;\r\n\r\n\t\tPw[ i ] = point;\r\n\r\n\t}\r\n\r\n\tfor ( let k = 0; k <= du; ++ k ) {\r\n\r\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\r\n\r\n\t\tfor ( let j = 1; j <= p; ++ j ) {\r\n\r\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tCK[ k ] = point;\r\n\r\n\t}\r\n\r\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\r\n\r\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\r\n\r\n\t}\r\n\r\n\treturn CK;\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate \"K over I\"\r\n\r\nreturns k!/(i!(k-i)!)\r\n*/\r\nfunction calcKoverI( k, i ) {\r\n\r\n\tlet nom = 1;\r\n\r\n\tfor ( let j = 2; j <= k; ++ j ) {\r\n\r\n\t\tnom *= j;\r\n\r\n\t}\r\n\r\n\tlet denom = 1;\r\n\r\n\tfor ( let j = 2; j <= i; ++ j ) {\r\n\r\n\t\tdenom *= j;\r\n\r\n\t}\r\n\r\n\tfor ( let j = 2; j <= k - i; ++ j ) {\r\n\r\n\t\tdenom *= j;\r\n\r\n\t}\r\n\r\n\treturn nom / denom;\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\r\n\r\nPders : result of function calcBSplineDerivatives\r\n\r\nreturns array with derivatives for rational curve.\r\n*/\r\nfunction calcRationalCurveDerivatives( Pders ) {\r\n\r\n\tconst nd = Pders.length;\r\n\tconst Aders = [];\r\n\tconst wders = [];\r\n\r\n\tfor ( let i = 0; i < nd; ++ i ) {\r\n\r\n\t\tconst point = Pders[ i ];\r\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\r\n\t\twders[ i ] = point.w;\r\n\r\n\t}\r\n\r\n\tconst CK = [];\r\n\r\n\tfor ( let k = 0; k < nd; ++ k ) {\r\n\r\n\t\tconst v = Aders[ k ].clone();\r\n\r\n\t\tfor ( let i = 1; i <= k; ++ i ) {\r\n\r\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn CK;\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\r\n\r\np  : degree\r\nU  : knot vector\r\nP  : control points in homogeneous space\r\nu  : parametric points\r\nnd : number of derivatives\r\n\r\nreturns array with derivatives.\r\n*/\r\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\r\n\r\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\r\n\treturn calcRationalCurveDerivatives( Pders );\r\n\r\n}\r\n\r\n\r\n/*\r\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\r\n\r\np1, p2 : degrees of B-Spline surface\r\nU1, U2 : knot vectors\r\nP      : control points (x, y, z, w)\r\nu, v   : parametric values\r\n\r\nreturns point for given (u, v)\r\n*/\r\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\r\n\r\n\tconst uspan = findSpan( p, u, U );\r\n\tconst vspan = findSpan( q, v, V );\r\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\r\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\r\n\tconst temp = [];\r\n\r\n\tfor ( let l = 0; l <= q; ++ l ) {\r\n\r\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\r\n\t\tfor ( let k = 0; k <= p; ++ k ) {\r\n\r\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\r\n\t\t\tconst w = point.w;\r\n\t\t\tpoint.x *= w;\r\n\t\t\tpoint.y *= w;\r\n\t\t\tpoint.z *= w;\r\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\r\n\tfor ( let l = 0; l <= q; ++ l ) {\r\n\r\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\r\n\r\n\t}\r\n\r\n\tSw.divideScalar( Sw.w );\r\n\ttarget.set( Sw.x, Sw.y, Sw.z );\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n\tfindSpan,\r\n\tcalcBasisFunctions,\r\n\tcalcBSplinePoint,\r\n\tcalcBasisFunctionDerivatives,\r\n\tcalcBSplineDerivatives,\r\n\tcalcKoverI,\r\n\tcalcRationalCurveDerivatives,\r\n\tcalcNURBSDerivatives,\r\n\tcalcSurfacePoint,\r\n};\r\n", "import {\r\n\tCurve,\r\n\tVector3,\r\n\tVector4\r\n} from 'three';\r\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\r\n\r\n/**\r\n * NURBS curve object\r\n *\r\n * Derives from Curve, overriding getPoint and getTangent.\r\n *\r\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\r\n *\r\n **/\r\n\r\nclass NURBSCurve extends Curve {\r\n\r\n\tconstructor(\r\n\t\tdegree,\r\n\t\tknots /* array of reals */,\r\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\r\n\t\tstartKnot /* index in knots */,\r\n\t\tendKnot /* index in knots */\r\n\t) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.degree = degree;\r\n\t\tthis.knots = knots;\r\n\t\tthis.controlPoints = [];\r\n\t\t// Used by periodic NURBS to remove hidden spans\r\n\t\tthis.startKnot = startKnot || 0;\r\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\r\n\r\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\r\n\r\n\t\t\t// ensure Vector4 for control points\r\n\t\t\tconst point = controlPoints[ i ];\r\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\r\n\r\n\t\t// following results in (wx, wy, wz, w) homogeneous point\r\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\r\n\r\n\t\tif ( hpoint.w !== 1.0 ) {\r\n\r\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\r\n\t\t\thpoint.divideScalar( hpoint.w );\r\n\r\n\t\t}\r\n\r\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\r\n\r\n\t}\r\n\r\n\tgetTangent( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst tangent = optionalTarget;\r\n\r\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\r\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\r\n\t\ttangent.copy( ders[ 1 ] ).normalize();\r\n\r\n\t\treturn tangent;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { NURBSCurve };\r\n", "import {\r\n\tAmbientLight,\r\n\tAnimationClip,\r\n\tBone,\r\n\tBufferGeometry,\r\n\tClampToEdgeWrapping,\r\n\tColor,\r\n\tDirectionalLight,\r\n\tEquirectangularReflectionMapping,\r\n\tEuler,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMathUtils,\r\n\tMatrix3,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshLambertMaterial,\r\n\tMeshPhongMaterial,\r\n\tNumberKeyframeTrack,\r\n\tObject3D,\r\n\tOrthographicCamera,\r\n\tPerspectiveCamera,\r\n\tPointLight,\r\n\tPropertyBinding,\r\n\tQuaternion,\r\n\tQuaternionKeyframeTrack,\r\n\tRepeatWrapping,\r\n\tSkeleton,\r\n\tSkinnedMesh,\r\n\tSpotLight,\r\n\tTexture,\r\n\tTextureLoader,\r\n\tUint16BufferAttribute,\r\n\tVector3,\r\n\tVector4,\r\n\tVectorKeyframeTrack,\r\n\tSRGBColorSpace\r\n} from 'three';\r\nimport * as fflate from '../libs/fflate.module.js';\r\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\r\n\r\n/**\r\n * Loader loads FBX file and generates Group representing FBX scene.\r\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\r\n * Versions lower than this may load but will probably have errors\r\n *\r\n * Needs Support:\r\n *  Morph normals / blend shape normals\r\n *\r\n * FBX format references:\r\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\r\n *\r\n * Binary format specification:\r\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\r\n */\r\n\r\n\r\nlet fbxTree;\r\nlet connections;\r\nlet sceneGraph;\r\n\r\nclass FBXLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( FBXBuffer, path ) {\r\n\r\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\r\n\r\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\r\n\r\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfbxTree = new TextParser().parse( FBXText );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log( fbxTree );\r\n\r\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\r\n\r\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\r\nclass FBXTreeParser {\r\n\r\n\tconstructor( textureLoader, manager ) {\r\n\r\n\t\tthis.textureLoader = textureLoader;\r\n\t\tthis.manager = manager;\r\n\r\n\t}\r\n\r\n\tparse() {\r\n\r\n\t\tconnections = this.parseConnections();\r\n\r\n\t\tconst images = this.parseImages();\r\n\t\tconst textures = this.parseTextures( images );\r\n\t\tconst materials = this.parseMaterials( textures );\r\n\t\tconst deformers = this.parseDeformers();\r\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\r\n\r\n\t\tthis.parseScene( deformers, geometryMap, materials );\r\n\r\n\t\treturn sceneGraph;\r\n\r\n\t}\r\n\r\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\r\n\t// and details the connection type\r\n\tparseConnections() {\r\n\r\n\t\tconst connectionMap = new Map();\r\n\r\n\t\tif ( 'Connections' in fbxTree ) {\r\n\r\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\r\n\r\n\t\t\trawConnections.forEach( function ( rawConnection ) {\r\n\r\n\t\t\t\tconst fromID = rawConnection[ 0 ];\r\n\t\t\t\tconst toID = rawConnection[ 1 ];\r\n\t\t\t\tconst relationship = rawConnection[ 2 ];\r\n\r\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\r\n\r\n\t\t\t\t\tconnectionMap.set( fromID, {\r\n\t\t\t\t\t\tparents: [],\r\n\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\r\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\r\n\r\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\r\n\r\n\t\t\t\t\tconnectionMap.set( toID, {\r\n\t\t\t\t\t\tparents: [],\r\n\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\r\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn connectionMap;\r\n\r\n\t}\r\n\r\n\t// Parse FBXTree.Objects.Video for embedded image data\r\n\t// These images are connected to textures in FBXTree.Objects.Textures\r\n\t// via FBXTree.Connections.\r\n\tparseImages() {\r\n\r\n\t\tconst images = {};\r\n\t\tconst blobs = {};\r\n\r\n\t\tif ( 'Video' in fbxTree.Objects ) {\r\n\r\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\r\n\r\n\t\t\tfor ( const nodeID in videoNodes ) {\r\n\r\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\r\n\r\n\t\t\t\tconst id = parseInt( nodeID );\r\n\r\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\r\n\r\n\t\t\t\t// raw image data is in videoNode.Content\r\n\t\t\t\tif ( 'Content' in videoNode ) {\r\n\r\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\r\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\r\n\r\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\r\n\r\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\r\n\r\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const id in images ) {\r\n\r\n\t\t\tconst filename = images[ id ];\r\n\r\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\r\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t}\r\n\r\n\t// Parse embedded image data in FBXTree.Video.Content\r\n\tparseImage( videoNode ) {\r\n\r\n\t\tconst content = videoNode.Content;\r\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\r\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\r\n\r\n\t\tlet type;\r\n\r\n\t\tswitch ( extension ) {\r\n\r\n\t\t\tcase 'bmp':\r\n\r\n\t\t\t\ttype = 'image/bmp';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'jpg':\r\n\t\t\tcase 'jpeg':\r\n\r\n\t\t\t\ttype = 'image/jpeg';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'png':\r\n\r\n\t\t\t\ttype = 'image/png';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'tif':\r\n\r\n\t\t\t\ttype = 'image/tiff';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'tga':\r\n\r\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttype = 'image/tga';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof content === 'string' ) { // ASCII format\r\n\r\n\t\t\treturn 'data:' + type + ';base64,' + content;\r\n\r\n\t\t} else { // Binary Format\r\n\r\n\t\t\tconst array = new Uint8Array( content );\r\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Parse nodes in FBXTree.Objects.Texture\r\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\r\n\t// to images in FBXTree.Objects.Video\r\n\tparseTextures( images ) {\r\n\r\n\t\tconst textureMap = new Map();\r\n\r\n\t\tif ( 'Texture' in fbxTree.Objects ) {\r\n\r\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\r\n\t\t\tfor ( const nodeID in textureNodes ) {\r\n\r\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\r\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textureMap;\r\n\r\n\t}\r\n\r\n\t// Parse individual node in FBXTree.Objects.Texture\r\n\tparseTexture( textureNode, images ) {\r\n\r\n\t\tconst texture = this.loadTexture( textureNode, images );\r\n\r\n\t\ttexture.ID = textureNode.id;\r\n\r\n\t\ttexture.name = textureNode.attrName;\r\n\r\n\t\tconst wrapModeU = textureNode.WrapModeU;\r\n\t\tconst wrapModeV = textureNode.WrapModeV;\r\n\r\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\r\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\r\n\r\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\r\n\t\t// 0: repeat(default), 1: clamp\r\n\r\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\r\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\r\n\r\n\t\tif ( 'Scaling' in textureNode ) {\r\n\r\n\t\t\tconst values = textureNode.Scaling.value;\r\n\r\n\t\t\ttexture.repeat.x = values[ 0 ];\r\n\t\t\ttexture.repeat.y = values[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'Translation' in textureNode ) {\r\n\r\n\t\t\tconst values = textureNode.Translation.value;\r\n\r\n\t\t\ttexture.offset.x = values[ 0 ];\r\n\t\t\ttexture.offset.y = values[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\r\n\tloadTexture( textureNode, images ) {\r\n\r\n\t\tlet fileName;\r\n\r\n\t\tconst currentPath = this.textureLoader.path;\r\n\r\n\t\tconst children = connections.get( textureNode.id ).children;\r\n\r\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\r\n\r\n\t\t\tfileName = images[ children[ 0 ].ID ];\r\n\r\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\r\n\r\n\t\t\t\tthis.textureLoader.setPath( undefined );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet texture;\r\n\r\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\r\n\r\n\t\tif ( extension === 'tga' ) {\r\n\r\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\r\n\r\n\t\t\tif ( loader === null ) {\r\n\r\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\r\n\t\t\t\ttexture = new Texture();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tloader.setPath( this.textureLoader.path );\r\n\t\t\t\ttexture = loader.load( fileName );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( extension === 'psd' ) {\r\n\r\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\r\n\t\t\ttexture = new Texture();\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttexture = this.textureLoader.load( fileName );\r\n\r\n\t\t}\r\n\r\n\t\tthis.textureLoader.setPath( currentPath );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\t// Parse nodes in FBXTree.Objects.Material\r\n\tparseMaterials( textureMap ) {\r\n\r\n\t\tconst materialMap = new Map();\r\n\r\n\t\tif ( 'Material' in fbxTree.Objects ) {\r\n\r\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\r\n\r\n\t\t\tfor ( const nodeID in materialNodes ) {\r\n\r\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\r\n\r\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materialMap;\r\n\r\n\t}\r\n\r\n\t// Parse single node in FBXTree.Objects.Material\r\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\r\n\t// FBX format currently only supports Lambert and Phong shading models\r\n\tparseMaterial( materialNode, textureMap ) {\r\n\r\n\t\tconst ID = materialNode.id;\r\n\t\tconst name = materialNode.attrName;\r\n\t\tlet type = materialNode.ShadingModel;\r\n\r\n\t\t// Case where FBX wraps shading model in property object.\r\n\t\tif ( typeof type === 'object' ) {\r\n\r\n\t\t\ttype = type.value;\r\n\r\n\t\t}\r\n\r\n\t\t// Ignore unused materials which don't have any connections.\r\n\t\tif ( ! connections.has( ID ) ) return null;\r\n\r\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\r\n\r\n\t\tlet material;\r\n\r\n\t\tswitch ( type.toLowerCase() ) {\r\n\r\n\t\t\tcase 'phong':\r\n\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'lambert':\r\n\t\t\t\tmaterial = new MeshLambertMaterial();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\r\n\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.setValues( parameters );\r\n\t\tmaterial.name = name;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\t// Parse FBX material and return parameters suitable for a three.js material\r\n\t// Also parse the texture map and return any textures associated with the material\r\n\tparseParameters( materialNode, textureMap, ID ) {\r\n\r\n\t\tconst parameters = {};\r\n\r\n\t\tif ( materialNode.BumpFactor ) {\r\n\r\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.Diffuse ) {\r\n\r\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value ).convertSRGBToLinear();\r\n\r\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\r\n\r\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\r\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value ).convertSRGBToLinear();\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.DisplacementFactor ) {\r\n\r\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.Emissive ) {\r\n\r\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value ).convertSRGBToLinear();\r\n\r\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\r\n\r\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\r\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value ).convertSRGBToLinear();\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.EmissiveFactor ) {\r\n\r\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.Opacity ) {\r\n\r\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.opacity < 1.0 ) {\r\n\r\n\t\t\tparameters.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.ReflectionFactor ) {\r\n\r\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.Shininess ) {\r\n\r\n\t\t\tparameters.shininess = materialNode.Shininess.value;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialNode.Specular ) {\r\n\r\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value ).convertSRGBToLinear();\r\n\r\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\r\n\r\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\r\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value ).convertSRGBToLinear();\r\n\r\n\t\t}\r\n\r\n\t\tconst scope = this;\r\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\r\n\r\n\t\t\tconst type = child.relationship;\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'Bump':\r\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Maya|TEX_ao_map':\r\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DiffuseColor':\r\n\t\t\t\tcase 'Maya|TEX_color_map':\r\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tif ( parameters.map !== undefined ) {\r\n\r\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DisplacementColor':\r\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'EmissiveColor':\r\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\r\n\r\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'NormalMap':\r\n\t\t\t\tcase 'Maya|TEX_normal_map':\r\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ReflectionColor':\r\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\r\n\r\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\r\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpecularColor':\r\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\r\n\r\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'TransparentColor':\r\n\t\t\t\tcase 'TransparencyFactor':\r\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\tparameters.transparent = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientColor':\r\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\r\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\r\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn parameters;\r\n\r\n\t}\r\n\r\n\t// get a texture from the textureMap for use by a material.\r\n\tgetTexture( textureMap, id ) {\r\n\r\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\r\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\r\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\r\n\r\n\t\t}\r\n\r\n\t\treturn textureMap.get( id );\r\n\r\n\t}\r\n\r\n\t// Parse nodes in FBXTree.Objects.Deformer\r\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\r\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\r\n\tparseDeformers() {\r\n\r\n\t\tconst skeletons = {};\r\n\t\tconst morphTargets = {};\r\n\r\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\r\n\r\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\r\n\r\n\t\t\tfor ( const nodeID in DeformerNodes ) {\r\n\r\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\r\n\r\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\r\n\r\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\r\n\r\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\r\n\t\t\t\t\tskeleton.ID = nodeID;\r\n\r\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\r\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\r\n\r\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\r\n\r\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\r\n\r\n\t\t\t\t\tconst morphTarget = {\r\n\t\t\t\t\t\tid: nodeID,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\r\n\t\t\t\t\tmorphTarget.id = nodeID;\r\n\r\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\r\n\r\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tskeletons: skeletons,\r\n\t\t\tmorphTargets: morphTargets,\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Parse single nodes in FBXTree.Objects.Deformer\r\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\r\n\t// Each skin node represents a skeleton and each cluster node represents a bone\r\n\tparseSkeleton( relationships, deformerNodes ) {\r\n\r\n\t\tconst rawBones = [];\r\n\r\n\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\r\n\r\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\r\n\r\n\t\t\tconst rawBone = {\r\n\r\n\t\t\t\tID: child.ID,\r\n\t\t\t\tindices: [],\r\n\t\t\t\tweights: [],\r\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\r\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\r\n\t\t\t\t// linkMode: boneNode.Mode,\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( 'Indexes' in boneNode ) {\r\n\r\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\r\n\t\t\t\trawBone.weights = boneNode.Weights.a;\r\n\r\n\t\t\t}\r\n\r\n\t\t\trawBones.push( rawBone );\r\n\r\n\t\t} );\r\n\r\n\t\treturn {\r\n\r\n\t\t\trawBones: rawBones,\r\n\t\t\tbones: []\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\r\n\tparseMorphTargets( relationships, deformerNodes ) {\r\n\r\n\t\tconst rawMorphTargets = [];\r\n\r\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\r\n\r\n\t\t\tconst child = relationships.children[ i ];\r\n\r\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\r\n\r\n\t\t\tconst rawMorphTarget = {\r\n\r\n\t\t\t\tname: morphTargetNode.attrName,\r\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\r\n\t\t\t\tid: morphTargetNode.id,\r\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\r\n\r\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\r\n\r\n\t\t\t\treturn child.relationship === undefined;\r\n\r\n\t\t\t} )[ 0 ].ID;\r\n\r\n\t\t\trawMorphTargets.push( rawMorphTarget );\r\n\r\n\t\t}\r\n\r\n\t\treturn rawMorphTargets;\r\n\r\n\t}\r\n\r\n\t// create the main Group() to be returned by the loader\r\n\tparseScene( deformers, geometryMap, materialMap ) {\r\n\r\n\t\tsceneGraph = new Group();\r\n\r\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\r\n\r\n\t\tconst modelNodes = fbxTree.Objects.Model;\r\n\r\n\t\tconst scope = this;\r\n\t\tmodelMap.forEach( function ( model ) {\r\n\r\n\t\t\tconst modelNode = modelNodes[ model.ID ];\r\n\t\t\tscope.setLookAtProperties( model, modelNode );\r\n\r\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\r\n\r\n\t\t\tparentConnections.forEach( function ( connection ) {\r\n\r\n\t\t\t\tconst parent = modelMap.get( connection.ID );\r\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( model.parent === null ) {\r\n\r\n\t\t\t\tsceneGraph.add( model );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t} );\r\n\r\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\r\n\r\n\t\tthis.createAmbientLight();\r\n\r\n\t\tsceneGraph.traverse( function ( node ) {\r\n\r\n\t\t\tif ( node.userData.transformData ) {\r\n\r\n\t\t\t\tif ( node.parent ) {\r\n\r\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\r\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\r\n\r\n\t\t\t\tnode.applyMatrix4( transform );\r\n\t\t\t\tnode.updateWorldMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tconst animations = new AnimationParser().parse();\r\n\r\n\t\t// if all the models where already combined in a single group, just return that\r\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\r\n\r\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\r\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t\tsceneGraph.animations = animations;\r\n\r\n\t}\r\n\r\n\t// parse nodes in FBXTree.Objects.Model\r\n\tparseModels( skeletons, geometryMap, materialMap ) {\r\n\r\n\t\tconst modelMap = new Map();\r\n\t\tconst modelNodes = fbxTree.Objects.Model;\r\n\r\n\t\tfor ( const nodeID in modelNodes ) {\r\n\r\n\t\t\tconst id = parseInt( nodeID );\r\n\t\t\tconst node = modelNodes[ nodeID ];\r\n\t\t\tconst relationships = connections.get( id );\r\n\r\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\r\n\r\n\t\t\tif ( ! model ) {\r\n\r\n\t\t\t\tswitch ( node.attrType ) {\r\n\r\n\t\t\t\t\tcase 'Camera':\r\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Light':\r\n\t\t\t\t\t\tmodel = this.createLight( relationships );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'NurbsCurve':\r\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'LimbNode':\r\n\t\t\t\t\tcase 'Root':\r\n\t\t\t\t\t\tmodel = new Bone();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Null':\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tmodel = new Group();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\r\n\t\t\t\tmodel.userData.originalName = node.attrName;\r\n\r\n\t\t\t\tmodel.ID = id;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.getTransformData( model, node );\r\n\t\t\tmodelMap.set( id, model );\r\n\r\n\t\t}\r\n\r\n\t\treturn modelMap;\r\n\r\n\t}\r\n\r\n\tbuildSkeleton( relationships, skeletons, id, name ) {\r\n\r\n\t\tlet bone = null;\r\n\r\n\t\trelationships.parents.forEach( function ( parent ) {\r\n\r\n\t\t\tfor ( const ID in skeletons ) {\r\n\r\n\t\t\t\tconst skeleton = skeletons[ ID ];\r\n\r\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\r\n\r\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\r\n\r\n\t\t\t\t\t\tconst subBone = bone;\r\n\t\t\t\t\t\tbone = new Bone();\r\n\r\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\r\n\r\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\r\n\r\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\r\n\t\t\t\t\t\tbone.userData.originalName = name;\r\n\t\t\t\t\t\tbone.ID = id;\r\n\r\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\r\n\r\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\r\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\r\n\t\t\t\t\t\tif ( subBone !== null ) {\r\n\r\n\t\t\t\t\t\t\tbone.add( subBone );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn bone;\r\n\r\n\t}\r\n\r\n\t// create a PerspectiveCamera or OrthographicCamera\r\n\tcreateCamera( relationships ) {\r\n\r\n\t\tlet model;\r\n\t\tlet cameraAttribute;\r\n\r\n\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\r\n\r\n\t\t\tif ( attr !== undefined ) {\r\n\r\n\t\t\t\tcameraAttribute = attr;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tif ( cameraAttribute === undefined ) {\r\n\r\n\t\t\tmodel = new Object3D();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlet type = 0;\r\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\r\n\r\n\t\t\t\ttype = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet nearClippingPlane = 1;\r\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\r\n\r\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet farClippingPlane = 1000;\r\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\r\n\r\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet width = window.innerWidth;\r\n\t\t\tlet height = window.innerHeight;\r\n\r\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\r\n\r\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\r\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst aspect = width / height;\r\n\r\n\t\t\tlet fov = 45;\r\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\r\n\r\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 0: // Perspective\r\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\r\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1: // Orthographic\r\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\r\n\t\t\t\t\tmodel = new Object3D();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn model;\r\n\r\n\t}\r\n\r\n\t// Create a DirectionalLight, PointLight or SpotLight\r\n\tcreateLight( relationships ) {\r\n\r\n\t\tlet model;\r\n\t\tlet lightAttribute;\r\n\r\n\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\r\n\r\n\t\t\tif ( attr !== undefined ) {\r\n\r\n\t\t\t\tlightAttribute = attr;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tif ( lightAttribute === undefined ) {\r\n\r\n\t\t\tmodel = new Object3D();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlet type;\r\n\r\n\t\t\t// LightType can be undefined for Point lights\r\n\t\t\tif ( lightAttribute.LightType === undefined ) {\r\n\r\n\t\t\t\ttype = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttype = lightAttribute.LightType.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet color = 0xffffff;\r\n\r\n\t\t\tif ( lightAttribute.Color !== undefined ) {\r\n\r\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value ).convertSRGBToLinear();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\r\n\r\n\t\t\t// light disabled\r\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\r\n\r\n\t\t\t\tintensity = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet distance = 0;\r\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\r\n\r\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\r\n\r\n\t\t\t\t\tdistance = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\r\n\t\t\tconst decay = 1;\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 0: // Point\r\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1: // Directional\r\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2: // Spot\r\n\t\t\t\t\tlet angle = Math.PI / 3;\r\n\r\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\r\n\r\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet penumbra = 0;\r\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\r\n\r\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\r\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\r\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\r\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\r\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\r\n\t\t\t\t\tmodel = new PointLight( color, intensity );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\r\n\r\n\t\t\t\tmodel.castShadow = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn model;\r\n\r\n\t}\r\n\r\n\tcreateMesh( relationships, geometryMap, materialMap ) {\r\n\r\n\t\tlet model;\r\n\t\tlet geometry = null;\r\n\t\tlet material = null;\r\n\t\tconst materials = [];\r\n\r\n\t\t// get geometry and materials(s) from connections\r\n\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\tif ( geometryMap.has( child.ID ) ) {\r\n\r\n\t\t\t\tgeometry = geometryMap.get( child.ID );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialMap.has( child.ID ) ) {\r\n\r\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tif ( materials.length > 1 ) {\r\n\r\n\t\t\tmaterial = materials;\r\n\r\n\t\t} else if ( materials.length > 0 ) {\r\n\r\n\t\t\tmaterial = materials[ 0 ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterial = new MeshPhongMaterial( {\r\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\r\n\t\t\t\tcolor: 0xcccccc\r\n\t\t\t} );\r\n\t\t\tmaterials.push( material );\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'color' in geometry.attributes ) {\r\n\r\n\t\t\tmaterials.forEach( function ( material ) {\r\n\r\n\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.FBX_Deformer ) {\r\n\r\n\t\t\tmodel = new SkinnedMesh( geometry, material );\r\n\t\t\tmodel.normalizeSkinWeights();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmodel = new Mesh( geometry, material );\r\n\r\n\t\t}\r\n\r\n\t\treturn model;\r\n\r\n\t}\r\n\r\n\tcreateCurve( relationships, geometryMap ) {\r\n\r\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\r\n\r\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\r\n\r\n\t\t\treturn geo;\r\n\r\n\t\t}, null );\r\n\r\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\r\n\t\tconst material = new LineBasicMaterial( {\r\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\r\n\t\t\tcolor: 0x3300ff,\r\n\t\t\tlinewidth: 1\r\n\t\t} );\r\n\t\treturn new Line( geometry, material );\r\n\r\n\t}\r\n\r\n\t// parse the model node for transform data\r\n\tgetTransformData( model, modelNode ) {\r\n\r\n\t\tconst transformData = {};\r\n\r\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\r\n\r\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\r\n\t\telse transformData.eulerOrder = 'ZYX';\r\n\r\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\r\n\r\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\r\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\r\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\r\n\r\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\r\n\r\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\r\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\r\n\r\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\r\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\r\n\r\n\t\tmodel.userData.transformData = transformData;\r\n\r\n\t}\r\n\r\n\tsetLookAtProperties( model, modelNode ) {\r\n\r\n\t\tif ( 'LookAtProperty' in modelNode ) {\r\n\r\n\t\t\tconst children = connections.get( model.ID ).children;\r\n\r\n\t\t\tchildren.forEach( function ( child ) {\r\n\r\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\r\n\r\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\r\n\r\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\r\n\r\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\r\n\r\n\t\t\t\t\t\t// DirectionalLight, SpotLight\r\n\t\t\t\t\t\tif ( model.target !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\r\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\r\n\r\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\r\n\r\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\r\n\r\n\t\tconst bindMatrices = this.parsePoseNodes();\r\n\r\n\t\tfor ( const ID in skeletons ) {\r\n\r\n\t\t\tconst skeleton = skeletons[ ID ];\r\n\r\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\r\n\r\n\t\t\tparents.forEach( function ( parent ) {\r\n\r\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\r\n\r\n\t\t\t\t\tconst geoID = parent.ID;\r\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\r\n\r\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\r\n\r\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\r\n\r\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\r\n\r\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tparsePoseNodes() {\r\n\r\n\t\tconst bindMatrices = {};\r\n\r\n\t\tif ( 'Pose' in fbxTree.Objects ) {\r\n\r\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\r\n\r\n\t\t\tfor ( const nodeID in BindPoseNode ) {\r\n\r\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\r\n\r\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\r\n\r\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\r\n\r\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\r\n\r\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn bindMatrices;\r\n\r\n\t}\r\n\r\n\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\r\n\tcreateAmbientLight() {\r\n\r\n\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\r\n\r\n\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\r\n\t\t\tconst r = ambientColor[ 0 ];\r\n\t\t\tconst g = ambientColor[ 1 ];\r\n\t\t\tconst b = ambientColor[ 2 ];\r\n\r\n\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\r\n\r\n\t\t\t\tconst color = new Color( r, g, b ).convertSRGBToLinear();\r\n\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// parse Geometry data from FBXTree and return map of BufferGeometries\r\nclass GeometryParser {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.negativeMaterialIndices = false;\r\n\r\n\t}\r\n\r\n\t// Parse nodes in FBXTree.Objects.Geometry\r\n\tparse( deformers ) {\r\n\r\n\t\tconst geometryMap = new Map();\r\n\r\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\r\n\r\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\r\n\r\n\t\t\tfor ( const nodeID in geoNodes ) {\r\n\r\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\r\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\r\n\r\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// report warnings\r\n\r\n\t\tif ( this.negativeMaterialIndices === true ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometryMap;\r\n\r\n\t}\r\n\r\n\t// Parse single node in FBXTree.Objects.Geometry\r\n\tparseGeometry( relationships, geoNode, deformers ) {\r\n\r\n\t\tswitch ( geoNode.attrType ) {\r\n\r\n\t\t\tcase 'Mesh':\r\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'NurbsCurve':\r\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\r\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\r\n\r\n\t\tconst skeletons = deformers.skeletons;\r\n\t\tconst morphTargets = [];\r\n\r\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\r\n\r\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\r\n\r\n\t\t} );\r\n\r\n\t\t// don't create geometry if it is not associated with any models\r\n\t\tif ( modelNodes.length === 0 ) return;\r\n\r\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\r\n\r\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\r\n\r\n\t\t\treturn skeleton;\r\n\r\n\t\t}, null );\r\n\r\n\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\r\n\r\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Assume one model and get the preRotation from that\r\n\t\t// if there is more than one model associated with the geometry this may cause problems\r\n\t\tconst modelNode = modelNodes[ 0 ];\r\n\r\n\t\tconst transformData = {};\r\n\r\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\r\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\r\n\r\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\r\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\r\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\r\n\r\n\t\tconst transform = generateTransform( transformData );\r\n\r\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\r\n\r\n\t}\r\n\r\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\r\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\r\n\r\n\t\tconst geo = new BufferGeometry();\r\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\r\n\r\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\r\n\t\tconst buffers = this.genBuffers( geoInfo );\r\n\r\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\r\n\r\n\t\tpositionAttribute.applyMatrix4( preTransform );\r\n\r\n\t\tgeo.setAttribute( 'position', positionAttribute );\r\n\r\n\t\tif ( buffers.colors.length > 0 ) {\r\n\r\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( skeleton ) {\r\n\r\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\r\n\r\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\r\n\r\n\t\t\t// used later to bind the skeleton to the model\r\n\t\t\tgeo.FBX_Deformer = skeleton;\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.normal.length > 0 ) {\r\n\r\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\r\n\r\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\r\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\r\n\r\n\t\t}\r\n\r\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\r\n\r\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\r\n\r\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\r\n\r\n\t\t} );\r\n\r\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\r\n\r\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\r\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\r\n\t\t\tlet startIndex = 0;\r\n\r\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\r\n\r\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\r\n\r\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\r\n\r\n\t\t\t\t\tprevMaterialIndex = currentIndex;\r\n\t\t\t\t\tstartIndex = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// the loop above doesn't add the last group, do that here.\r\n\t\t\tif ( geo.groups.length > 0 ) {\r\n\r\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\r\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\r\n\r\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\r\n\r\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// case where there are multiple materials but the whole geometry is only\r\n\t\t\t// using one of them\r\n\t\t\tif ( geo.groups.length === 0 ) {\r\n\r\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\r\n\r\n\t\treturn geo;\r\n\r\n\t}\r\n\r\n\tparseGeoNode( geoNode, skeleton ) {\r\n\r\n\t\tconst geoInfo = {};\r\n\r\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\r\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\r\n\r\n\t\tif ( geoNode.LayerElementColor ) {\r\n\r\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geoNode.LayerElementMaterial ) {\r\n\r\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geoNode.LayerElementNormal ) {\r\n\r\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geoNode.LayerElementUV ) {\r\n\r\n\t\t\tgeoInfo.uv = [];\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\r\n\r\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\r\n\r\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeoInfo.weightTable = {};\r\n\r\n\t\tif ( skeleton !== null ) {\r\n\r\n\t\t\tgeoInfo.skeleton = skeleton;\r\n\r\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\r\n\r\n\t\t\t\t// loop over the bone's vertex indices and weights\r\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\r\n\r\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\r\n\r\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\r\n\r\n\t\t\t\t\t\tid: i,\r\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn geoInfo;\r\n\r\n\t}\r\n\r\n\tgenBuffers( geoInfo ) {\r\n\r\n\t\tconst buffers = {\r\n\t\t\tvertex: [],\r\n\t\t\tnormal: [],\r\n\t\t\tcolors: [],\r\n\t\t\tuvs: [],\r\n\t\t\tmaterialIndex: [],\r\n\t\t\tvertexWeights: [],\r\n\t\t\tweightsIndices: [],\r\n\t\t};\r\n\r\n\t\tlet polygonIndex = 0;\r\n\t\tlet faceLength = 0;\r\n\t\tlet displayedWeightsWarning = false;\r\n\r\n\t\t// these will hold data for a single face\r\n\t\tlet facePositionIndexes = [];\r\n\t\tlet faceNormals = [];\r\n\t\tlet faceColors = [];\r\n\t\tlet faceUVs = [];\r\n\t\tlet faceWeights = [];\r\n\t\tlet faceWeightIndices = [];\r\n\r\n\t\tconst scope = this;\r\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\r\n\r\n\t\t\tlet materialIndex;\r\n\t\t\tlet endOfFace = false;\r\n\r\n\t\t\t// Face index and vertex index arrays are combined in a single array\r\n\t\t\t// A cube with quad faces looks like this:\r\n\t\t\t// PolygonVertexIndex: *24 {\r\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\r\n\t\t\t//  }\r\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\r\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\r\n\t\t\tif ( vertexIndex < 0 ) {\r\n\r\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\r\n\t\t\t\tendOfFace = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet weightIndices = [];\r\n\t\t\tlet weights = [];\r\n\r\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\r\n\r\n\t\t\tif ( geoInfo.color ) {\r\n\r\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\r\n\r\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.skeleton ) {\r\n\r\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\r\n\r\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\r\n\r\n\t\t\t\t\t\tweights.push( wt.weight );\r\n\t\t\t\t\t\tweightIndices.push( wt.id );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( weights.length > 4 ) {\r\n\r\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\r\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\r\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\r\n\r\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\r\n\r\n\t\t\t\t\t\tlet currentWeight = weight;\r\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\r\n\r\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\r\n\r\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\r\n\r\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\r\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\r\n\r\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\r\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\r\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tweightIndices = wIndex;\r\n\t\t\t\t\tweights = Weight;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\r\n\t\t\t\twhile ( weights.length < 4 ) {\r\n\r\n\t\t\t\t\tweights.push( 0 );\r\n\t\t\t\t\tweightIndices.push( 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\r\n\r\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\r\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.normal ) {\r\n\r\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\r\n\r\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\r\n\r\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\r\n\r\n\t\t\t\tif ( materialIndex < 0 ) {\r\n\r\n\t\t\t\t\tscope.negativeMaterialIndices = true;\r\n\t\t\t\t\tmaterialIndex = 0; // fallback\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.uv ) {\r\n\r\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\r\n\r\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\r\n\r\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\tfaceUVs[ i ] = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\r\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceLength ++;\r\n\r\n\t\t\tif ( endOfFace ) {\r\n\r\n\t\t\t\tif ( faceLength > 4 ) console.warn( 'THREE.FBXLoader: Polygons with more than four sides are not supported. Make sure to triangulate the geometry during export.' );\r\n\r\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\r\n\r\n\t\t\t\tpolygonIndex ++;\r\n\t\t\t\tfaceLength = 0;\r\n\r\n\t\t\t\t// reset arrays for the next face\r\n\t\t\t\tfacePositionIndexes = [];\r\n\t\t\t\tfaceNormals = [];\r\n\t\t\t\tfaceColors = [];\r\n\t\t\t\tfaceUVs = [];\r\n\t\t\t\tfaceWeights = [];\r\n\t\t\t\tfaceWeightIndices = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn buffers;\r\n\r\n\t}\r\n\r\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\r\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\r\n\r\n\t\tfor ( let i = 2; i < faceLength; i ++ ) {\r\n\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\r\n\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\r\n\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\r\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\r\n\r\n\t\t\tif ( geoInfo.skeleton ) {\r\n\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\r\n\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\r\n\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\r\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\r\n\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\r\n\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\r\n\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\r\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.color ) {\r\n\r\n\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\r\n\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\r\n\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\r\n\r\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\r\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\r\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\r\n\r\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\r\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\r\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\r\n\r\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\r\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\r\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.normal ) {\r\n\r\n\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\r\n\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\r\n\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\r\n\r\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\r\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\r\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\r\n\r\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\r\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\r\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoInfo.uv ) {\r\n\r\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\r\n\r\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\r\n\r\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\r\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\r\n\r\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\r\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\r\n\r\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\r\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\r\n\r\n\t\tif ( morphTargets.length === 0 ) return;\r\n\r\n\t\tparentGeo.morphTargetsRelative = true;\r\n\r\n\t\tparentGeo.morphAttributes.position = [];\r\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\r\n\r\n\t\tconst scope = this;\r\n\t\tmorphTargets.forEach( function ( morphTarget ) {\r\n\r\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\r\n\r\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\r\n\r\n\t\t\t\tif ( morphGeoNode !== undefined ) {\r\n\r\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\r\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\r\n\t// and a special attribute Index defining which vertices of the original geometry are affected\r\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\r\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\r\n\r\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\r\n\r\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\r\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\r\n\r\n\t\tconst length = parentGeo.attributes.position.count * 3;\r\n\t\tconst morphPositions = new Float32Array( length );\r\n\r\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\r\n\r\n\t\t\tconst morphIndex = indices[ i ] * 3;\r\n\r\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\r\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\r\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\r\n\r\n\t\t}\r\n\r\n\t\t// TODO: add morph normal support\r\n\t\tconst morphGeoInfo = {\r\n\t\t\tvertexIndices: vertexIndices,\r\n\t\t\tvertexPositions: morphPositions,\r\n\r\n\t\t};\r\n\r\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\r\n\r\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\r\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\r\n\r\n\t\tpositionAttribute.applyMatrix4( preTransform );\r\n\r\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\r\n\r\n\t}\r\n\r\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\r\n\tparseNormals( NormalNode ) {\r\n\r\n\t\tconst mappingType = NormalNode.MappingInformationType;\r\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\r\n\t\tconst buffer = NormalNode.Normals.a;\r\n\t\tlet indexBuffer = [];\r\n\t\tif ( referenceType === 'IndexToDirect' ) {\r\n\r\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\r\n\r\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\r\n\r\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\r\n\r\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdataSize: 3,\r\n\t\t\tbuffer: buffer,\r\n\t\t\tindices: indexBuffer,\r\n\t\t\tmappingType: mappingType,\r\n\t\t\treferenceType: referenceType\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\r\n\tparseUVs( UVNode ) {\r\n\r\n\t\tconst mappingType = UVNode.MappingInformationType;\r\n\t\tconst referenceType = UVNode.ReferenceInformationType;\r\n\t\tconst buffer = UVNode.UV.a;\r\n\t\tlet indexBuffer = [];\r\n\t\tif ( referenceType === 'IndexToDirect' ) {\r\n\r\n\t\t\tindexBuffer = UVNode.UVIndex.a;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdataSize: 2,\r\n\t\t\tbuffer: buffer,\r\n\t\t\tindices: indexBuffer,\r\n\t\t\tmappingType: mappingType,\r\n\t\t\treferenceType: referenceType\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\r\n\tparseVertexColors( ColorNode ) {\r\n\r\n\t\tconst mappingType = ColorNode.MappingInformationType;\r\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\r\n\t\tconst buffer = ColorNode.Colors.a;\r\n\t\tlet indexBuffer = [];\r\n\t\tif ( referenceType === 'IndexToDirect' ) {\r\n\r\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\r\n\r\n\t\t\tc.fromArray( buffer, i ).convertSRGBToLinear().toArray( buffer, i );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdataSize: 4,\r\n\t\t\tbuffer: buffer,\r\n\t\t\tindices: indexBuffer,\r\n\t\t\tmappingType: mappingType,\r\n\t\t\treferenceType: referenceType\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\r\n\tparseMaterialIndices( MaterialNode ) {\r\n\r\n\t\tconst mappingType = MaterialNode.MappingInformationType;\r\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\r\n\r\n\t\tif ( mappingType === 'NoMappingInformation' ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdataSize: 1,\r\n\t\t\t\tbuffer: [ 0 ],\r\n\t\t\t\tindices: [ 0 ],\r\n\t\t\t\tmappingType: 'AllSame',\r\n\t\t\t\treferenceType: referenceType\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\r\n\r\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\r\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\r\n\t\t// for conforming with the other functions we've written for other data.\r\n\t\tconst materialIndices = [];\r\n\r\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\r\n\r\n\t\t\tmaterialIndices.push( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdataSize: 1,\r\n\t\t\tbuffer: materialIndexBuffer,\r\n\t\t\tindices: materialIndices,\r\n\t\t\tmappingType: mappingType,\r\n\t\t\treferenceType: referenceType\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\r\n\tparseNurbsGeometry( geoNode ) {\r\n\r\n\t\tconst order = parseInt( geoNode.Order );\r\n\r\n\t\tif ( isNaN( order ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\r\n\t\t\treturn new BufferGeometry();\r\n\r\n\t\t}\r\n\r\n\t\tconst degree = order - 1;\r\n\r\n\t\tconst knots = geoNode.KnotVector.a;\r\n\t\tconst controlPoints = [];\r\n\t\tconst pointsValues = geoNode.Points.a;\r\n\r\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\r\n\r\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\r\n\r\n\t\t}\r\n\r\n\t\tlet startKnot, endKnot;\r\n\r\n\t\tif ( geoNode.Form === 'Closed' ) {\r\n\r\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\r\n\r\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\r\n\r\n\t\t\tstartKnot = degree;\r\n\t\t\tendKnot = knots.length - 1 - startKnot;\r\n\r\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\r\n\r\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\r\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\r\n\r\n\t\treturn new BufferGeometry().setFromPoints( points );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// parse animation data from FBXTree\r\nclass AnimationParser {\r\n\r\n\t// take raw animation clips and turn them into three.js animation clips\r\n\tparse() {\r\n\r\n\t\tconst animationClips = [];\r\n\r\n\t\tconst rawClips = this.parseClips();\r\n\r\n\t\tif ( rawClips !== undefined ) {\r\n\r\n\t\t\tfor ( const key in rawClips ) {\r\n\r\n\t\t\t\tconst rawClip = rawClips[ key ];\r\n\r\n\t\t\t\tconst clip = this.addClip( rawClip );\r\n\r\n\t\t\t\tanimationClips.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn animationClips;\r\n\r\n\t}\r\n\r\n\tparseClips() {\r\n\r\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\r\n\t\t// if this is undefined we can safely assume there are no animations\r\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\r\n\r\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\r\n\r\n\t\tthis.parseAnimationCurves( curveNodesMap );\r\n\r\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\r\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\r\n\r\n\t\treturn rawClips;\r\n\r\n\t}\r\n\r\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\r\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\r\n\t// and is referenced by an AnimationLayer\r\n\tparseAnimationCurveNodes() {\r\n\r\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\r\n\r\n\t\tconst curveNodesMap = new Map();\r\n\r\n\t\tfor ( const nodeID in rawCurveNodes ) {\r\n\r\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\r\n\r\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\r\n\r\n\t\t\t\tconst curveNode = {\r\n\r\n\t\t\t\t\tid: rawCurveNode.id,\r\n\t\t\t\t\tattr: rawCurveNode.attrName,\r\n\t\t\t\t\tcurves: {},\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn curveNodesMap;\r\n\r\n\t}\r\n\r\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\r\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\r\n\t// axis ( e.g. times and values of x rotation)\r\n\tparseAnimationCurves( curveNodesMap ) {\r\n\r\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\r\n\r\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\r\n\t\t// e.g. position times: [0, 0.4, 0. 8]\r\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\r\n\t\t// clearly, this should be optimised to\r\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\r\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\r\n\r\n\t\tfor ( const nodeID in rawCurves ) {\r\n\r\n\t\t\tconst animationCurve = {\r\n\r\n\t\t\t\tid: rawCurves[ nodeID ].id,\r\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\r\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconst relationships = connections.get( animationCurve.id );\r\n\r\n\t\t\tif ( relationships !== undefined ) {\r\n\r\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\r\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\r\n\r\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\r\n\r\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\r\n\r\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\r\n\r\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\r\n\r\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\r\n\r\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\r\n\r\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\r\n\r\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\r\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\r\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\r\n\tparseAnimationLayers( curveNodesMap ) {\r\n\r\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\r\n\r\n\t\tconst layersMap = new Map();\r\n\r\n\t\tfor ( const nodeID in rawLayers ) {\r\n\r\n\t\t\tconst layerCurveNodes = [];\r\n\r\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\r\n\r\n\t\t\tif ( connection !== undefined ) {\r\n\r\n\t\t\t\t// all the animationCurveNodes used in the layer\r\n\t\t\t\tconst children = connection.children;\r\n\r\n\t\t\t\tchildren.forEach( function ( child, i ) {\r\n\r\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\r\n\r\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\r\n\r\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\r\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\r\n\r\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\r\n\r\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\r\n\r\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst node = {\r\n\r\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\r\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\r\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\r\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\r\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\r\n\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\r\n\r\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\r\n\t\t\t\t\t\t\t\t\t// animation value as well\r\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\r\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\r\n\r\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\r\n\r\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\r\n\r\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\r\n\r\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\r\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\r\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\r\n\r\n\t\t\t\t\t\t\t\tconst node = {\r\n\r\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\r\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\r\n\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn layersMap;\r\n\r\n\t}\r\n\r\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\r\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\r\n\tparseAnimStacks( layersMap ) {\r\n\r\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\r\n\r\n\t\t// connect the stacks (clips) up to the layers\r\n\t\tconst rawClips = {};\r\n\r\n\t\tfor ( const nodeID in rawStacks ) {\r\n\r\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\r\n\r\n\t\t\tif ( children.length > 1 ) {\r\n\r\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\r\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\r\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\r\n\r\n\t\t\trawClips[ nodeID ] = {\r\n\r\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\r\n\t\t\t\tlayer: layer,\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn rawClips;\r\n\r\n\t}\r\n\r\n\taddClip( rawClip ) {\r\n\r\n\t\tlet tracks = [];\r\n\r\n\t\tconst scope = this;\r\n\t\trawClip.layer.forEach( function ( rawTracks ) {\r\n\r\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\r\n\r\n\t\t} );\r\n\r\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\r\n\r\n\t}\r\n\r\n\tgenerateTracks( rawTracks ) {\r\n\r\n\t\tconst tracks = [];\r\n\r\n\t\tlet initialPosition = new Vector3();\r\n\t\tlet initialRotation = new Quaternion();\r\n\t\tlet initialScale = new Vector3();\r\n\r\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\r\n\r\n\t\tinitialPosition = initialPosition.toArray();\r\n\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\r\n\t\tinitialScale = initialScale.toArray();\r\n\r\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\r\n\r\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\r\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\r\n\r\n\t\t}\r\n\r\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\r\n\r\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\r\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\r\n\r\n\t\t}\r\n\r\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\r\n\r\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\r\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\r\n\r\n\t\t}\r\n\r\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\r\n\r\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\r\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\r\n\r\n\t\t}\r\n\r\n\t\treturn tracks;\r\n\r\n\t}\r\n\r\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\r\n\r\n\t\tconst times = this.getTimesForAllAxes( curves );\r\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\r\n\r\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\r\n\r\n\t}\r\n\r\n\tgenerateRotationTrack( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\r\n\r\n\t\tif ( curves.x !== undefined ) {\r\n\r\n\t\t\tthis.interpolateRotations( curves.x );\r\n\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\r\n\r\n\t\t}\r\n\r\n\t\tif ( curves.y !== undefined ) {\r\n\r\n\t\t\tthis.interpolateRotations( curves.y );\r\n\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\r\n\r\n\t\t}\r\n\r\n\t\tif ( curves.z !== undefined ) {\r\n\r\n\t\t\tthis.interpolateRotations( curves.z );\r\n\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\r\n\r\n\t\t}\r\n\r\n\t\tconst times = this.getTimesForAllAxes( curves );\r\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\r\n\r\n\t\tif ( preRotation !== undefined ) {\r\n\r\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\r\n\t\t\tpreRotation.push( eulerOrder );\r\n\r\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\r\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\r\n\r\n\t\t}\r\n\r\n\t\tif ( postRotation !== undefined ) {\r\n\r\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\r\n\t\t\tpostRotation.push( eulerOrder );\r\n\r\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\r\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\r\n\r\n\t\t}\r\n\r\n\t\tconst quaternion = new Quaternion();\r\n\t\tconst euler = new Euler();\r\n\r\n\t\tconst quaternionValues = [];\r\n\r\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\r\n\r\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\r\n\r\n\t\t\tquaternion.setFromEuler( euler );\r\n\r\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\r\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\r\n\r\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\r\n\r\n\t\t}\r\n\r\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\r\n\r\n\t}\r\n\r\n\tgenerateMorphTrack( rawTracks ) {\r\n\r\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\r\n\t\tconst values = curves.values.map( function ( val ) {\r\n\r\n\t\t\treturn val / 100;\r\n\r\n\t\t} );\r\n\r\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\r\n\r\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\r\n\r\n\t}\r\n\r\n\t// For all animated objects, times are defined separately for each axis\r\n\t// Here we'll combine the times into one sorted array without duplicates\r\n\tgetTimesForAllAxes( curves ) {\r\n\r\n\t\tlet times = [];\r\n\r\n\t\t// first join together the times for each axis, if defined\r\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\r\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\r\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\r\n\r\n\t\t// then sort them\r\n\t\ttimes = times.sort( function ( a, b ) {\r\n\r\n\t\t\treturn a - b;\r\n\r\n\t\t} );\r\n\r\n\t\t// and remove duplicates\r\n\t\tif ( times.length > 1 ) {\r\n\r\n\t\t\tlet targetIndex = 1;\r\n\t\t\tlet lastValue = times[ 0 ];\r\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\r\n\r\n\t\t\t\tconst currentValue = times[ i ];\r\n\t\t\t\tif ( currentValue !== lastValue ) {\r\n\r\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\r\n\t\t\t\t\tlastValue = currentValue;\r\n\t\t\t\t\ttargetIndex ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttimes = times.slice( 0, targetIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn times;\r\n\r\n\t}\r\n\r\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\r\n\r\n\t\tconst prevValue = initialValue;\r\n\r\n\t\tconst values = [];\r\n\r\n\t\tlet xIndex = - 1;\r\n\t\tlet yIndex = - 1;\r\n\t\tlet zIndex = - 1;\r\n\r\n\t\ttimes.forEach( function ( time ) {\r\n\r\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\r\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\r\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\r\n\r\n\t\t\t// if there is an x value defined for this frame, use that\r\n\t\t\tif ( xIndex !== - 1 ) {\r\n\r\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\r\n\t\t\t\tvalues.push( xValue );\r\n\t\t\t\tprevValue[ 0 ] = xValue;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// otherwise use the x value from the previous frame\r\n\t\t\t\tvalues.push( prevValue[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( yIndex !== - 1 ) {\r\n\r\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\r\n\t\t\t\tvalues.push( yValue );\r\n\t\t\t\tprevValue[ 1 ] = yValue;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalues.push( prevValue[ 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( zIndex !== - 1 ) {\r\n\r\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\r\n\t\t\t\tvalues.push( zValue );\r\n\t\t\t\tprevValue[ 2 ] = zValue;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalues.push( prevValue[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn values;\r\n\r\n\t}\r\n\r\n\t// Rotations are defined as Euler angles which can have values  of any size\r\n\t// These will be converted to quaternions which don't support values greater than\r\n\t// PI, so we'll interpolate large rotations\r\n\tinterpolateRotations( curve ) {\r\n\r\n\t\tfor ( let i = 1; i < curve.values.length; i ++ ) {\r\n\r\n\t\t\tconst initialValue = curve.values[ i - 1 ];\r\n\t\t\tconst valuesSpan = curve.values[ i ] - initialValue;\r\n\r\n\t\t\tconst absoluteSpan = Math.abs( valuesSpan );\r\n\r\n\t\t\tif ( absoluteSpan >= 180 ) {\r\n\r\n\t\t\t\tconst numSubIntervals = absoluteSpan / 180;\r\n\r\n\t\t\t\tconst step = valuesSpan / numSubIntervals;\r\n\t\t\t\tlet nextValue = initialValue + step;\r\n\r\n\t\t\t\tconst initialTime = curve.times[ i - 1 ];\r\n\t\t\t\tconst timeSpan = curve.times[ i ] - initialTime;\r\n\t\t\t\tconst interval = timeSpan / numSubIntervals;\r\n\t\t\t\tlet nextTime = initialTime + interval;\r\n\r\n\t\t\t\tconst interpolatedTimes = [];\r\n\t\t\t\tconst interpolatedValues = [];\r\n\r\n\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\r\n\r\n\t\t\t\t\tinterpolatedTimes.push( nextTime );\r\n\t\t\t\t\tnextTime += interval;\r\n\r\n\t\t\t\t\tinterpolatedValues.push( nextValue );\r\n\t\t\t\t\tnextValue += step;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\r\n\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// parse an FBX file in ASCII format\r\nclass TextParser {\r\n\r\n\tgetPrevNode() {\r\n\r\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\r\n\r\n\t}\r\n\r\n\tgetCurrentNode() {\r\n\r\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\r\n\r\n\t}\r\n\r\n\tgetCurrentProp() {\r\n\r\n\t\treturn this.currentProp;\r\n\r\n\t}\r\n\r\n\tpushStack( node ) {\r\n\r\n\t\tthis.nodeStack.push( node );\r\n\t\tthis.currentIndent += 1;\r\n\r\n\t}\r\n\r\n\tpopStack() {\r\n\r\n\t\tthis.nodeStack.pop();\r\n\t\tthis.currentIndent -= 1;\r\n\r\n\t}\r\n\r\n\tsetCurrentProp( val, name ) {\r\n\r\n\t\tthis.currentProp = val;\r\n\t\tthis.currentPropName = name;\r\n\r\n\t}\r\n\r\n\tparse( text ) {\r\n\r\n\t\tthis.currentIndent = 0;\r\n\r\n\t\tthis.allNodes = new FBXTree();\r\n\t\tthis.nodeStack = [];\r\n\t\tthis.currentProp = [];\r\n\t\tthis.currentPropName = '';\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst split = text.split( /[\\r\\n]+/ );\r\n\r\n\t\tsplit.forEach( function ( line, i ) {\r\n\r\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\r\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\r\n\r\n\t\t\tif ( matchComment || matchEmpty ) return;\r\n\r\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\r\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\r\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\r\n\r\n\t\t\tif ( matchBeginning ) {\r\n\r\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\r\n\r\n\t\t\t} else if ( matchProperty ) {\r\n\r\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\r\n\r\n\t\t\t} else if ( matchEnd ) {\r\n\r\n\t\t\t\tscope.popStack();\r\n\r\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\r\n\r\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\r\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\r\n\t\t\t\tscope.parseNodePropertyContinued( line );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn this.allNodes;\r\n\r\n\t}\r\n\r\n\tparseNodeBegin( line, property ) {\r\n\r\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\r\n\r\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\r\n\r\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\r\n\r\n\t\t} );\r\n\r\n\t\tconst node = { name: nodeName };\r\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\r\n\r\n\t\tconst currentNode = this.getCurrentNode();\r\n\r\n\t\t// a top node\r\n\t\tif ( this.currentIndent === 0 ) {\r\n\r\n\t\t\tthis.allNodes.add( nodeName, node );\r\n\r\n\t\t} else { // a subnode\r\n\r\n\t\t\t// if the subnode already exists, append it\r\n\t\t\tif ( nodeName in currentNode ) {\r\n\r\n\t\t\t\t// special case Pose needs PoseNodes as an array\r\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\r\n\r\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\r\n\r\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\r\n\r\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\r\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\r\n\r\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\r\n\r\n\t\t\t\tcurrentNode[ nodeName ] = {};\r\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\r\n\r\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\r\n\r\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\r\n\t\t\t\telse currentNode[ nodeName ] = node;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\r\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\r\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\r\n\r\n\t\tthis.pushStack( node );\r\n\r\n\t}\r\n\r\n\tparseNodeAttr( attrs ) {\r\n\r\n\t\tlet id = attrs[ 0 ];\r\n\r\n\t\tif ( attrs[ 0 ] !== '' ) {\r\n\r\n\t\t\tid = parseInt( attrs[ 0 ] );\r\n\r\n\t\t\tif ( isNaN( id ) ) {\r\n\r\n\t\t\t\tid = attrs[ 0 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet name = '', type = '';\r\n\r\n\t\tif ( attrs.length > 1 ) {\r\n\r\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\r\n\t\t\ttype = attrs[ 2 ];\r\n\r\n\t\t}\r\n\r\n\t\treturn { id: id, name: name, type: type };\r\n\r\n\t}\r\n\r\n\tparseNodeProperty( line, property, contentLine ) {\r\n\r\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\r\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\r\n\r\n\t\t// for special case: base64 image data follows \"Content: ,\" line\r\n\t\t//\tContent: ,\r\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\r\n\t\tif ( propName === 'Content' && propValue === ',' ) {\r\n\r\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\r\n\r\n\t\t}\r\n\r\n\t\tconst currentNode = this.getCurrentNode();\r\n\t\tconst parentName = currentNode.name;\r\n\r\n\t\tif ( parentName === 'Properties70' ) {\r\n\r\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Connections\r\n\t\tif ( propName === 'C' ) {\r\n\r\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\r\n\t\t\tconst from = parseInt( connProps[ 0 ] );\r\n\t\t\tconst to = parseInt( connProps[ 1 ] );\r\n\r\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\r\n\r\n\t\t\trest = rest.map( function ( elem ) {\r\n\r\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tpropName = 'connections';\r\n\t\t\tpropValue = [ from, to ];\r\n\t\t\tappend( propValue, rest );\r\n\r\n\t\t\tif ( currentNode[ propName ] === undefined ) {\r\n\r\n\t\t\t\tcurrentNode[ propName ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Node\r\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\r\n\r\n\t\t// connections\r\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\r\n\r\n\t\t\tcurrentNode[ propName ].push( propValue );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\r\n\t\t\telse currentNode.a = propValue;\r\n\r\n\t\t}\r\n\r\n\t\tthis.setCurrentProp( currentNode, propName );\r\n\r\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\r\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\r\n\r\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tparseNodePropertyContinued( line ) {\r\n\r\n\t\tconst currentNode = this.getCurrentNode();\r\n\r\n\t\tcurrentNode.a += line;\r\n\r\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\r\n\t\t// so convert the string to an array\r\n\t\tif ( line.slice( - 1 ) !== ',' ) {\r\n\r\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// parse \"Property70\"\r\n\tparseNodeSpecialProperty( line, propName, propValue ) {\r\n\r\n\t\t// split this\r\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\r\n\t\t// into array like below\r\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\r\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\r\n\r\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\r\n\r\n\t\t} );\r\n\r\n\t\tconst innerPropName = props[ 0 ];\r\n\t\tconst innerPropType1 = props[ 1 ];\r\n\t\tconst innerPropType2 = props[ 2 ];\r\n\t\tconst innerPropFlag = props[ 3 ];\r\n\t\tlet innerPropValue = props[ 4 ];\r\n\r\n\t\t// cast values where needed, otherwise leave as strings\r\n\t\tswitch ( innerPropType1 ) {\r\n\r\n\t\t\tcase 'int':\r\n\t\t\tcase 'enum':\r\n\t\t\tcase 'bool':\r\n\t\t\tcase 'ULongLong':\r\n\t\t\tcase 'double':\r\n\t\t\tcase 'Number':\r\n\t\t\tcase 'FieldOfView':\r\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Color':\r\n\t\t\tcase 'ColorRGB':\r\n\t\t\tcase 'Vector3D':\r\n\t\t\tcase 'Lcl_Translation':\r\n\t\t\tcase 'Lcl_Rotation':\r\n\t\t\tcase 'Lcl_Scaling':\r\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\t// CAUTION: these props must append to parent's parent\r\n\t\tthis.getPrevNode()[ innerPropName ] = {\r\n\r\n\t\t\t'type': innerPropType1,\r\n\t\t\t'type2': innerPropType2,\r\n\t\t\t'flag': innerPropFlag,\r\n\t\t\t'value': innerPropValue\r\n\r\n\t\t};\r\n\r\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Parse an FBX file in Binary format\r\nclass BinaryParser {\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tconst reader = new BinaryReader( buffer );\r\n\t\treader.skip( 23 ); // skip magic 23 bytes\r\n\r\n\t\tconst version = reader.getUint32();\r\n\r\n\t\tif ( version < 6400 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\r\n\r\n\t\t}\r\n\r\n\t\tconst allNodes = new FBXTree();\r\n\r\n\t\twhile ( ! this.endOfContent( reader ) ) {\r\n\r\n\t\t\tconst node = this.parseNode( reader, version );\r\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\r\n\r\n\t\t}\r\n\r\n\t\treturn allNodes;\r\n\r\n\t}\r\n\r\n\t// Check if reader has reached the end of content.\r\n\tendOfContent( reader ) {\r\n\r\n\t\t// footer size: 160bytes + 16-byte alignment padding\r\n\t\t// - 16bytes: magic\r\n\t\t// - padding til 16-byte alignment (at least 1byte?)\r\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\r\n\t\t// - 4bytes: magic\r\n\t\t// - 4bytes: version\r\n\t\t// - 120bytes: zero\r\n\t\t// - 16bytes: magic\r\n\t\tif ( reader.size() % 16 === 0 ) {\r\n\r\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// recursively parse nodes until the end of the file is reached\r\n\tparseNode( reader, version ) {\r\n\r\n\t\tconst node = {};\r\n\r\n\t\t// The first three data sizes depends on version.\r\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\r\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\r\n\r\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\r\n\r\n\t\tconst nameLen = reader.getUint8();\r\n\t\tconst name = reader.getString( nameLen );\r\n\r\n\t\t// Regards this node as NULL-record if endOffset is zero\r\n\t\tif ( endOffset === 0 ) return null;\r\n\r\n\t\tconst propertyList = [];\r\n\r\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\r\n\r\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\r\n\r\n\t\t}\r\n\r\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\r\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\r\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\r\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\r\n\r\n\t\t// check if this node represents just a single property\r\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\r\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\r\n\r\n\t\twhile ( endOffset > reader.getOffset() ) {\r\n\r\n\t\t\tconst subNode = this.parseNode( reader, version );\r\n\r\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\r\n\r\n\t\t}\r\n\r\n\t\tnode.propertyList = propertyList; // raw property list used by parent\r\n\r\n\t\tif ( typeof id === 'number' ) node.id = id;\r\n\t\tif ( attrName !== '' ) node.attrName = attrName;\r\n\t\tif ( attrType !== '' ) node.attrType = attrType;\r\n\t\tif ( name !== '' ) node.name = name;\r\n\r\n\t\treturn node;\r\n\r\n\t}\r\n\r\n\tparseSubNode( name, node, subNode ) {\r\n\r\n\t\t// special case: child node is single property\r\n\t\tif ( subNode.singleProperty === true ) {\r\n\r\n\t\t\tconst value = subNode.propertyList[ 0 ];\r\n\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\t\tnode[ subNode.name ] = subNode;\r\n\r\n\t\t\t\tsubNode.a = value;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode[ subNode.name ] = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\r\n\r\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\r\n\t\t\t\tif ( i !== 0 ) array.push( property );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( node.connections === undefined ) {\r\n\r\n\t\t\t\tnode.connections = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnode.connections.push( array );\r\n\r\n\t\t} else if ( subNode.name === 'Properties70' ) {\r\n\r\n\t\t\tconst keys = Object.keys( subNode );\r\n\r\n\t\t\tkeys.forEach( function ( key ) {\r\n\r\n\t\t\t\tnode[ key ] = subNode[ key ];\r\n\r\n\t\t\t} );\r\n\r\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\r\n\r\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\r\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\r\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\r\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\r\n\t\t\tlet innerPropValue;\r\n\r\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\r\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\r\n\r\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\r\n\r\n\t\t\t\tinnerPropValue = [\r\n\t\t\t\t\tsubNode.propertyList[ 4 ],\r\n\t\t\t\t\tsubNode.propertyList[ 5 ],\r\n\t\t\t\t\tsubNode.propertyList[ 6 ]\r\n\t\t\t\t];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// this will be copied to parent, see above\r\n\t\t\tnode[ innerPropName ] = {\r\n\r\n\t\t\t\t'type': innerPropType1,\r\n\t\t\t\t'type2': innerPropType2,\r\n\t\t\t\t'flag': innerPropFlag,\r\n\t\t\t\t'value': innerPropValue\r\n\r\n\t\t\t};\r\n\r\n\t\t} else if ( node[ subNode.name ] === undefined ) {\r\n\r\n\t\t\tif ( typeof subNode.id === 'number' ) {\r\n\r\n\t\t\t\tnode[ subNode.name ] = {};\r\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode[ subNode.name ] = subNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( subNode.name === 'PoseNode' ) {\r\n\r\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\r\n\r\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode[ subNode.name ].push( subNode );\r\n\r\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\r\n\r\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tparseProperty( reader ) {\r\n\r\n\t\tconst type = reader.getString( 1 );\r\n\t\tlet length;\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 'C':\r\n\t\t\t\treturn reader.getBoolean();\r\n\r\n\t\t\tcase 'D':\r\n\t\t\t\treturn reader.getFloat64();\r\n\r\n\t\t\tcase 'F':\r\n\t\t\t\treturn reader.getFloat32();\r\n\r\n\t\t\tcase 'I':\r\n\t\t\t\treturn reader.getInt32();\r\n\r\n\t\t\tcase 'L':\r\n\t\t\t\treturn reader.getInt64();\r\n\r\n\t\t\tcase 'R':\r\n\t\t\t\tlength = reader.getUint32();\r\n\t\t\t\treturn reader.getArrayBuffer( length );\r\n\r\n\t\t\tcase 'S':\r\n\t\t\t\tlength = reader.getUint32();\r\n\t\t\t\treturn reader.getString( length );\r\n\r\n\t\t\tcase 'Y':\r\n\t\t\t\treturn reader.getInt16();\r\n\r\n\t\t\tcase 'b':\r\n\t\t\tcase 'c':\r\n\t\t\tcase 'd':\r\n\t\t\tcase 'f':\r\n\t\t\tcase 'i':\r\n\t\t\tcase 'l':\r\n\r\n\t\t\t\tconst arrayLength = reader.getUint32();\r\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\r\n\t\t\t\tconst compressedLength = reader.getUint32();\r\n\r\n\t\t\t\tif ( encoding === 0 ) {\r\n\r\n\t\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'f':\r\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\r\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 'b':\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\r\n\r\n\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\r\n\r\n\t\t\t\t\tcase 'f':\r\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\r\n\r\n\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\r\n\r\n\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass BinaryReader {\r\n\r\n\tconstructor( buffer, littleEndian ) {\r\n\r\n\t\tthis.dv = new DataView( buffer );\r\n\t\tthis.offset = 0;\r\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\r\n\t\tthis._textDecoder = new TextDecoder();\r\n\r\n\t}\r\n\r\n\tgetOffset() {\r\n\r\n\t\treturn this.offset;\r\n\r\n\t}\r\n\r\n\tsize() {\r\n\r\n\t\treturn this.dv.buffer.byteLength;\r\n\r\n\t}\r\n\r\n\tskip( length ) {\r\n\r\n\t\tthis.offset += length;\r\n\r\n\t}\r\n\r\n\t// seems like true/false representation depends on exporter.\r\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\r\n\t// then sees LSB.\r\n\tgetBoolean() {\r\n\r\n\t\treturn ( this.getUint8() & 1 ) === 1;\r\n\r\n\t}\r\n\r\n\tgetBooleanArray( size ) {\r\n\r\n\t\tconst a = [];\r\n\r\n\t\tfor ( let i = 0; i < size; i ++ ) {\r\n\r\n\t\t\ta.push( this.getBoolean() );\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\tgetUint8() {\r\n\r\n\t\tconst value = this.dv.getUint8( this.offset );\r\n\t\tthis.offset += 1;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tgetInt16() {\r\n\r\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\r\n\t\tthis.offset += 2;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tgetInt32() {\r\n\r\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\r\n\t\tthis.offset += 4;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tgetInt32Array( size ) {\r\n\r\n\t\tconst a = [];\r\n\r\n\t\tfor ( let i = 0; i < size; i ++ ) {\r\n\r\n\t\t\ta.push( this.getInt32() );\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\tgetUint32() {\r\n\r\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\r\n\t\tthis.offset += 4;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\t// JavaScript doesn't support 64-bit integer so calculate this here\r\n\t// 1 << 32 will return 1 so using multiply operation instead here.\r\n\t// There's a possibility that this method returns wrong value if the value\r\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\r\n\t// TODO: safely handle 64-bit integer\r\n\tgetInt64() {\r\n\r\n\t\tlet low, high;\r\n\r\n\t\tif ( this.littleEndian ) {\r\n\r\n\t\t\tlow = this.getUint32();\r\n\t\t\thigh = this.getUint32();\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = this.getUint32();\r\n\t\t\tlow = this.getUint32();\r\n\r\n\t\t}\r\n\r\n\t\t// calculate negative value\r\n\t\tif ( high & 0x80000000 ) {\r\n\r\n\t\t\thigh = ~ high & 0xFFFFFFFF;\r\n\t\t\tlow = ~ low & 0xFFFFFFFF;\r\n\r\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\r\n\r\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\r\n\r\n\t\t\treturn - ( high * 0x100000000 + low );\r\n\r\n\t\t}\r\n\r\n\t\treturn high * 0x100000000 + low;\r\n\r\n\t}\r\n\r\n\tgetInt64Array( size ) {\r\n\r\n\t\tconst a = [];\r\n\r\n\t\tfor ( let i = 0; i < size; i ++ ) {\r\n\r\n\t\t\ta.push( this.getInt64() );\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\t// Note: see getInt64() comment\r\n\tgetUint64() {\r\n\r\n\t\tlet low, high;\r\n\r\n\t\tif ( this.littleEndian ) {\r\n\r\n\t\t\tlow = this.getUint32();\r\n\t\t\thigh = this.getUint32();\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = this.getUint32();\r\n\t\t\tlow = this.getUint32();\r\n\r\n\t\t}\r\n\r\n\t\treturn high * 0x100000000 + low;\r\n\r\n\t}\r\n\r\n\tgetFloat32() {\r\n\r\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\r\n\t\tthis.offset += 4;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tgetFloat32Array( size ) {\r\n\r\n\t\tconst a = [];\r\n\r\n\t\tfor ( let i = 0; i < size; i ++ ) {\r\n\r\n\t\t\ta.push( this.getFloat32() );\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\tgetFloat64() {\r\n\r\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\r\n\t\tthis.offset += 8;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tgetFloat64Array( size ) {\r\n\r\n\t\tconst a = [];\r\n\r\n\t\tfor ( let i = 0; i < size; i ++ ) {\r\n\r\n\t\t\ta.push( this.getFloat64() );\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\tgetArrayBuffer( size ) {\r\n\r\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\r\n\t\tthis.offset += size;\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tgetString( size ) {\r\n\r\n\t\tconst start = this.offset;\r\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\r\n\r\n\t\tthis.skip( size );\r\n\r\n\t\tconst nullByte = a.indexOf( 0 );\r\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\r\n\r\n\t\treturn this._textDecoder.decode( a );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\r\n// and BinaryParser( FBX Binary format)\r\nclass FBXTree {\r\n\r\n\tadd( key, val ) {\r\n\r\n\t\tthis[ key ] = val;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// ************** UTILITY FUNCTIONS **************\r\n\r\nfunction isFbxFormatBinary( buffer ) {\r\n\r\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\r\n\r\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\r\n\r\n}\r\n\r\nfunction isFbxFormatASCII( text ) {\r\n\r\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\r\n\r\n\tlet cursor = 0;\r\n\r\n\tfunction read( offset ) {\r\n\r\n\t\tconst result = text[ offset - 1 ];\r\n\t\ttext = text.slice( cursor + offset );\r\n\t\tcursor ++;\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\r\n\r\n\t\tconst num = read( 1 );\r\n\t\tif ( num === CORRECT[ i ] ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction getFbxVersion( text ) {\r\n\r\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\r\n\tconst match = text.match( versionRegExp );\r\n\r\n\tif ( match ) {\r\n\r\n\t\tconst version = parseInt( match[ 1 ] );\r\n\t\treturn version;\r\n\r\n\t}\r\n\r\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\r\n\r\n}\r\n\r\n// Converts FBX ticks into real time seconds.\r\nfunction convertFBXTimeToSeconds( time ) {\r\n\r\n\treturn time / 46186158000;\r\n\r\n}\r\n\r\nconst dataArray = [];\r\n\r\n// extracts the data from the correct position in the FBX array based on indexing type\r\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\r\n\r\n\tlet index;\r\n\r\n\tswitch ( infoObject.mappingType ) {\r\n\r\n\t\tcase 'ByPolygonVertex' :\r\n\t\t\tindex = polygonVertexIndex;\r\n\t\t\tbreak;\r\n\t\tcase 'ByPolygon' :\r\n\t\t\tindex = polygonIndex;\r\n\t\t\tbreak;\r\n\t\tcase 'ByVertice' :\r\n\t\t\tindex = vertexIndex;\r\n\t\t\tbreak;\r\n\t\tcase 'AllSame' :\r\n\t\t\tindex = infoObject.indices[ 0 ];\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\r\n\r\n\t}\r\n\r\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\r\n\r\n\tconst from = index * infoObject.dataSize;\r\n\tconst to = from + infoObject.dataSize;\r\n\r\n\treturn slice( dataArray, infoObject.buffer, from, to );\r\n\r\n}\r\n\r\nconst tempEuler = new Euler();\r\nconst tempVec = new Vector3();\r\n\r\n// generate transformation from FBX transform data\r\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\r\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\r\nfunction generateTransform( transformData ) {\r\n\r\n\tconst lTranslationM = new Matrix4();\r\n\tconst lPreRotationM = new Matrix4();\r\n\tconst lRotationM = new Matrix4();\r\n\tconst lPostRotationM = new Matrix4();\r\n\r\n\tconst lScalingM = new Matrix4();\r\n\tconst lScalingPivotM = new Matrix4();\r\n\tconst lScalingOffsetM = new Matrix4();\r\n\tconst lRotationOffsetM = new Matrix4();\r\n\tconst lRotationPivotM = new Matrix4();\r\n\r\n\tconst lParentGX = new Matrix4();\r\n\tconst lParentLX = new Matrix4();\r\n\tconst lGlobalT = new Matrix4();\r\n\r\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\r\n\r\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\r\n\r\n\tif ( transformData.preRotation ) {\r\n\r\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\r\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\r\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\r\n\r\n\t}\r\n\r\n\tif ( transformData.rotation ) {\r\n\r\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\r\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\r\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\r\n\r\n\t}\r\n\r\n\tif ( transformData.postRotation ) {\r\n\r\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\r\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\r\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\r\n\t\tlPostRotationM.invert();\r\n\r\n\t}\r\n\r\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\r\n\r\n\t// Pivots and offsets\r\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\r\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\r\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\r\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\r\n\r\n\t// parent transform\r\n\tif ( transformData.parentMatrixWorld ) {\r\n\r\n\t\tlParentLX.copy( transformData.parentMatrix );\r\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\r\n\r\n\t}\r\n\r\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\r\n\t// Global Rotation\r\n\tconst lParentGRM = new Matrix4();\r\n\tlParentGRM.extractRotation( lParentGX );\r\n\r\n\t// Global Shear*Scaling\r\n\tconst lParentTM = new Matrix4();\r\n\tlParentTM.copyPosition( lParentGX );\r\n\r\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\r\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\r\n\tconst lLSM = lScalingM;\r\n\r\n\tconst lGlobalRS = new Matrix4();\r\n\r\n\tif ( inheritType === 0 ) {\r\n\r\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\r\n\r\n\t} else if ( inheritType === 1 ) {\r\n\r\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\r\n\r\n\t} else {\r\n\r\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\r\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\r\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\r\n\r\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\r\n\r\n\t}\r\n\r\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\r\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\r\n\t// Calculate the local transform matrix\r\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\r\n\r\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\r\n\r\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\r\n\tlGlobalT.copyPosition( lGlobalTranslation );\r\n\r\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\r\n\r\n\t// from global to local\r\n\tlTransform.premultiply( lParentGX.invert() );\r\n\r\n\treturn lTransform;\r\n\r\n}\r\n\r\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\r\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\r\nfunction getEulerOrder( order ) {\r\n\r\n\torder = order || 0;\r\n\r\n\tconst enums = [\r\n\t\t'ZYX', // -> XYZ extrinsic\r\n\t\t'YZX', // -> XZY extrinsic\r\n\t\t'XZY', // -> YZX extrinsic\r\n\t\t'ZXY', // -> YXZ extrinsic\r\n\t\t'YXZ', // -> ZXY extrinsic\r\n\t\t'XYZ', // -> ZYX extrinsic\r\n\t\t//'SphericXYZ', // not possible to support\r\n\t];\r\n\r\n\tif ( order === 6 ) {\r\n\r\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\r\n\t\treturn enums[ 0 ];\r\n\r\n\t}\r\n\r\n\treturn enums[ order ];\r\n\r\n}\r\n\r\n// Parses comma separated list of numbers and returns them an array.\r\n// Used internally by the TextParser\r\nfunction parseNumberArray( value ) {\r\n\r\n\tconst array = value.split( ',' ).map( function ( val ) {\r\n\r\n\t\treturn parseFloat( val );\r\n\r\n\t} );\r\n\r\n\treturn array;\r\n\r\n}\r\n\r\nfunction convertArrayBufferToString( buffer, from, to ) {\r\n\r\n\tif ( from === undefined ) from = 0;\r\n\tif ( to === undefined ) to = buffer.byteLength;\r\n\r\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\r\n\r\n}\r\n\r\nfunction append( a, b ) {\r\n\r\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\r\n\r\n\t\ta[ j ] = b[ i ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction slice( a, b, from, to ) {\r\n\r\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\r\n\r\n\t\ta[ j ] = b[ i ];\r\n\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n// inject array a2 into array a1 at index\r\nfunction inject( a1, index, a2 ) {\r\n\r\n\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\r\n\r\n}\r\n\r\nexport { FBXLoader };\r\n", "import {\r\n\tBox2,\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tLoader,\r\n\tMatrix3,\r\n\tPath,\r\n\tShape,\r\n\tShapePath,\r\n\tShapeUtils,\r\n\tSRGBColorSpace,\r\n\tVector2,\r\n\tVector3\r\n} from 'three';\r\n\r\nconst COLOR_SPACE_SVG = SRGBColorSpace;\r\n\r\nclass SVGLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\t// Default dots per inch\r\n\t\tthis.defaultDPI = 90;\r\n\r\n\t\t// Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\r\n\t\tthis.defaultUnit = 'px';\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( text ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tfunction parseNode( node, style ) {\r\n\r\n\t\t\tif ( node.nodeType !== 1 ) return;\r\n\r\n\t\t\tconst transform = getNodeTransform( node );\r\n\r\n\t\t\tlet isDefsNode = false;\r\n\r\n\t\t\tlet path = null;\r\n\r\n\t\t\tswitch ( node.nodeName ) {\r\n\r\n\t\t\t\tcase 'svg':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'style':\r\n\t\t\t\t\tparseCSSStylesheet( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'g':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'path':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tif ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rect':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseRectNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'polygon':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parsePolygonNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'polyline':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parsePolylineNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'circle':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseCircleNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ellipse':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseEllipseNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'line':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseLineNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'defs':\r\n\t\t\t\t\tisDefsNode = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'use':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\r\n\t\t\t\t\tconst href = node.getAttributeNS( 'http://www.w3.org/1999/xlink', 'href' ) || '';\r\n\t\t\t\t\tconst usedNodeId = href.substring( 1 );\r\n\t\t\t\t\tconst usedNode = node.viewportElement.getElementById( usedNodeId );\r\n\t\t\t\t\tif ( usedNode ) {\r\n\r\n\t\t\t\t\t\tparseNode( usedNode, style );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// console.log( node );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( path ) {\r\n\r\n\t\t\t\tif ( style.fill !== undefined && style.fill !== 'none' ) {\r\n\r\n\t\t\t\t\tpath.color.setStyle( style.fill, COLOR_SPACE_SVG );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttransformPath( path, currentTransform );\r\n\r\n\t\t\t\tpaths.push( path );\r\n\r\n\t\t\t\tpath.userData = { node: node, style: style };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst childNodes = node.childNodes;\r\n\r\n\t\t\tfor ( let i = 0; i < childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst node = childNodes[ i ];\r\n\r\n\t\t\t\tif ( isDefsNode && node.nodeName !== 'style' && node.nodeName !== 'defs' ) {\r\n\r\n\t\t\t\t\t// Ignore everything in defs except CSS style definitions\r\n\t\t\t\t\t// and nested defs, because it is OK by the standard to have\r\n\t\t\t\t\t// <style/> there.\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparseNode( node, style );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( transform ) {\r\n\r\n\t\t\t\ttransformStack.pop();\r\n\r\n\t\t\t\tif ( transformStack.length > 0 ) {\r\n\r\n\t\t\t\t\tcurrentTransform.copy( transformStack[ transformStack.length - 1 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentTransform.identity();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePathNode( node ) {\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\r\n\t\t\tconst point = new Vector2();\r\n\t\t\tconst control = new Vector2();\r\n\r\n\t\t\tconst firstPoint = new Vector2();\r\n\t\t\tlet isFirstPoint = true;\r\n\t\t\tlet doSetFirstPoint = false;\r\n\r\n\t\t\tconst d = node.getAttribute( 'd' );\r\n\r\n\t\t\tif ( d === '' || d === 'none' ) return null;\r\n\r\n\t\t\t// console.log( d );\r\n\r\n\t\t\tconst commands = d.match( /[a-df-z][^a-df-z]*/ig );\r\n\r\n\t\t\tfor ( let i = 0, l = commands.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst command = commands[ i ];\r\n\r\n\t\t\t\tconst type = command.charAt( 0 );\r\n\t\t\t\tconst data = command.slice( 1 ).trim();\r\n\r\n\t\t\t\tif ( isFirstPoint === true ) {\r\n\r\n\t\t\t\t\tdoSetFirstPoint = true;\r\n\t\t\t\t\tisFirstPoint = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet numbers;\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 'M':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'H':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'V':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'L':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'C':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 6 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 4 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 5 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 3 ];\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 4 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 5 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'S':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\r\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Q':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'T':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tconst rx = getReflection( point.x, control.x );\r\n\t\t\t\t\t\t\tconst ry = getReflection( point.y, control.y );\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\trx,\r\n\t\t\t\t\t\t\t\try,\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = rx;\r\n\t\t\t\t\t\t\tcontrol.y = ry;\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'A':\r\n\t\t\t\t\t\tnumbers = parseFloats( data, [ 3, 4 ], 7 );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 7 ) {\r\n\r\n\t\t\t\t\t\t\t// skip command if start point == end point\r\n\t\t\t\t\t\t\tif ( numbers[ j + 5 ] == point.x && numbers[ j + 6 ] == point.y ) continue;\r\n\r\n\t\t\t\t\t\t\tconst start = point.clone();\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 5 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 6 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tparseArcCommand(\r\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'h':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 6 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 4 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 5 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 3 ];\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 4 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 5 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\r\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'q':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\tnumbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tconst rx = getReflection( point.x, control.x );\r\n\t\t\t\t\t\t\tconst ry = getReflection( point.y, control.y );\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\trx,\r\n\t\t\t\t\t\t\t\try,\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = rx;\r\n\t\t\t\t\t\t\tcontrol.y = ry;\r\n\t\t\t\t\t\t\tpoint.x = point.x + numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = point.y + numbers[ j + 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\tnumbers = parseFloats( data, [ 3, 4 ], 7 );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 7 ) {\r\n\r\n\t\t\t\t\t\t\t// skip command if no displacement\r\n\t\t\t\t\t\t\tif ( numbers[ j + 5 ] == 0 && numbers[ j + 6 ] == 0 ) continue;\r\n\r\n\t\t\t\t\t\t\tconst start = point.clone();\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 5 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 6 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tparseArcCommand(\r\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Z':\r\n\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\r\n\r\n\t\t\t\t\t\tif ( path.currentPath.curves.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\t// Reset point to beginning of Path\r\n\t\t\t\t\t\t\tpoint.copy( firstPoint );\r\n\t\t\t\t\t\t\tpath.currentPath.currentPoint.copy( point );\r\n\t\t\t\t\t\t\tisFirstPoint = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( command );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\r\n\r\n\t\t\t\tdoSetFirstPoint = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCSSStylesheet( node ) {\r\n\r\n\t\t\tif ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\r\n\r\n\t\t\tfor ( let i = 0; i < node.sheet.cssRules.length; i ++ ) {\r\n\r\n\t\t\t\tconst stylesheet = node.sheet.cssRules[ i ];\r\n\r\n\t\t\t\tif ( stylesheet.type !== 1 ) continue;\r\n\r\n\t\t\t\tconst selectorList = stylesheet.selectorText\r\n\t\t\t\t\t.split( /,/gm )\r\n\t\t\t\t\t.filter( Boolean )\r\n\t\t\t\t\t.map( i => i.trim() );\r\n\r\n\t\t\t\tfor ( let j = 0; j < selectorList.length; j ++ ) {\r\n\r\n\t\t\t\t\t// Remove empty rules\r\n\t\t\t\t\tconst definitions = Object.fromEntries(\r\n\t\t\t\t\t\tObject.entries( stylesheet.style ).filter( ( [ , v ] ) => v !== '' )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tstylesheets[ selectorList[ j ] ] = Object.assign(\r\n\t\t\t\t\t\tstylesheets[ selectorList[ j ] ] || {},\r\n\t\t\t\t\t\tdefinitions\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\r\n\t\t * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\r\n\t\t * From\r\n\t\t * rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n\t\t * To\r\n\t\t * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\r\n\t\t */\r\n\r\n\t\tfunction parseArcCommand( path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end ) {\r\n\r\n\t\t\tif ( rx == 0 || ry == 0 ) {\r\n\r\n\t\t\t\t// draw a line if either of the radii == 0\r\n\t\t\t\tpath.lineTo( end.x, end.y );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\r\n\r\n\t\t\t// Ensure radii are positive\r\n\t\t\trx = Math.abs( rx );\r\n\t\t\try = Math.abs( ry );\r\n\r\n\t\t\t// Compute (x1', y1')\r\n\t\t\tconst dx2 = ( start.x - end.x ) / 2.0;\r\n\t\t\tconst dy2 = ( start.y - end.y ) / 2.0;\r\n\t\t\tconst x1p = Math.cos( x_axis_rotation ) * dx2 + Math.sin( x_axis_rotation ) * dy2;\r\n\t\t\tconst y1p = - Math.sin( x_axis_rotation ) * dx2 + Math.cos( x_axis_rotation ) * dy2;\r\n\r\n\t\t\t// Compute (cx', cy')\r\n\t\t\tlet rxs = rx * rx;\r\n\t\t\tlet rys = ry * ry;\r\n\t\t\tconst x1ps = x1p * x1p;\r\n\t\t\tconst y1ps = y1p * y1p;\r\n\r\n\t\t\t// Ensure radii are large enough\r\n\t\t\tconst cr = x1ps / rxs + y1ps / rys;\r\n\r\n\t\t\tif ( cr > 1 ) {\r\n\r\n\t\t\t\t// scale up rx,ry equally so cr == 1\r\n\t\t\t\tconst s = Math.sqrt( cr );\r\n\t\t\t\trx = s * rx;\r\n\t\t\t\try = s * ry;\r\n\t\t\t\trxs = rx * rx;\r\n\t\t\t\trys = ry * ry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst dq = ( rxs * y1ps + rys * x1ps );\r\n\t\t\tconst pq = ( rxs * rys - dq ) / dq;\r\n\t\t\tlet q = Math.sqrt( Math.max( 0, pq ) );\r\n\t\t\tif ( large_arc_flag === sweep_flag ) q = - q;\r\n\t\t\tconst cxp = q * rx * y1p / ry;\r\n\t\t\tconst cyp = - q * ry * x1p / rx;\r\n\r\n\t\t\t// Step 3: Compute (cx, cy) from (cx', cy')\r\n\t\t\tconst cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\r\n\t\t\tconst cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\r\n\r\n\t\t\t// Step 4: Compute θ1 and Δθ\r\n\t\t\tconst theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\r\n\t\t\tconst delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\r\n\r\n\t\t\tpath.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\r\n\r\n\t\t}\r\n\r\n\t\tfunction svgAngle( ux, uy, vx, vy ) {\r\n\r\n\t\t\tconst dot = ux * vx + uy * vy;\r\n\t\t\tconst len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\r\n\t\t\tlet ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\r\n\t\t\tif ( ( ux * vy - uy * vx ) < 0 ) ang = - ang;\r\n\t\t\treturn ang;\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t* According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\r\n\t\t* rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\r\n\t\t*/\r\n\t\tfunction parseRectNode( node ) {\r\n\r\n\t\t\tconst x = parseFloatWithUnits( node.getAttribute( 'x' ) || 0 );\r\n\t\t\tconst y = parseFloatWithUnits( node.getAttribute( 'y' ) || 0 );\r\n\t\t\tconst rx = parseFloatWithUnits( node.getAttribute( 'rx' ) || node.getAttribute( 'ry' ) || 0 );\r\n\t\t\tconst ry = parseFloatWithUnits( node.getAttribute( 'ry' ) || node.getAttribute( 'rx' ) || 0 );\r\n\t\t\tconst w = parseFloatWithUnits( node.getAttribute( 'width' ) );\r\n\t\t\tconst h = parseFloatWithUnits( node.getAttribute( 'height' ) );\r\n\r\n\t\t\t// Ellipse arc to Bezier approximation Coefficient (Inversed). See:\r\n\t\t\t// https://spencermortensen.com/articles/bezier-circle/\r\n\t\t\tconst bci = 1 - 0.551915024494;\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\r\n\t\t\t// top left\r\n\t\t\tpath.moveTo( x + rx, y );\r\n\r\n\t\t\t// top right\r\n\t\t\tpath.lineTo( x + w - rx, y );\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\r\n\r\n\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\tx + w - rx * bci,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tx + w,\r\n\t\t\t\t\ty + ry * bci,\r\n\t\t\t\t\tx + w,\r\n\t\t\t\t\ty + ry\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bottom right\r\n\t\t\tpath.lineTo( x + w, y + h - ry );\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\r\n\r\n\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\tx + w,\r\n\t\t\t\t\ty + h - ry * bci,\r\n\t\t\t\t\tx + w - rx * bci,\r\n\t\t\t\t\ty + h,\r\n\t\t\t\t\tx + w - rx,\r\n\t\t\t\t\ty + h\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bottom left\r\n\t\t\tpath.lineTo( x + rx, y + h );\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\r\n\r\n\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\tx + rx * bci,\r\n\t\t\t\t\ty + h,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty + h - ry * bci,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty + h - ry\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// back to top left\r\n\t\t\tpath.lineTo( x, y + ry );\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\r\n\r\n\t\t\t\tpath.bezierCurveTo( x, y + ry * bci, x + rx * bci, y, x + rx, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePolygonNode( node ) {\r\n\r\n\t\t\tfunction iterator( match, a, b ) {\r\n\r\n\t\t\t\tconst x = parseFloatWithUnits( a );\r\n\t\t\t\tconst y = parseFloatWithUnits( b );\r\n\r\n\t\t\t\tif ( index === 0 ) {\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst regex = /([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)(?:,|\\s)([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)/g;\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\r\n\r\n\t\t\tpath.currentPath.autoClose = true;\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePolylineNode( node ) {\r\n\r\n\t\t\tfunction iterator( match, a, b ) {\r\n\r\n\t\t\t\tconst x = parseFloatWithUnits( a );\r\n\t\t\t\tconst y = parseFloatWithUnits( b );\r\n\r\n\t\t\t\tif ( index === 0 ) {\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst regex = /([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)(?:,|\\s)([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)/g;\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\r\n\r\n\t\t\tpath.currentPath.autoClose = false;\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCircleNode( node ) {\r\n\r\n\t\t\tconst x = parseFloatWithUnits( node.getAttribute( 'cx' ) || 0 );\r\n\t\t\tconst y = parseFloatWithUnits( node.getAttribute( 'cy' ) || 0 );\r\n\t\t\tconst r = parseFloatWithUnits( node.getAttribute( 'r' ) || 0 );\r\n\r\n\t\t\tconst subpath = new Path();\r\n\t\t\tsubpath.absarc( x, y, r, 0, Math.PI * 2 );\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\t\t\tpath.subPaths.push( subpath );\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEllipseNode( node ) {\r\n\r\n\t\t\tconst x = parseFloatWithUnits( node.getAttribute( 'cx' ) || 0 );\r\n\t\t\tconst y = parseFloatWithUnits( node.getAttribute( 'cy' ) || 0 );\r\n\t\t\tconst rx = parseFloatWithUnits( node.getAttribute( 'rx' ) || 0 );\r\n\t\t\tconst ry = parseFloatWithUnits( node.getAttribute( 'ry' ) || 0 );\r\n\r\n\t\t\tconst subpath = new Path();\r\n\t\t\tsubpath.absellipse( x, y, rx, ry, 0, Math.PI * 2 );\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\t\t\tpath.subPaths.push( subpath );\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseLineNode( node ) {\r\n\r\n\t\t\tconst x1 = parseFloatWithUnits( node.getAttribute( 'x1' ) || 0 );\r\n\t\t\tconst y1 = parseFloatWithUnits( node.getAttribute( 'y1' ) || 0 );\r\n\t\t\tconst x2 = parseFloatWithUnits( node.getAttribute( 'x2' ) || 0 );\r\n\t\t\tconst y2 = parseFloatWithUnits( node.getAttribute( 'y2' ) || 0 );\r\n\r\n\t\t\tconst path = new ShapePath();\r\n\t\t\tpath.moveTo( x1, y1 );\r\n\t\t\tpath.lineTo( x2, y2 );\r\n\t\t\tpath.currentPath.autoClose = false;\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction parseStyle( node, style ) {\r\n\r\n\t\t\tstyle = Object.assign( {}, style ); // clone style\r\n\r\n\t\t\tlet stylesheetStyles = {};\r\n\r\n\t\t\tif ( node.hasAttribute( 'class' ) ) {\r\n\r\n\t\t\t\tconst classSelectors = node.getAttribute( 'class' )\r\n\t\t\t\t\t.split( /\\s/ )\r\n\t\t\t\t\t.filter( Boolean )\r\n\t\t\t\t\t.map( i => i.trim() );\r\n\r\n\t\t\t\tfor ( let i = 0; i < classSelectors.length; i ++ ) {\r\n\r\n\t\t\t\t\tstylesheetStyles = Object.assign( stylesheetStyles, stylesheets[ '.' + classSelectors[ i ] ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( node.hasAttribute( 'id' ) ) {\r\n\r\n\t\t\t\tstylesheetStyles = Object.assign( stylesheetStyles, stylesheets[ '#' + node.getAttribute( 'id' ) ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addStyle( svgName, jsName, adjustFunction ) {\r\n\r\n\t\t\t\tif ( adjustFunction === undefined ) adjustFunction = function copy( v ) {\r\n\r\n\t\t\t\t\tif ( v.startsWith( 'url' ) ) console.warn( 'SVGLoader: url access in attributes is not implemented.' );\r\n\r\n\t\t\t\t\treturn v;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ( node.hasAttribute( svgName ) ) style[ jsName ] = adjustFunction( node.getAttribute( svgName ) );\r\n\t\t\t\tif ( stylesheetStyles[ svgName ] ) style[ jsName ] = adjustFunction( stylesheetStyles[ svgName ] );\r\n\t\t\t\tif ( node.style && node.style[ svgName ] !== '' ) style[ jsName ] = adjustFunction( node.style[ svgName ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction clamp( v ) {\r\n\r\n\t\t\t\treturn Math.max( 0, Math.min( 1, parseFloatWithUnits( v ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction positive( v ) {\r\n\r\n\t\t\t\treturn Math.max( 0, parseFloatWithUnits( v ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taddStyle( 'fill', 'fill' );\r\n\t\t\taddStyle( 'fill-opacity', 'fillOpacity', clamp );\r\n\t\t\taddStyle( 'fill-rule', 'fillRule' );\r\n\t\t\taddStyle( 'opacity', 'opacity', clamp );\r\n\t\t\taddStyle( 'stroke', 'stroke' );\r\n\t\t\taddStyle( 'stroke-opacity', 'strokeOpacity', clamp );\r\n\t\t\taddStyle( 'stroke-width', 'strokeWidth', positive );\r\n\t\t\taddStyle( 'stroke-linejoin', 'strokeLineJoin' );\r\n\t\t\taddStyle( 'stroke-linecap', 'strokeLineCap' );\r\n\t\t\taddStyle( 'stroke-miterlimit', 'strokeMiterLimit', positive );\r\n\t\t\taddStyle( 'visibility', 'visibility' );\r\n\r\n\t\t\treturn style;\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\r\n\r\n\t\tfunction getReflection( a, b ) {\r\n\r\n\t\t\treturn a - ( b - a );\r\n\r\n\t\t}\r\n\r\n\t\t// from https://github.com/ppvg/svg-numbers (MIT License)\r\n\r\n\t\tfunction parseFloats( input, flags, stride ) {\r\n\r\n\t\t\tif ( typeof input !== 'string' ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'Invalid input: ' + typeof input );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Character groups\r\n\t\t\tconst RE = {\r\n\t\t\t\tSEPARATOR: /[ \\t\\r\\n\\,.\\-+]/,\r\n\t\t\t\tWHITESPACE: /[ \\t\\r\\n]/,\r\n\t\t\t\tDIGIT: /[\\d]/,\r\n\t\t\t\tSIGN: /[-+]/,\r\n\t\t\t\tPOINT: /\\./,\r\n\t\t\t\tCOMMA: /,/,\r\n\t\t\t\tEXP: /e/i,\r\n\t\t\t\tFLAGS: /[01]/\r\n\t\t\t};\r\n\r\n\t\t\t// States\r\n\t\t\tconst SEP = 0;\r\n\t\t\tconst INT = 1;\r\n\t\t\tconst FLOAT = 2;\r\n\t\t\tconst EXP = 3;\r\n\r\n\t\t\tlet state = SEP;\r\n\t\t\tlet seenComma = true;\r\n\t\t\tlet number = '', exponent = '';\r\n\t\t\tconst result = [];\r\n\r\n\t\t\tfunction throwSyntaxError( current, i, partial ) {\r\n\r\n\t\t\t\tconst error = new SyntaxError( 'Unexpected character \"' + current + '\" at index ' + i + '.' );\r\n\t\t\t\terror.partial = partial;\r\n\t\t\t\tthrow error;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction newNumber() {\r\n\r\n\t\t\t\tif ( number !== '' ) {\r\n\r\n\t\t\t\t\tif ( exponent === '' ) result.push( Number( number ) );\r\n\t\t\t\t\telse result.push( Number( number ) * Math.pow( 10, Number( exponent ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnumber = '';\r\n\t\t\t\texponent = '';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet current;\r\n\t\t\tconst length = input.length;\r\n\r\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tcurrent = input[ i ];\r\n\r\n\t\t\t\t// check for flags\r\n\t\t\t\tif ( Array.isArray( flags ) && flags.includes( result.length % stride ) && RE.FLAGS.test( current ) ) {\r\n\r\n\t\t\t\t\tstate = INT;\r\n\t\t\t\t\tnumber = current;\r\n\t\t\t\t\tnewNumber();\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// parse until next number\r\n\t\t\t\tif ( state === SEP ) {\r\n\r\n\t\t\t\t\t// eat whitespace\r\n\t\t\t\t\tif ( RE.WHITESPACE.test( current ) ) {\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// start new number\r\n\t\t\t\t\tif ( RE.DIGIT.test( current ) || RE.SIGN.test( current ) ) {\r\n\r\n\t\t\t\t\t\tstate = INT;\r\n\t\t\t\t\t\tnumber = current;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( RE.POINT.test( current ) ) {\r\n\r\n\t\t\t\t\t\tstate = FLOAT;\r\n\t\t\t\t\t\tnumber = current;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// throw on double commas (e.g. \"1, , 2\")\r\n\t\t\t\t\tif ( RE.COMMA.test( current ) ) {\r\n\r\n\t\t\t\t\t\tif ( seenComma ) {\r\n\r\n\t\t\t\t\t\t\tthrowSyntaxError( current, i, result );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tseenComma = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// parse integer part\r\n\t\t\t\tif ( state === INT ) {\r\n\r\n\t\t\t\t\tif ( RE.DIGIT.test( current ) ) {\r\n\r\n\t\t\t\t\t\tnumber += current;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( RE.POINT.test( current ) ) {\r\n\r\n\t\t\t\t\t\tnumber += current;\r\n\t\t\t\t\t\tstate = FLOAT;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( RE.EXP.test( current ) ) {\r\n\r\n\t\t\t\t\t\tstate = EXP;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// throw on double signs (\"-+1\"), but not on sign as separator (\"-1-2\")\r\n\t\t\t\t\tif ( RE.SIGN.test( current )\r\n\t\t\t\t\t\t\t&& number.length === 1\r\n\t\t\t\t\t\t\t&& RE.SIGN.test( number[ 0 ] ) ) {\r\n\r\n\t\t\t\t\t\tthrowSyntaxError( current, i, result );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// parse decimal part\r\n\t\t\t\tif ( state === FLOAT ) {\r\n\r\n\t\t\t\t\tif ( RE.DIGIT.test( current ) ) {\r\n\r\n\t\t\t\t\t\tnumber += current;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( RE.EXP.test( current ) ) {\r\n\r\n\t\t\t\t\t\tstate = EXP;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// throw on double decimal points (e.g. \"1..2\")\r\n\t\t\t\t\tif ( RE.POINT.test( current ) && number[ number.length - 1 ] === '.' ) {\r\n\r\n\t\t\t\t\t\tthrowSyntaxError( current, i, result );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// parse exponent part\r\n\t\t\t\tif ( state === EXP ) {\r\n\r\n\t\t\t\t\tif ( RE.DIGIT.test( current ) ) {\r\n\r\n\t\t\t\t\t\texponent += current;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( RE.SIGN.test( current ) ) {\r\n\r\n\t\t\t\t\t\tif ( exponent === '' ) {\r\n\r\n\t\t\t\t\t\t\texponent += current;\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( exponent.length === 1 && RE.SIGN.test( exponent ) ) {\r\n\r\n\t\t\t\t\t\t\tthrowSyntaxError( current, i, result );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// end of number\r\n\t\t\t\tif ( RE.WHITESPACE.test( current ) ) {\r\n\r\n\t\t\t\t\tnewNumber();\r\n\t\t\t\t\tstate = SEP;\r\n\t\t\t\t\tseenComma = false;\r\n\r\n\t\t\t\t} else if ( RE.COMMA.test( current ) ) {\r\n\r\n\t\t\t\t\tnewNumber();\r\n\t\t\t\t\tstate = SEP;\r\n\t\t\t\t\tseenComma = true;\r\n\r\n\t\t\t\t} else if ( RE.SIGN.test( current ) ) {\r\n\r\n\t\t\t\t\tnewNumber();\r\n\t\t\t\t\tstate = INT;\r\n\t\t\t\t\tnumber = current;\r\n\r\n\t\t\t\t} else if ( RE.POINT.test( current ) ) {\r\n\r\n\t\t\t\t\tnewNumber();\r\n\t\t\t\t\tstate = FLOAT;\r\n\t\t\t\t\tnumber = current;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrowSyntaxError( current, i, result );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add the last number found (if any)\r\n\t\t\tnewNumber();\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\t// Units\r\n\r\n\t\tconst units = [ 'mm', 'cm', 'in', 'pt', 'pc', 'px' ];\r\n\r\n\t\t// Conversion: [ fromUnit ][ toUnit ] (-1 means dpi dependent)\r\n\t\tconst unitConversion = {\r\n\r\n\t\t\t'mm': {\r\n\t\t\t\t'mm': 1,\r\n\t\t\t\t'cm': 0.1,\r\n\t\t\t\t'in': 1 / 25.4,\r\n\t\t\t\t'pt': 72 / 25.4,\r\n\t\t\t\t'pc': 6 / 25.4,\r\n\t\t\t\t'px': - 1\r\n\t\t\t},\r\n\t\t\t'cm': {\r\n\t\t\t\t'mm': 10,\r\n\t\t\t\t'cm': 1,\r\n\t\t\t\t'in': 1 / 2.54,\r\n\t\t\t\t'pt': 72 / 2.54,\r\n\t\t\t\t'pc': 6 / 2.54,\r\n\t\t\t\t'px': - 1\r\n\t\t\t},\r\n\t\t\t'in': {\r\n\t\t\t\t'mm': 25.4,\r\n\t\t\t\t'cm': 2.54,\r\n\t\t\t\t'in': 1,\r\n\t\t\t\t'pt': 72,\r\n\t\t\t\t'pc': 6,\r\n\t\t\t\t'px': - 1\r\n\t\t\t},\r\n\t\t\t'pt': {\r\n\t\t\t\t'mm': 25.4 / 72,\r\n\t\t\t\t'cm': 2.54 / 72,\r\n\t\t\t\t'in': 1 / 72,\r\n\t\t\t\t'pt': 1,\r\n\t\t\t\t'pc': 6 / 72,\r\n\t\t\t\t'px': - 1\r\n\t\t\t},\r\n\t\t\t'pc': {\r\n\t\t\t\t'mm': 25.4 / 6,\r\n\t\t\t\t'cm': 2.54 / 6,\r\n\t\t\t\t'in': 1 / 6,\r\n\t\t\t\t'pt': 72 / 6,\r\n\t\t\t\t'pc': 1,\r\n\t\t\t\t'px': - 1\r\n\t\t\t},\r\n\t\t\t'px': {\r\n\t\t\t\t'px': 1\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseFloatWithUnits( string ) {\r\n\r\n\t\t\tlet theUnit = 'px';\r\n\r\n\t\t\tif ( typeof string === 'string' || string instanceof String ) {\r\n\r\n\t\t\t\tfor ( let i = 0, n = units.length; i < n; i ++ ) {\r\n\r\n\t\t\t\t\tconst u = units[ i ];\r\n\r\n\t\t\t\t\tif ( string.endsWith( u ) ) {\r\n\r\n\t\t\t\t\t\ttheUnit = u;\r\n\t\t\t\t\t\tstring = string.substring( 0, string.length - u.length );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet scale = undefined;\r\n\r\n\t\t\tif ( theUnit === 'px' && scope.defaultUnit !== 'px' ) {\r\n\r\n\t\t\t\t// Conversion scale from  pixels to inches, then to default units\r\n\r\n\t\t\t\tscale = unitConversion[ 'in' ][ scope.defaultUnit ] / scope.defaultDPI;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscale = unitConversion[ theUnit ][ scope.defaultUnit ];\r\n\r\n\t\t\t\tif ( scale < 0 ) {\r\n\r\n\t\t\t\t\t// Conversion scale to pixels\r\n\r\n\t\t\t\t\tscale = unitConversion[ theUnit ][ 'in' ] * scope.defaultDPI;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn scale * parseFloat( string );\r\n\r\n\t\t}\r\n\r\n\t\t// Transforms\r\n\r\n\t\tfunction getNodeTransform( node ) {\r\n\r\n\t\t\tif ( ! ( node.hasAttribute( 'transform' ) || ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) ) ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst transform = parseNodeTransform( node );\r\n\r\n\t\t\tif ( transformStack.length > 0 ) {\r\n\r\n\t\t\t\ttransform.premultiply( transformStack[ transformStack.length - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentTransform.copy( transform );\r\n\t\t\ttransformStack.push( transform );\r\n\r\n\t\t\treturn transform;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseNodeTransform( node ) {\r\n\r\n\t\t\tconst transform = new Matrix3();\r\n\t\t\tconst currentTransform = tempTransform0;\r\n\r\n\t\t\tif ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\r\n\r\n\t\t\t\tconst tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\r\n\t\t\t\tconst ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\r\n\r\n\t\t\t\ttransform.translate( tx, ty );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( node.hasAttribute( 'transform' ) ) {\r\n\r\n\t\t\t\tconst transformsTexts = node.getAttribute( 'transform' ).split( ')' );\r\n\r\n\t\t\t\tfor ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\r\n\r\n\t\t\t\t\tconst transformText = transformsTexts[ tIndex ].trim();\r\n\r\n\t\t\t\t\tif ( transformText === '' ) continue;\r\n\r\n\t\t\t\t\tconst openParPos = transformText.indexOf( '(' );\r\n\t\t\t\t\tconst closeParPos = transformText.length;\r\n\r\n\t\t\t\t\tif ( openParPos > 0 && openParPos < closeParPos ) {\r\n\r\n\t\t\t\t\t\tconst transformType = transformText.slice( 0, openParPos );\r\n\r\n\t\t\t\t\t\tconst array = parseFloats( transformText.slice( openParPos + 1 ) );\r\n\r\n\t\t\t\t\t\tcurrentTransform.identity();\r\n\r\n\t\t\t\t\t\tswitch ( transformType ) {\r\n\r\n\t\t\t\t\t\t\tcase 'translate':\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tconst tx = array[ 0 ];\r\n\t\t\t\t\t\t\t\t\tlet ty = 0;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tty = array[ 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.translate( tx, ty );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'rotate':\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet angle = 0;\r\n\t\t\t\t\t\t\t\t\tlet cx = 0;\r\n\t\t\t\t\t\t\t\t\tlet cy = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t// Angle\r\n\t\t\t\t\t\t\t\t\tangle = array[ 0 ] * Math.PI / 180;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( array.length >= 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Center x, y\r\n\t\t\t\t\t\t\t\t\t\tcx = array[ 1 ];\r\n\t\t\t\t\t\t\t\t\t\tcy = array[ 2 ];\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Rotate around center (cx, cy)\r\n\t\t\t\t\t\t\t\t\ttempTransform1.makeTranslation( - cx, - cy );\r\n\t\t\t\t\t\t\t\t\ttempTransform2.makeRotation( angle );\r\n\t\t\t\t\t\t\t\t\ttempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\r\n\t\t\t\t\t\t\t\t\ttempTransform1.makeTranslation( cx, cy );\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'scale':\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tconst scaleX = array[ 0 ];\r\n\t\t\t\t\t\t\t\t\tlet scaleY = scaleX;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tscaleY = array[ 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.scale( scaleX, scaleY );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'skewX':\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\r\n\t\t\t\t\t\t\t\t\t\t1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\r\n\t\t\t\t\t\t\t\t\t\t0, 1, 0,\r\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'skewY':\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\r\n\t\t\t\t\t\t\t\t\t\t1, 0, 0,\r\n\t\t\t\t\t\t\t\t\t\tMath.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\r\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'matrix':\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length === 6 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\r\n\t\t\t\t\t\t\t\t\t\tarray[ 0 ], array[ 2 ], array[ 4 ],\r\n\t\t\t\t\t\t\t\t\t\tarray[ 1 ], array[ 3 ], array[ 5 ],\r\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttransform.premultiply( currentTransform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn transform;\r\n\r\n\t\t}\r\n\r\n\t\tfunction transformPath( path, m ) {\r\n\r\n\t\t\tfunction transfVec2( v2 ) {\r\n\r\n\t\t\t\ttempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\r\n\r\n\t\t\t\tv2.set( tempV3.x, tempV3.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction transfEllipseGeneric( curve ) {\r\n\r\n\t\t\t\t// For math description see:\r\n\t\t\t\t// https://math.stackexchange.com/questions/4544164\r\n\r\n\t\t\t\tconst a = curve.xRadius;\r\n\t\t\t\tconst b = curve.yRadius;\r\n\r\n\t\t\t\tconst cosTheta = Math.cos( curve.aRotation );\r\n\t\t\t\tconst sinTheta = Math.sin( curve.aRotation );\r\n\r\n\t\t\t\tconst v1 = new Vector3( a * cosTheta, a * sinTheta, 0 );\r\n\t\t\t\tconst v2 = new Vector3( - b * sinTheta, b * cosTheta, 0 );\r\n\r\n\t\t\t\tconst f1 = v1.applyMatrix3( m );\r\n\t\t\t\tconst f2 = v2.applyMatrix3( m );\r\n\r\n\t\t\t\tconst mF = tempTransform0.set(\r\n\t\t\t\t\tf1.x, f2.x, 0,\r\n\t\t\t\t\tf1.y, f2.y, 0,\r\n\t\t\t\t\t0, 0, 1,\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst mFInv = tempTransform1.copy( mF ).invert();\r\n\t\t\t\tconst mFInvT = tempTransform2.copy( mFInv ).transpose();\r\n\t\t\t\tconst mQ = mFInvT.multiply( mFInv );\r\n\t\t\t\tconst mQe = mQ.elements;\r\n\r\n\t\t\t\tconst ed = eigenDecomposition( mQe[ 0 ], mQe[ 1 ], mQe[ 4 ] );\r\n\t\t\t\tconst rt1sqrt = Math.sqrt( ed.rt1 );\r\n\t\t\t\tconst rt2sqrt = Math.sqrt( ed.rt2 );\r\n\r\n\t\t\t\tcurve.xRadius = 1 / rt1sqrt;\r\n\t\t\t\tcurve.yRadius = 1 / rt2sqrt;\r\n\t\t\t\tcurve.aRotation = Math.atan2( ed.sn, ed.cs );\r\n\r\n\t\t\t\tconst isFullEllipse =\r\n\t\t\t\t\t( curve.aEndAngle - curve.aStartAngle ) % ( 2 * Math.PI ) < Number.EPSILON;\r\n\r\n\t\t\t\t// Do not touch angles of a full ellipse because after transformation they\r\n\t\t\t\t// would converge to a sinle value effectively removing the whole curve\r\n\r\n\t\t\t\tif ( ! isFullEllipse ) {\r\n\r\n\t\t\t\t\tconst mDsqrt = tempTransform1.set(\r\n\t\t\t\t\t\trt1sqrt, 0, 0,\r\n\t\t\t\t\t\t0, rt2sqrt, 0,\r\n\t\t\t\t\t\t0, 0, 1,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst mRT = tempTransform2.set(\r\n\t\t\t\t\t\ted.cs, ed.sn, 0,\r\n\t\t\t\t\t\t- ed.sn, ed.cs, 0,\r\n\t\t\t\t\t\t0, 0, 1,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst mDRF = mDsqrt.multiply( mRT ).multiply( mF );\r\n\r\n\t\t\t\t\tconst transformAngle = phi => {\r\n\r\n\t\t\t\t\t\tconst { x: cosR, y: sinR } =\r\n\t\t\t\t\t\t\tnew Vector3( Math.cos( phi ), Math.sin( phi ), 0 ).applyMatrix3( mDRF );\r\n\r\n\t\t\t\t\t\treturn Math.atan2( sinR, cosR );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tcurve.aStartAngle = transformAngle( curve.aStartAngle );\r\n\t\t\t\t\tcurve.aEndAngle = transformAngle( curve.aEndAngle );\r\n\r\n\t\t\t\t\tif ( isTransformFlipped( m ) ) {\r\n\r\n\t\t\t\t\t\tcurve.aClockwise = ! curve.aClockwise;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction transfEllipseNoSkew( curve ) {\r\n\r\n\t\t\t\t// Faster shortcut if no skew is applied\r\n\t\t\t\t// (e.g, a euclidean transform of a group containing the ellipse)\r\n\r\n\t\t\t\tconst sx = getTransformScaleX( m );\r\n\t\t\t\tconst sy = getTransformScaleY( m );\r\n\r\n\t\t\t\tcurve.xRadius *= sx;\r\n\t\t\t\tcurve.yRadius *= sy;\r\n\r\n\t\t\t\t// Extract rotation angle from the matrix of form:\r\n\t\t\t\t//\r\n\t\t\t\t//  | cosθ sx   -sinθ sy |\r\n\t\t\t\t//  | sinθ sx    cosθ sy |\r\n\t\t\t\t//\r\n\t\t\t\t// Remembering that tanθ = sinθ / cosθ; and that\r\n\t\t\t\t// `sx`, `sy`, or both might be zero.\r\n\t\t\t\tconst theta =\r\n\t\t\t\t\tsx > Number.EPSILON\r\n\t\t\t\t\t\t? Math.atan2( m.elements[ 1 ], m.elements[ 0 ] )\r\n\t\t\t\t\t\t: Math.atan2( - m.elements[ 3 ], m.elements[ 4 ] );\r\n\r\n\t\t\t\tcurve.aRotation += theta;\r\n\r\n\t\t\t\tif ( isTransformFlipped( m ) ) {\r\n\r\n\t\t\t\t\tcurve.aStartAngle *= - 1;\r\n\t\t\t\t\tcurve.aEndAngle *= - 1;\r\n\t\t\t\t\tcurve.aClockwise = ! curve.aClockwise;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst subPaths = path.subPaths;\r\n\r\n\t\t\tfor ( let i = 0, n = subPaths.length; i < n; i ++ ) {\r\n\r\n\t\t\t\tconst subPath = subPaths[ i ];\r\n\t\t\t\tconst curves = subPath.curves;\r\n\r\n\t\t\t\tfor ( let j = 0; j < curves.length; j ++ ) {\r\n\r\n\t\t\t\t\tconst curve = curves[ j ];\r\n\r\n\t\t\t\t\tif ( curve.isLineCurve ) {\r\n\r\n\t\t\t\t\t\ttransfVec2( curve.v1 );\r\n\t\t\t\t\t\ttransfVec2( curve.v2 );\r\n\r\n\t\t\t\t\t} else if ( curve.isCubicBezierCurve ) {\r\n\r\n\t\t\t\t\t\ttransfVec2( curve.v0 );\r\n\t\t\t\t\t\ttransfVec2( curve.v1 );\r\n\t\t\t\t\t\ttransfVec2( curve.v2 );\r\n\t\t\t\t\t\ttransfVec2( curve.v3 );\r\n\r\n\t\t\t\t\t} else if ( curve.isQuadraticBezierCurve ) {\r\n\r\n\t\t\t\t\t\ttransfVec2( curve.v0 );\r\n\t\t\t\t\t\ttransfVec2( curve.v1 );\r\n\t\t\t\t\t\ttransfVec2( curve.v2 );\r\n\r\n\t\t\t\t\t} else if ( curve.isEllipseCurve ) {\r\n\r\n\t\t\t\t\t\t// Transform ellipse center point\r\n\r\n\t\t\t\t\t\ttempV2.set( curve.aX, curve.aY );\r\n\t\t\t\t\t\ttransfVec2( tempV2 );\r\n\t\t\t\t\t\tcurve.aX = tempV2.x;\r\n\t\t\t\t\t\tcurve.aY = tempV2.y;\r\n\r\n\t\t\t\t\t\t// Transform ellipse shape parameters\r\n\r\n\t\t\t\t\t\tif ( isTransformSkewed( m ) ) {\r\n\r\n\t\t\t\t\t\t\ttransfEllipseGeneric( curve );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttransfEllipseNoSkew( curve );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isTransformFlipped( m ) {\r\n\r\n\t\t\tconst te = m.elements;\r\n\t\t\treturn te[ 0 ] * te[ 4 ] - te[ 1 ] * te[ 3 ] < 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isTransformSkewed( m ) {\r\n\r\n\t\t\tconst te = m.elements;\r\n\t\t\tconst basisDot = te[ 0 ] * te[ 3 ] + te[ 1 ] * te[ 4 ];\r\n\r\n\t\t\t// Shortcut for trivial rotations and transformations\r\n\t\t\tif ( basisDot === 0 ) return false;\r\n\r\n\t\t\tconst sx = getTransformScaleX( m );\r\n\t\t\tconst sy = getTransformScaleY( m );\r\n\r\n\t\t\treturn Math.abs( basisDot / ( sx * sy ) ) > Number.EPSILON;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTransformScaleX( m ) {\r\n\r\n\t\t\tconst te = m.elements;\r\n\t\t\treturn Math.sqrt( te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTransformScaleY( m ) {\r\n\r\n\t\t\tconst te = m.elements;\r\n\t\t\treturn Math.sqrt( te[ 3 ] * te[ 3 ] + te[ 4 ] * te[ 4 ] );\r\n\r\n\t\t}\r\n\r\n\t\t// Calculates the eigensystem of a real symmetric 2x2 matrix\r\n\t\t//    [ A  B ]\r\n\t\t//    [ B  C ]\r\n\t\t// in the form\r\n\t\t//    [ A  B ]  =  [ cs  -sn ] [ rt1   0  ] [  cs  sn ]\r\n\t\t//    [ B  C ]     [ sn   cs ] [  0   rt2 ] [ -sn  cs ]\r\n\t\t// where rt1 >= rt2.\r\n\t\t//\r\n\t\t// Adapted from: https://www.mpi-hd.mpg.de/personalhomes/globes/3x3/index.html\r\n\t\t// -> Algorithms for real symmetric matrices -> Analytical (2x2 symmetric)\r\n\t\tfunction eigenDecomposition( A, B, C ) {\r\n\r\n\t\t\tlet rt1, rt2, cs, sn, t;\r\n\t\t\tconst sm = A + C;\r\n\t\t\tconst df = A - C;\r\n\t\t\tconst rt = Math.sqrt( df * df + 4 * B * B );\r\n\r\n\t\t\tif ( sm > 0 ) {\r\n\r\n\t\t\t\trt1 = 0.5 * ( sm + rt );\r\n\t\t\t\tt = 1 / rt1;\r\n\t\t\t\trt2 = A * t * C - B * t * B;\r\n\r\n\t\t\t} else if ( sm < 0 ) {\r\n\r\n\t\t\t\trt2 = 0.5 * ( sm - rt );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// This case needs to be treated separately to avoid div by 0\r\n\r\n\t\t\t\trt1 = 0.5 * rt;\r\n\t\t\t\trt2 = - 0.5 * rt;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate eigenvectors\r\n\r\n\t\t\tif ( df > 0 ) {\r\n\r\n\t\t\t\tcs = df + rt;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcs = df - rt;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( Math.abs( cs ) > 2 * Math.abs( B ) ) {\r\n\r\n\t\t\t\tt = - 2 * B / cs;\r\n\t\t\t\tsn = 1 / Math.sqrt( 1 + t * t );\r\n\t\t\t\tcs = t * sn;\r\n\r\n\t\t\t} else if ( Math.abs( B ) === 0 ) {\r\n\r\n\t\t\t\tcs = 1;\r\n\t\t\t\tsn = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tt = - 0.5 * cs / B;\r\n\t\t\t\tcs = 1 / Math.sqrt( 1 + t * t );\r\n\t\t\t\tsn = t * cs;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( df > 0 ) {\r\n\r\n\t\t\t\tt = cs;\r\n\t\t\t\tcs = - sn;\r\n\t\t\t\tsn = t;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { rt1, rt2, cs, sn };\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst paths = [];\r\n\t\tconst stylesheets = {};\r\n\r\n\t\tconst transformStack = [];\r\n\r\n\t\tconst tempTransform0 = new Matrix3();\r\n\t\tconst tempTransform1 = new Matrix3();\r\n\t\tconst tempTransform2 = new Matrix3();\r\n\t\tconst tempTransform3 = new Matrix3();\r\n\t\tconst tempV2 = new Vector2();\r\n\t\tconst tempV3 = new Vector3();\r\n\r\n\t\tconst currentTransform = new Matrix3();\r\n\r\n\t\tconst xml = new DOMParser().parseFromString( text, 'image/svg+xml' ); // application/xml\r\n\r\n\t\tparseNode( xml.documentElement, {\r\n\t\t\tfill: '#000',\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeLineJoin: 'miter',\r\n\t\t\tstrokeLineCap: 'butt',\r\n\t\t\tstrokeMiterLimit: 4\r\n\t\t} );\r\n\r\n\t\tconst data = { paths: paths, xml: xml.documentElement };\r\n\r\n\t\t// console.log( paths );\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tstatic createShapes( shapePath ) {\r\n\r\n\t\t// Param shapePath: a shapepath as returned by the parse function of this class\r\n\t\t// Returns Shape object\r\n\r\n\t\tconst BIGNUMBER = 999999999;\r\n\r\n\t\tconst IntersectionLocationType = {\r\n\t\t\tORIGIN: 0,\r\n\t\t\tDESTINATION: 1,\r\n\t\t\tBETWEEN: 2,\r\n\t\t\tLEFT: 3,\r\n\t\t\tRIGHT: 4,\r\n\t\t\tBEHIND: 5,\r\n\t\t\tBEYOND: 6\r\n\t\t};\r\n\r\n\t\tconst classifyResult = {\r\n\t\t\tloc: IntersectionLocationType.ORIGIN,\r\n\t\t\tt: 0\r\n\t\t};\r\n\r\n\t\tfunction findEdgeIntersection( a0, a1, b0, b1 ) {\r\n\r\n\t\t\tconst x1 = a0.x;\r\n\t\t\tconst x2 = a1.x;\r\n\t\t\tconst x3 = b0.x;\r\n\t\t\tconst x4 = b1.x;\r\n\t\t\tconst y1 = a0.y;\r\n\t\t\tconst y2 = a1.y;\r\n\t\t\tconst y3 = b0.y;\r\n\t\t\tconst y4 = b1.y;\r\n\t\t\tconst nom1 = ( x4 - x3 ) * ( y1 - y3 ) - ( y4 - y3 ) * ( x1 - x3 );\r\n\t\t\tconst nom2 = ( x2 - x1 ) * ( y1 - y3 ) - ( y2 - y1 ) * ( x1 - x3 );\r\n\t\t\tconst denom = ( y4 - y3 ) * ( x2 - x1 ) - ( x4 - x3 ) * ( y2 - y1 );\r\n\t\t\tconst t1 = nom1 / denom;\r\n\t\t\tconst t2 = nom2 / denom;\r\n\r\n\t\t\tif ( ( ( denom === 0 ) && ( nom1 !== 0 ) ) || ( t1 <= 0 ) || ( t1 >= 1 ) || ( t2 < 0 ) || ( t2 > 1 ) ) {\r\n\r\n\t\t\t\t//1. lines are parallel or edges don't intersect\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t} else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\r\n\r\n\t\t\t\t//2. lines are colinear\r\n\r\n\t\t\t\t//check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\r\n\t\t\t\tfor ( let i = 0; i < 2; i ++ ) {\r\n\r\n\t\t\t\t\tclassifyPoint( i === 0 ? b0 : b1, a0, a1 );\r\n\t\t\t\t\t//find position of this endpoints relatively to edge1\r\n\t\t\t\t\tif ( classifyResult.loc == IntersectionLocationType.ORIGIN ) {\r\n\r\n\t\t\t\t\t\tconst point = ( i === 0 ? b0 : b1 );\r\n\t\t\t\t\t\treturn { x: point.x, y: point.y, t: classifyResult.t };\r\n\r\n\t\t\t\t\t} else if ( classifyResult.loc == IntersectionLocationType.BETWEEN ) {\r\n\r\n\t\t\t\t\t\tconst x = + ( ( x1 + classifyResult.t * ( x2 - x1 ) ).toPrecision( 10 ) );\r\n\t\t\t\t\t\tconst y = + ( ( y1 + classifyResult.t * ( y2 - y1 ) ).toPrecision( 10 ) );\r\n\t\t\t\t\t\treturn { x: x, y: y, t: classifyResult.t, };\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//3. edges intersect\r\n\r\n\t\t\t\tfor ( let i = 0; i < 2; i ++ ) {\r\n\r\n\t\t\t\t\tclassifyPoint( i === 0 ? b0 : b1, a0, a1 );\r\n\r\n\t\t\t\t\tif ( classifyResult.loc == IntersectionLocationType.ORIGIN ) {\r\n\r\n\t\t\t\t\t\tconst point = ( i === 0 ? b0 : b1 );\r\n\t\t\t\t\t\treturn { x: point.x, y: point.y, t: classifyResult.t };\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst x = + ( ( x1 + t1 * ( x2 - x1 ) ).toPrecision( 10 ) );\r\n\t\t\t\tconst y = + ( ( y1 + t1 * ( y2 - y1 ) ).toPrecision( 10 ) );\r\n\t\t\t\treturn { x: x, y: y, t: t1 };\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction classifyPoint( p, edgeStart, edgeEnd ) {\r\n\r\n\t\t\tconst ax = edgeEnd.x - edgeStart.x;\r\n\t\t\tconst ay = edgeEnd.y - edgeStart.y;\r\n\t\t\tconst bx = p.x - edgeStart.x;\r\n\t\t\tconst by = p.y - edgeStart.y;\r\n\t\t\tconst sa = ax * by - bx * ay;\r\n\r\n\t\t\tif ( ( p.x === edgeStart.x ) && ( p.y === edgeStart.y ) ) {\r\n\r\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.ORIGIN;\r\n\t\t\t\tclassifyResult.t = 0;\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( p.x === edgeEnd.x ) && ( p.y === edgeEnd.y ) ) {\r\n\r\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.DESTINATION;\r\n\t\t\t\tclassifyResult.t = 1;\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( sa < - Number.EPSILON ) {\r\n\r\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.LEFT;\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( sa > Number.EPSILON ) {\r\n\r\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.RIGHT;\r\n\t\t\t\treturn;\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( ( ax * bx ) < 0 ) || ( ( ay * by ) < 0 ) ) {\r\n\r\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.BEHIND;\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( Math.sqrt( ax * ax + ay * ay ) ) < ( Math.sqrt( bx * bx + by * by ) ) ) {\r\n\r\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.BEYOND;\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet t;\r\n\r\n\t\t\tif ( ax !== 0 ) {\r\n\r\n\t\t\t\tt = bx / ax;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tt = by / ay;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tclassifyResult.loc = IntersectionLocationType.BETWEEN;\r\n\t\t\tclassifyResult.t = t;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getIntersections( path1, path2 ) {\r\n\r\n\t\t\tconst intersectionsRaw = [];\r\n\t\t\tconst intersections = [];\r\n\r\n\t\t\tfor ( let index = 1; index < path1.length; index ++ ) {\r\n\r\n\t\t\t\tconst path1EdgeStart = path1[ index - 1 ];\r\n\t\t\t\tconst path1EdgeEnd = path1[ index ];\r\n\r\n\t\t\t\tfor ( let index2 = 1; index2 < path2.length; index2 ++ ) {\r\n\r\n\t\t\t\t\tconst path2EdgeStart = path2[ index2 - 1 ];\r\n\t\t\t\t\tconst path2EdgeEnd = path2[ index2 ];\r\n\r\n\t\t\t\t\tconst intersection = findEdgeIntersection( path1EdgeStart, path1EdgeEnd, path2EdgeStart, path2EdgeEnd );\r\n\r\n\t\t\t\t\tif ( intersection !== null && intersectionsRaw.find( i => i.t <= intersection.t + Number.EPSILON && i.t >= intersection.t - Number.EPSILON ) === undefined ) {\r\n\r\n\t\t\t\t\t\tintersectionsRaw.push( intersection );\r\n\t\t\t\t\t\tintersections.push( new Vector2( intersection.x, intersection.y ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn intersections;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getScanlineIntersections( scanline, boundingBox, paths ) {\r\n\r\n\t\t\tconst center = new Vector2();\r\n\t\t\tboundingBox.getCenter( center );\r\n\r\n\t\t\tconst allIntersections = [];\r\n\r\n\t\t\tpaths.forEach( path => {\r\n\r\n\t\t\t\t// check if the center of the bounding box is in the bounding box of the paths.\r\n\t\t\t\t// this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\r\n\t\t\t\t// if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\r\n\t\t\t\tif ( path.boundingBox.containsPoint( center ) ) {\r\n\r\n\t\t\t\t\tconst intersections = getIntersections( scanline, path.points );\r\n\r\n\t\t\t\t\tintersections.forEach( p => {\r\n\r\n\t\t\t\t\t\tallIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tallIntersections.sort( ( i1, i2 ) => {\r\n\r\n\t\t\t\treturn i1.point.x - i2.point.x;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn allIntersections;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\r\n\r\n\t\t\tif ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\r\n\r\n\t\t\t\t_fillRule = 'nonzero';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst centerBoundingBox = new Vector2();\r\n\t\t\tsimplePath.boundingBox.getCenter( centerBoundingBox );\r\n\r\n\t\t\tconst scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\r\n\r\n\t\t\tconst scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\r\n\r\n\t\t\tscanlineIntersections.sort( ( i1, i2 ) => {\r\n\r\n\t\t\t\treturn i1.point.x - i2.point.x;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tconst baseIntersections = [];\r\n\t\t\tconst otherIntersections = [];\r\n\r\n\t\t\tscanlineIntersections.forEach( i => {\r\n\r\n\t\t\t\tif ( i.identifier === simplePath.identifier ) {\r\n\r\n\t\t\t\t\tbaseIntersections.push( i );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\totherIntersections.push( i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tconst firstXOfPath = baseIntersections[ 0 ].point.x;\r\n\r\n\t\t\t// build up the path hierarchy\r\n\t\t\tconst stack = [];\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\twhile ( i < otherIntersections.length && otherIntersections[ i ].point.x < firstXOfPath ) {\r\n\r\n\t\t\t\tif ( stack.length > 0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\r\n\r\n\t\t\t\t\tstack.pop();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstack.push( otherIntersections[ i ].identifier );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstack.push( simplePath.identifier );\r\n\r\n\t\t\tif ( _fillRule === 'evenodd' ) {\r\n\r\n\t\t\t\tconst isHole = stack.length % 2 === 0 ? true : false;\r\n\t\t\t\tconst isHoleFor = stack[ stack.length - 2 ];\r\n\r\n\t\t\t\treturn { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\r\n\r\n\t\t\t} else if ( _fillRule === 'nonzero' ) {\r\n\r\n\t\t\t\t// check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\r\n\t\t\t\tlet isHole = true;\r\n\t\t\t\tlet isHoleFor = null;\r\n\t\t\t\tlet lastCWValue = null;\r\n\r\n\t\t\t\tfor ( let i = 0; i < stack.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst identifier = stack[ i ];\r\n\t\t\t\t\tif ( isHole ) {\r\n\r\n\t\t\t\t\t\tlastCWValue = allPaths[ identifier ].isCW;\r\n\t\t\t\t\t\tisHole = false;\r\n\t\t\t\t\t\tisHoleFor = identifier;\r\n\r\n\t\t\t\t\t} else if ( lastCWValue !== allPaths[ identifier ].isCW ) {\r\n\r\n\t\t\t\t\t\tlastCWValue = allPaths[ identifier ].isCW;\r\n\t\t\t\t\t\tisHole = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'fill-rule: \"' + _fillRule + '\" is currently not implemented.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// check for self intersecting paths\r\n\t\t// TODO\r\n\r\n\t\t// check intersecting paths\r\n\t\t// TODO\r\n\r\n\t\t// prepare paths for hole detection\r\n\t\tlet scanlineMinX = BIGNUMBER;\r\n\t\tlet scanlineMaxX = - BIGNUMBER;\r\n\r\n\t\tlet simplePaths = shapePath.subPaths.map( p => {\r\n\r\n\t\t\tconst points = p.getPoints();\r\n\t\t\tlet maxY = - BIGNUMBER;\r\n\t\t\tlet minY = BIGNUMBER;\r\n\t\t\tlet maxX = - BIGNUMBER;\r\n\t\t\tlet minX = BIGNUMBER;\r\n\r\n\t      \t//points.forEach(p => p.y *= -1);\r\n\r\n\t\t\tfor ( let i = 0; i < points.length; i ++ ) {\r\n\r\n\t\t\t\tconst p = points[ i ];\r\n\r\n\t\t\t\tif ( p.y > maxY ) {\r\n\r\n\t\t\t\t\tmaxY = p.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p.y < minY ) {\r\n\r\n\t\t\t\t\tminY = p.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p.x > maxX ) {\r\n\r\n\t\t\t\t\tmaxX = p.x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p.x < minX ) {\r\n\r\n\t\t\t\t\tminX = p.x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\tif ( scanlineMaxX <= maxX ) {\r\n\r\n\t\t\t\tscanlineMaxX = maxX + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scanlineMinX >= minX ) {\r\n\r\n\t\t\t\tscanlineMinX = minX - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { curves: p.curves, points: points, isCW: ShapeUtils.isClockWise( points ), identifier: - 1, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\r\n\r\n\t\t} );\r\n\r\n\t\tsimplePaths = simplePaths.filter( sp => sp.points.length > 1 );\r\n\r\n\t\tfor ( let identifier = 0; identifier < simplePaths.length; identifier ++ ) {\r\n\r\n\t\t\tsimplePaths[ identifier ].identifier = identifier;\r\n\r\n\t\t}\r\n\r\n\t\t// check if path is solid or a hole\r\n\t\tconst isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, ( shapePath.userData ? shapePath.userData.style.fillRule : undefined ) ) );\r\n\r\n\r\n\t\tconst shapesToReturn = [];\r\n\t\tsimplePaths.forEach( p => {\r\n\r\n\t\t\tconst amIAHole = isAHole[ p.identifier ];\r\n\r\n\t\t\tif ( ! amIAHole.isHole ) {\r\n\r\n\t\t\t\tconst shape = new Shape();\r\n\t\t\t\tshape.curves = p.curves;\r\n\t\t\t\tconst holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\r\n\t\t\t\tholes.forEach( h => {\r\n\r\n\t\t\t\t\tconst hole = simplePaths[ h.identifier ];\r\n\t\t\t\t\tconst path = new Path();\r\n\t\t\t\t\tpath.curves = hole.curves;\r\n\t\t\t\t\tshape.holes.push( path );\r\n\r\n\t\t\t\t} );\r\n\t\t\t\tshapesToReturn.push( shape );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn shapesToReturn;\r\n\r\n\t}\r\n\r\n\tstatic getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\r\n\r\n\t\t// Param width: Stroke width\r\n\t\t// Param color: As returned by THREE.Color.getStyle()\r\n\t\t// Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\r\n\t\t// Param lineCap: One of \"round\", \"square\" or \"butt\"\r\n\t\t// Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\r\n\t\t// Returns style object\r\n\r\n\t\twidth = width !== undefined ? width : 1;\r\n\t\tcolor = color !== undefined ? color : '#000';\r\n\t\tlineJoin = lineJoin !== undefined ? lineJoin : 'miter';\r\n\t\tlineCap = lineCap !== undefined ? lineCap : 'butt';\r\n\t\tmiterLimit = miterLimit !== undefined ? miterLimit : 4;\r\n\r\n\t\treturn {\r\n\t\t\tstrokeColor: color,\r\n\t\t\tstrokeWidth: width,\r\n\t\t\tstrokeLineJoin: lineJoin,\r\n\t\t\tstrokeLineCap: lineCap,\r\n\t\t\tstrokeMiterLimit: miterLimit\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic pointsToStroke( points, style, arcDivisions, minDistance ) {\r\n\r\n\t\t// Generates a stroke with some width around the given path.\r\n\t\t// The path can be open or closed (last point equals to first point)\r\n\t\t// Param points: Array of Vector2D (the path). Minimum 2 points.\r\n\t\t// Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\r\n\t\t// Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\r\n\t\t// Param minDistance: Points closer to this distance will be merged. (Optional)\r\n\t\t// Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tif ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tstatic pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset ) {\r\n\r\n\t\t// This function can be called to update existing arrays or buffers.\r\n\t\t// Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\r\n\t\t// Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\r\n\t\t// Returns number of written vertices / normals / uvs pairs\r\n\t\t// if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\r\n\t\t// 'normals' and 'uvs' buffers are optional\r\n\r\n\t\tconst tempV2_1 = new Vector2();\r\n\t\tconst tempV2_2 = new Vector2();\r\n\t\tconst tempV2_3 = new Vector2();\r\n\t\tconst tempV2_4 = new Vector2();\r\n\t\tconst tempV2_5 = new Vector2();\r\n\t\tconst tempV2_6 = new Vector2();\r\n\t\tconst tempV2_7 = new Vector2();\r\n\t\tconst lastPointL = new Vector2();\r\n\t\tconst lastPointR = new Vector2();\r\n\t\tconst point0L = new Vector2();\r\n\t\tconst point0R = new Vector2();\r\n\t\tconst currentPointL = new Vector2();\r\n\t\tconst currentPointR = new Vector2();\r\n\t\tconst nextPointL = new Vector2();\r\n\t\tconst nextPointR = new Vector2();\r\n\t\tconst innerPoint = new Vector2();\r\n\t\tconst outerPoint = new Vector2();\r\n\r\n\t\tarcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\r\n\t\tminDistance = minDistance !== undefined ? minDistance : 0.001;\r\n\t\tvertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\r\n\r\n\t\t// First ensure there are no duplicated points\r\n\t\tpoints = removeDuplicatedPoints( points );\r\n\r\n\t\tconst numPoints = points.length;\r\n\r\n\t\tif ( numPoints < 2 ) return 0;\r\n\r\n\t\tconst isClosed = points[ 0 ].equals( points[ numPoints - 1 ] );\r\n\r\n\t\tlet currentPoint;\r\n\t\tlet previousPoint = points[ 0 ];\r\n\t\tlet nextPoint;\r\n\r\n\t\tconst strokeWidth2 = style.strokeWidth / 2;\r\n\r\n\t\tconst deltaU = 1 / ( numPoints - 1 );\r\n\t\tlet u0 = 0, u1;\r\n\r\n\t\tlet innerSideModified;\r\n\t\tlet joinIsOnLeftSide;\r\n\t\tlet isMiter;\r\n\t\tlet initialJoinIsOnLeftSide = false;\r\n\r\n\t\tlet numVertices = 0;\r\n\t\tlet currentCoordinate = vertexOffset * 3;\r\n\t\tlet currentCoordinateUV = vertexOffset * 2;\r\n\r\n\t\t// Get initial left and right stroke points\r\n\t\tgetNormal( points[ 0 ], points[ 1 ], tempV2_1 ).multiplyScalar( strokeWidth2 );\r\n\t\tlastPointL.copy( points[ 0 ] ).sub( tempV2_1 );\r\n\t\tlastPointR.copy( points[ 0 ] ).add( tempV2_1 );\r\n\t\tpoint0L.copy( lastPointL );\r\n\t\tpoint0R.copy( lastPointR );\r\n\r\n\t\tfor ( let iPoint = 1; iPoint < numPoints; iPoint ++ ) {\r\n\r\n\t\t\tcurrentPoint = points[ iPoint ];\r\n\r\n\t\t\t// Get next point\r\n\t\t\tif ( iPoint === numPoints - 1 ) {\r\n\r\n\t\t\t\tif ( isClosed ) {\r\n\r\n\t\t\t\t\t// Skip duplicated initial point\r\n\t\t\t\t\tnextPoint = points[ 1 ];\r\n\r\n\t\t\t\t} else nextPoint = undefined;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnextPoint = points[ iPoint + 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Normal of previous segment in tempV2_1\r\n\t\t\tconst normal1 = tempV2_1;\r\n\t\t\tgetNormal( previousPoint, currentPoint, normal1 );\r\n\r\n\t\t\ttempV2_3.copy( normal1 ).multiplyScalar( strokeWidth2 );\r\n\t\t\tcurrentPointL.copy( currentPoint ).sub( tempV2_3 );\r\n\t\t\tcurrentPointR.copy( currentPoint ).add( tempV2_3 );\r\n\r\n\t\t\tu1 = u0 + deltaU;\r\n\r\n\t\t\tinnerSideModified = false;\r\n\r\n\t\t\tif ( nextPoint !== undefined ) {\r\n\r\n\t\t\t\t// Normal of next segment in tempV2_2\r\n\t\t\t\tgetNormal( currentPoint, nextPoint, tempV2_2 );\r\n\r\n\t\t\t\ttempV2_3.copy( tempV2_2 ).multiplyScalar( strokeWidth2 );\r\n\t\t\t\tnextPointL.copy( currentPoint ).sub( tempV2_3 );\r\n\t\t\t\tnextPointR.copy( currentPoint ).add( tempV2_3 );\r\n\r\n\t\t\t\tjoinIsOnLeftSide = true;\r\n\t\t\t\ttempV2_3.subVectors( nextPoint, previousPoint );\r\n\t\t\t\tif ( normal1.dot( tempV2_3 ) < 0 ) {\r\n\r\n\t\t\t\t\tjoinIsOnLeftSide = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( iPoint === 1 ) initialJoinIsOnLeftSide = joinIsOnLeftSide;\r\n\r\n\t\t\t\ttempV2_3.subVectors( nextPoint, currentPoint );\r\n\t\t\t\ttempV2_3.normalize();\r\n\t\t\t\tconst dot = Math.abs( normal1.dot( tempV2_3 ) );\r\n\r\n\t\t\t\t// If path is straight, don't create join\r\n\t\t\t\tif ( dot > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// Compute inner and outer segment intersections\r\n\t\t\t\t\tconst miterSide = strokeWidth2 / dot;\r\n\t\t\t\t\ttempV2_3.multiplyScalar( - miterSide );\r\n\t\t\t\t\ttempV2_4.subVectors( currentPoint, previousPoint );\r\n\t\t\t\t\ttempV2_5.copy( tempV2_4 ).setLength( miterSide ).add( tempV2_3 );\r\n\t\t\t\t\tinnerPoint.copy( tempV2_5 ).negate();\r\n\t\t\t\t\tconst miterLength2 = tempV2_5.length();\r\n\t\t\t\t\tconst segmentLengthPrev = tempV2_4.length();\r\n\t\t\t\t\ttempV2_4.divideScalar( segmentLengthPrev );\r\n\t\t\t\t\ttempV2_6.subVectors( nextPoint, currentPoint );\r\n\t\t\t\t\tconst segmentLengthNext = tempV2_6.length();\r\n\t\t\t\t\ttempV2_6.divideScalar( segmentLengthNext );\r\n\t\t\t\t\t// Check that previous and next segments doesn't overlap with the innerPoint of intersection\r\n\t\t\t\t\tif ( tempV2_4.dot( innerPoint ) < segmentLengthPrev && tempV2_6.dot( innerPoint ) < segmentLengthNext ) {\r\n\r\n\t\t\t\t\t\tinnerSideModified = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\touterPoint.copy( tempV2_5 ).add( currentPoint );\r\n\t\t\t\t\tinnerPoint.add( currentPoint );\r\n\r\n\t\t\t\t\tisMiter = false;\r\n\r\n\t\t\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\tnextPointR.copy( innerPoint );\r\n\t\t\t\t\t\t\tcurrentPointR.copy( innerPoint );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tnextPointL.copy( innerPoint );\r\n\t\t\t\t\t\t\tcurrentPointL.copy( innerPoint );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// The segment triangles are generated here if there was overlapping\r\n\r\n\t\t\t\t\t\tmakeSegmentTriangles();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tswitch ( style.strokeLineJoin ) {\r\n\r\n\t\t\t\t\t\tcase 'bevel':\r\n\r\n\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'round':\r\n\r\n\t\t\t\t\t\t\t// Segment triangles\r\n\r\n\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\r\n\r\n\t\t\t\t\t\t\t// Join triangles\r\n\r\n\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, currentPointL, nextPointL, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, nextPointR, currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'miter':\r\n\t\t\t\t\t\tcase 'miter-clip':\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tconst miterFraction = ( strokeWidth2 * style.strokeMiterLimit ) / miterLength2;\r\n\r\n\t\t\t\t\t\t\tif ( miterFraction < 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// The join miter length exceeds the miter limit\r\n\r\n\t\t\t\t\t\t\t\tif ( style.strokeLineJoin !== 'miter-clip' ) {\r\n\r\n\t\t\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t// Segment triangles\r\n\r\n\t\t\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\r\n\r\n\t\t\t\t\t\t\t\t\t// Miter-clip join triangles\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointL ).multiplyScalar( miterFraction ).add( currentPointL );\r\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointL ).multiplyScalar( miterFraction ).add( nextPointL );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointR ).multiplyScalar( miterFraction ).add( currentPointR );\r\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointR ).multiplyScalar( miterFraction ).add( nextPointR );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// Miter join segment triangles\r\n\r\n\t\t\t\t\t\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// Optimized segment + join triangles\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tnextPointL.copy( outerPoint );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tnextPointR.copy( outerPoint );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t// Add extra miter join triangles\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tisMiter = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// The segment triangles are generated here when two consecutive points are collinear\r\n\r\n\t\t\t\t\tmakeSegmentTriangles();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// The segment triangles are generated here if it is the ending segment\r\n\r\n\t\t\t\tmakeSegmentTriangles();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! isClosed && iPoint === numPoints - 1 ) {\r\n\r\n\t\t\t\t// Start line endcap\r\n\t\t\t\taddCapGeometry( points[ 0 ], point0L, point0R, joinIsOnLeftSide, true, u0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Increment loop variables\r\n\r\n\t\t\tu0 = u1;\r\n\r\n\t\t\tpreviousPoint = currentPoint;\r\n\r\n\t\t\tlastPointL.copy( nextPointL );\r\n\t\t\tlastPointR.copy( nextPointR );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! isClosed ) {\r\n\r\n\t\t\t// Ending line endcap\r\n\t\t\taddCapGeometry( currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1 );\r\n\r\n\t\t} else if ( innerSideModified && vertices ) {\r\n\r\n\t\t\t// Modify path first segment vertices to adjust to the segments inner and outer intersections\r\n\r\n\t\t\tlet lastOuter = outerPoint;\r\n\t\t\tlet lastInner = innerPoint;\r\n\r\n\t\t\tif ( initialJoinIsOnLeftSide !== joinIsOnLeftSide ) {\r\n\r\n\t\t\t\tlastOuter = innerPoint;\r\n\t\t\t\tlastInner = outerPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\tif ( isMiter || initialJoinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\tlastInner.toArray( vertices, 0 * 3 );\r\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\r\n\r\n\t\t\t\t\tif ( isMiter ) {\r\n\r\n\t\t\t\t\t\tlastOuter.toArray( vertices, 1 * 3 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( isMiter || ! initialJoinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\tlastInner.toArray( vertices, 1 * 3 );\r\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\r\n\r\n\t\t\t\t\tif ( isMiter ) {\r\n\r\n\t\t\t\t\t\tlastOuter.toArray( vertices, 0 * 3 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn numVertices;\r\n\r\n\t\t// -- End of algorithm\r\n\r\n\t\t// -- Functions\r\n\r\n\t\tfunction getNormal( p1, p2, result ) {\r\n\r\n\t\t\tresult.subVectors( p2, p1 );\r\n\t\t\treturn result.set( - result.y, result.x ).normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfunction addVertex( position, u, v ) {\r\n\r\n\t\t\tif ( vertices ) {\r\n\r\n\t\t\t\tvertices[ currentCoordinate ] = position.x;\r\n\t\t\t\tvertices[ currentCoordinate + 1 ] = position.y;\r\n\t\t\t\tvertices[ currentCoordinate + 2 ] = 0;\r\n\r\n\t\t\t\tif ( normals ) {\r\n\r\n\t\t\t\t\tnormals[ currentCoordinate ] = 0;\r\n\t\t\t\t\tnormals[ currentCoordinate + 1 ] = 0;\r\n\t\t\t\t\tnormals[ currentCoordinate + 2 ] = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentCoordinate += 3;\r\n\r\n\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\tuvs[ currentCoordinateUV ] = u;\r\n\t\t\t\t\tuvs[ currentCoordinateUV + 1 ] = v;\r\n\r\n\t\t\t\t\tcurrentCoordinateUV += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnumVertices += 3;\r\n\r\n\t\t}\r\n\r\n\t\tfunction makeCircularSector( center, p1, p2, u, v ) {\r\n\r\n\t\t\t// param p1, p2: Points in the circle arc.\r\n\t\t\t// p1 and p2 are in clockwise direction.\r\n\r\n\t\t\ttempV2_1.copy( p1 ).sub( center ).normalize();\r\n\t\t\ttempV2_2.copy( p2 ).sub( center ).normalize();\r\n\r\n\t\t\tlet angle = Math.PI;\r\n\t\t\tconst dot = tempV2_1.dot( tempV2_2 );\r\n\t\t\tif ( Math.abs( dot ) < 1 ) angle = Math.abs( Math.acos( dot ) );\r\n\r\n\t\t\tangle /= arcDivisions;\r\n\r\n\t\t\ttempV2_3.copy( p1 );\r\n\r\n\t\t\tfor ( let i = 0, il = arcDivisions - 1; i < il; i ++ ) {\r\n\r\n\t\t\t\ttempV2_4.copy( tempV2_3 ).rotateAround( center, angle );\r\n\r\n\t\t\t\taddVertex( tempV2_3, u, v );\r\n\t\t\t\taddVertex( tempV2_4, u, v );\r\n\t\t\t\taddVertex( center, u, 0.5 );\r\n\r\n\t\t\t\ttempV2_3.copy( tempV2_4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taddVertex( tempV2_4, u, v );\r\n\t\t\taddVertex( p2, u, v );\r\n\t\t\taddVertex( center, u, 0.5 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction makeSegmentTriangles() {\r\n\r\n\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\taddVertex( currentPointL, u1, 0 );\r\n\r\n\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\taddVertex( currentPointL, u1, 1 );\r\n\t\t\taddVertex( currentPointR, u1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction makeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u ) {\r\n\r\n\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\t// Optimized segment + bevel triangles\r\n\r\n\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t// Path segments triangles\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t// Bevel join triangle\r\n\r\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\r\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Path segments triangles\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\t// Bevel join triangle\r\n\r\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\r\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Bevel join triangle. The segment triangles are done in the main loop\r\n\r\n\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\r\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\r\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction createSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified ) {\r\n\r\n\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( currentPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\taddVertex( nextPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( currentPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( nextPointR, u0, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction addCapGeometry( center, p1, p2, joinIsOnLeftSide, start, u ) {\r\n\r\n\t\t\t// param center: End point of the path\r\n\t\t\t// param p1, p2: Left and right cap points\r\n\r\n\t\t\tswitch ( style.strokeLineCap ) {\r\n\r\n\t\t\t\tcase 'round':\r\n\r\n\t\t\t\t\tif ( start ) {\r\n\r\n\t\t\t\t\t\tmakeCircularSector( center, p2, p1, u, 0.5 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmakeCircularSector( center, p1, p2, u, 0.5 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'square':\r\n\r\n\t\t\t\t\tif ( start ) {\r\n\r\n\t\t\t\t\t\ttempV2_1.subVectors( p1, center );\r\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\r\n\r\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\r\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\r\n\r\n\t\t\t\t\t\t// Modify already existing vertices\r\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 3 * 3 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 3 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttempV2_1.subVectors( p2, center );\r\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\r\n\r\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\r\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\r\n\r\n\t\t\t\t\t\tconst vl = vertices.length;\r\n\r\n\t\t\t\t\t\t// Modify already existing vertices\r\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 2 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 2 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'butt':\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t// Nothing to do here\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction removeDuplicatedPoints( points ) {\r\n\r\n\t\t\t// Creates a new array if necessary with duplicated points removed.\r\n\t\t\t// This does not remove duplicated initial and ending points of a closed path.\r\n\r\n\t\t\tlet dupPoints = false;\r\n\t\t\tfor ( let i = 1, n = points.length - 1; i < n; i ++ ) {\r\n\r\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) < minDistance ) {\r\n\r\n\t\t\t\t\tdupPoints = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! dupPoints ) return points;\r\n\r\n\t\t\tconst newPoints = [];\r\n\t\t\tnewPoints.push( points[ 0 ] );\r\n\r\n\t\t\tfor ( let i = 1, n = points.length - 1; i < n; i ++ ) {\r\n\r\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) >= minDistance ) {\r\n\r\n\t\t\t\t\tnewPoints.push( points[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewPoints.push( points[ points.length - 1 ] );\r\n\r\n\t\t\treturn newPoints;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport { SVGLoader };\r\n", null, null, null, null, null, null, null, "import {\r\n\tEventDispatcher,\r\n\tMOUSE,\r\n\tQuaternion,\r\n\tSpherical,\r\n\tTOUCH,\r\n\tVector2,\r\n\tVector3,\r\n\tPlane,\r\n\tRay,\r\n\tMathUtils\r\n} from 'three';\r\n\r\n// OrbitControls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\nconst _changeEvent = { type: 'change' };\r\nconst _startEvent = { type: 'start' };\r\nconst _endEvent = { type: 'end' };\r\nconst _ray = new Ray();\r\nconst _plane = new Plane();\r\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\r\n\r\nclass OrbitControls extends EventDispatcher {\r\n\r\n\tconstructor( object, domElement ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.domElement = domElement;\r\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\r\n\t\t// Set to false to disable this control\r\n\t\tthis.enabled = true;\r\n\r\n\t\t// \"target\" sets the location of focus, where the object orbits around\r\n\t\tthis.target = new Vector3();\r\n\r\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\t\tthis.minDistance = 0;\r\n\t\tthis.maxDistance = Infinity;\r\n\r\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\r\n\t\tthis.minZoom = 0;\r\n\t\tthis.maxZoom = Infinity;\r\n\r\n\t\t// How far you can orbit vertically, upper and lower limits.\r\n\t\t// Range is 0 to Math.PI radians.\r\n\t\tthis.minPolarAngle = 0; // radians\r\n\t\tthis.maxPolarAngle = Math.PI; // radians\r\n\r\n\t\t// How far you can orbit horizontally, upper and lower limits.\r\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\r\n\t\tthis.minAzimuthAngle = - Infinity; // radians\r\n\t\tthis.maxAzimuthAngle = Infinity; // radians\r\n\r\n\t\t// Set to true to enable damping (inertia)\r\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.enableDamping = false;\r\n\t\tthis.dampingFactor = 0.05;\r\n\r\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t\t// Set to false to disable zooming\r\n\t\tthis.enableZoom = true;\r\n\t\tthis.zoomSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable rotating\r\n\t\tthis.enableRotate = true;\r\n\t\tthis.rotateSpeed = 1.0;\r\n\r\n\t\t// Set to false to disable panning\r\n\t\tthis.enablePan = true;\r\n\t\tthis.panSpeed = 1.0;\r\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\r\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\r\n\t\tthis.zoomToCursor = false;\r\n\r\n\t\t// Set to true to automatically rotate around the target\r\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\t\tthis.autoRotate = false;\r\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\r\n\r\n\t\t// The four arrow keys\r\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\r\n\r\n\t\t// Mouse buttons\r\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\r\n\r\n\t\t// Touch fingers\r\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\r\n\r\n\t\t// for reset\r\n\t\tthis.target0 = this.target.clone();\r\n\t\tthis.position0 = this.object.position.clone();\r\n\t\tthis.zoom0 = this.object.zoom;\r\n\r\n\t\t// the target DOM element for key events\r\n\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t//\r\n\t\t// public methods\r\n\t\t//\r\n\r\n\t\tthis.getPolarAngle = function () {\r\n\r\n\t\t\treturn spherical.phi;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getAzimuthalAngle = function () {\r\n\r\n\t\t\treturn spherical.theta;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDistance = function () {\r\n\r\n\t\t\treturn this.object.position.distanceTo( this.target );\r\n\r\n\t\t};\r\n\r\n\t\tthis.listenToKeyEvents = function ( domElement ) {\r\n\r\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = domElement;\r\n\r\n\t\t};\r\n\r\n\t\tthis.stopListenToKeyEvents = function () {\r\n\r\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\tthis._domElementKeyEvents = null;\r\n\r\n\t\t};\r\n\r\n\t\tthis.saveState = function () {\r\n\r\n\t\t\tscope.target0.copy( scope.target );\r\n\t\t\tscope.position0.copy( scope.object.position );\r\n\t\t\tscope.zoom0 = scope.object.zoom;\r\n\r\n\t\t};\r\n\r\n\t\tthis.reset = function () {\r\n\r\n\t\t\tscope.target.copy( scope.target0 );\r\n\t\t\tscope.object.position.copy( scope.position0 );\r\n\t\t\tscope.object.zoom = scope.zoom0;\r\n\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t\tstate = STATE.NONE;\r\n\r\n\t\t};\r\n\r\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\r\n\t\tthis.update = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\t// so camera.up is the orbit axis\r\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\r\n\t\t\tconst quatInverse = quat.clone().invert();\r\n\r\n\t\t\tconst lastPosition = new Vector3();\r\n\t\t\tconst lastQuaternion = new Quaternion();\r\n\t\t\tconst lastTargetPosition = new Vector3();\r\n\r\n\t\t\tconst twoPI = 2 * Math.PI;\r\n\r\n\t\t\treturn function update( deltaTime = null ) {\r\n\r\n\t\t\t\tconst position = scope.object.position;\r\n\r\n\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\r\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quat );\r\n\r\n\t\t\t\t// angle from z-axis around y-axis\r\n\t\t\t\tspherical.setFromVector3( offset );\r\n\r\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\r\n\r\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scope.enableDamping ) {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\r\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict theta to be between desired limits\r\n\r\n\t\t\t\tlet min = scope.minAzimuthAngle;\r\n\t\t\t\tlet max = scope.maxAzimuthAngle;\r\n\r\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\r\n\r\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\r\n\r\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\r\n\r\n\t\t\t\t\tif ( min <= max ) {\r\n\r\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\r\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\r\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// restrict phi to be between desired limits\r\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\r\n\r\n\t\t\t\tspherical.makeSafe();\r\n\r\n\r\n\t\t\t\t// move target to panned location\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tscope.target.add( panOffset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\r\n\t\t\t\t// we adjust zoom later in these cases\r\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\toffset.setFromSpherical( spherical );\r\n\r\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\r\n\t\t\t\toffset.applyQuaternion( quatInverse );\r\n\r\n\t\t\t\tposition.copy( scope.target ).add( offset );\r\n\r\n\t\t\t\tscope.object.lookAt( scope.target );\r\n\r\n\t\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\r\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adjust camera position\r\n\t\t\t\tlet zoomChanged = false;\r\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\r\n\r\n\t\t\t\t\tlet newRadius = null;\r\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t\t\t// move the camera down the pointer ray\r\n\t\t\t\t\t\t// this method avoids floating point error\r\n\t\t\t\t\t\tconst prevRadius = offset.length();\r\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\r\n\r\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\r\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\r\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\r\n\r\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\r\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\r\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\r\n\r\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\r\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\r\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\r\n\r\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\r\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\r\n\r\n\t\t\t\t\t\tnewRadius = offset.length();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\r\n\t\t\t\t\t\tscope.zoomToCursor = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// handle the placement of the target\r\n\t\t\t\t\tif ( newRadius !== null ) {\r\n\r\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\r\n\r\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\r\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\r\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\r\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\r\n\t\t\t\t\t\t\t\t.add( scope.object.position );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\r\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\r\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\r\n\r\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\r\n\t\t\t\t\t\t\t// extremely large values\r\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\r\n\r\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\r\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\r\n\t\t\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\t\t\tzoomChanged = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscale = 1;\r\n\t\t\t\tperformCursorZoom = false;\r\n\r\n\t\t\t\t// update condition is:\r\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\r\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n\t\t\t\tif ( zoomChanged ||\r\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\r\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\r\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\r\n\r\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\r\n\r\n\t\t\t\t\tlastPosition.copy( scope.object.position );\r\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\r\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\r\n\r\n\t\t\t\t\tzoomChanged = false;\r\n\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\r\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\r\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\r\n\r\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\r\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\r\n\r\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\t\tscope._domElementKeyEvents = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\t\t// internals\r\n\t\t//\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst STATE = {\r\n\t\t\tNONE: - 1,\r\n\t\t\tROTATE: 0,\r\n\t\t\tDOLLY: 1,\r\n\t\t\tPAN: 2,\r\n\t\t\tTOUCH_ROTATE: 3,\r\n\t\t\tTOUCH_PAN: 4,\r\n\t\t\tTOUCH_DOLLY_PAN: 5,\r\n\t\t\tTOUCH_DOLLY_ROTATE: 6\r\n\t\t};\r\n\r\n\t\tlet state = STATE.NONE;\r\n\r\n\t\tconst EPS = 0.000001;\r\n\r\n\t\t// current position in spherical coordinates\r\n\t\tconst spherical = new Spherical();\r\n\t\tconst sphericalDelta = new Spherical();\r\n\r\n\t\tlet scale = 1;\r\n\t\tconst panOffset = new Vector3();\r\n\r\n\t\tconst rotateStart = new Vector2();\r\n\t\tconst rotateEnd = new Vector2();\r\n\t\tconst rotateDelta = new Vector2();\r\n\r\n\t\tconst panStart = new Vector2();\r\n\t\tconst panEnd = new Vector2();\r\n\t\tconst panDelta = new Vector2();\r\n\r\n\t\tconst dollyStart = new Vector2();\r\n\t\tconst dollyEnd = new Vector2();\r\n\t\tconst dollyDelta = new Vector2();\r\n\r\n\t\tconst dollyDirection = new Vector3();\r\n\t\tconst mouse = new Vector2();\r\n\t\tlet performCursorZoom = false;\r\n\r\n\t\tconst pointers = [];\r\n\t\tconst pointerPositions = {};\r\n\r\n\t\tfunction getAutoRotationAngle( deltaTime ) {\r\n\r\n\t\t\tif ( deltaTime !== null ) {\r\n\r\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getZoomScale() {\r\n\r\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateLeft( angle ) {\r\n\r\n\t\t\tsphericalDelta.theta -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotateUp( angle ) {\r\n\r\n\t\t\tsphericalDelta.phi -= angle;\r\n\r\n\t\t}\r\n\r\n\t\tconst panLeft = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panLeft( distance, objectMatrix ) {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\r\n\t\t\t\tv.multiplyScalar( - distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tconst panUp = function () {\r\n\r\n\t\t\tconst v = new Vector3();\r\n\r\n\t\t\treturn function panUp( distance, objectMatrix ) {\r\n\r\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\r\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv.multiplyScalar( distance );\r\n\r\n\t\t\t\tpanOffset.add( v );\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\t// deltaX and deltaY are in pixels; right and down are positive\r\n\t\tconst pan = function () {\r\n\r\n\t\t\tconst offset = new Vector3();\r\n\r\n\t\t\treturn function pan( deltaX, deltaY ) {\r\n\r\n\t\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t\t// perspective\r\n\t\t\t\t\tconst position = scope.object.position;\r\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\t\t\t\t\tlet targetDistance = offset.length();\r\n\r\n\t\t\t\t\t// half of the fov is center to top of screen\r\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\r\n\r\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\r\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\r\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t\t// orthographic\r\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\r\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// camera neither orthographic nor perspective\r\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\r\n\t\t\t\t\tscope.enablePan = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tfunction dollyOut( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscale /= dollyScale;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction dollyIn( dollyScale ) {\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\tscale *= dollyScale;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\t\tscope.enableZoom = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateMouseParameters( event ) {\r\n\r\n\t\t\tif ( ! scope.zoomToCursor ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tperformCursorZoom = true;\r\n\r\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\r\n\t\t\tconst x = event.clientX - rect.left;\r\n\t\t\tconst y = event.clientY - rect.top;\r\n\t\t\tconst w = rect.width;\r\n\t\t\tconst h = rect.height;\r\n\r\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\r\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\r\n\r\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfunction clampDistance( dist ) {\r\n\r\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event callbacks - update the object state\r\n\t\t//\r\n\r\n\t\tfunction handleMouseDownRotate( event ) {\r\n\r\n\t\t\trotateStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownDolly( event ) {\r\n\r\n\t\t\tupdateMouseParameters( event );\r\n\t\t\tdollyStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseDownPan( event ) {\r\n\r\n\t\t\tpanStart.set( event.clientX, event.clientY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveRotate( event ) {\r\n\r\n\t\t\trotateEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMoveDolly( event ) {\r\n\r\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\r\n\r\n\t\t\tif ( dollyDelta.y > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t\t} else if ( dollyDelta.y < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseMovePan( event ) {\r\n\r\n\t\t\tpanEnd.set( event.clientX, event.clientY );\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleMouseWheel( event ) {\r\n\r\n\t\t\tupdateMouseParameters( event );\r\n\r\n\t\t\tif ( event.deltaY < 0 ) {\r\n\r\n\t\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t\t} else if ( event.deltaY > 0 ) {\r\n\r\n\t\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleKeyDown( event ) {\r\n\r\n\t\t\tlet needsUpdate = false;\r\n\r\n\t\t\tswitch ( event.code ) {\r\n\r\n\t\t\t\tcase scope.keys.UP:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.BOTTOM:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.LEFT:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase scope.keys.RIGHT:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tneedsUpdate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t// prevent the browser from scrolling on cursor keys\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartRotate() {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\r\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\r\n\r\n\t\t\t\trotateStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartPan() {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\r\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\r\n\r\n\t\t\t\tpanStart.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDolly() {\r\n\r\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\r\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyStart.set( 0, distance );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyPan() {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchStartDollyRotate() {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveRotate( event ) {\r\n\r\n\t\t\tif ( pointers.length == 1 ) {\r\n\r\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\trotateEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\t\tconst element = scope.domElement;\r\n\r\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMovePan( event ) {\r\n\r\n\t\t\tif ( pointers.length === 1 ) {\r\n\r\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\r\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\r\n\r\n\t\t\t\tpanEnd.set( x, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\t\tpanStart.copy( panEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDolly( event ) {\r\n\r\n\t\t\tconst position = getSecondPointerPosition( event );\r\n\r\n\t\t\tconst dx = event.pageX - position.x;\r\n\t\t\tconst dy = event.pageY - position.y;\r\n\r\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\t\tdollyEnd.set( 0, distance );\r\n\r\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\r\n\r\n\t\t\tdollyOut( dollyDelta.y );\r\n\r\n\t\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyPan( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTouchMoveDollyRotate( event ) {\r\n\r\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\t// event handlers - FSM: listen for events and reset state\r\n\t\t//\r\n\r\n\t\tfunction onPointerDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( pointers.length === 0 ) {\r\n\r\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\r\n\r\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\taddPointer( event );\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchStart( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseDown( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerMove( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tif ( event.pointerType === 'touch' ) {\r\n\r\n\t\t\t\tonTouchMove( event );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonMouseMove( event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onPointerUp( event ) {\r\n\r\n\t\t\tremovePointer( event );\r\n\r\n\t\t\tif ( pointers.length === 0 ) {\r\n\r\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\r\n\r\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\r\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseDown( event ) {\r\n\r\n\t\t\tlet mouseAction;\r\n\r\n\t\t\tswitch ( event.button ) {\r\n\r\n\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tmouseAction = - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( mouseAction ) {\r\n\r\n\t\t\t\tcase MOUSE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownDolly( event );\r\n\r\n\t\t\t\t\tstate = STATE.DOLLY;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.ROTATE:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MOUSE.PAN:\r\n\r\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseMove( event ) {\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveRotate( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.DOLLY:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMoveDolly( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseMovePan( event );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMouseWheel( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\thandleMouseWheel( event );\r\n\r\n\t\t\tscope.dispatchEvent( _endEvent );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onKeyDown( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\r\n\r\n\t\t\thandleKeyDown( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchStart( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( pointers.length ) {\r\n\r\n\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartRotate();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartPan();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\r\n\r\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\r\n\r\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( _startEvent );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onTouchMove( event ) {\r\n\r\n\t\t\ttrackPointer( event );\r\n\r\n\t\t\tswitch ( state ) {\r\n\r\n\t\t\t\tcase STATE.TOUCH_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMovePan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyPan( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\r\n\r\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\r\n\r\n\t\t\t\t\tscope.update();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextMenu( event ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPointer( event ) {\r\n\r\n\t\t\tpointers.push( event );\r\n\r\n\t\t}\r\n\r\n\t\tfunction removePointer( event ) {\r\n\r\n\t\t\tdelete pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\r\n\r\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\r\n\r\n\t\t\t\t\tpointers.splice( i, 1 );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction trackPointer( event ) {\r\n\r\n\t\t\tlet position = pointerPositions[ event.pointerId ];\r\n\r\n\t\t\tif ( position === undefined ) {\r\n\r\n\t\t\t\tposition = new Vector2();\r\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.set( event.pageX, event.pageY );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getSecondPointerPosition( event ) {\r\n\r\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\r\n\r\n\t\t\treturn pointerPositions[ pointer.pointerId ];\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\r\n\r\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\r\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\r\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\r\n\r\n\t\t// force an update at start\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OrbitControls };\r\n", null, null, "import {\r\n\tColor,\r\n\tMatrix4,\r\n\tMesh,\r\n\tPerspectiveCamera,\r\n\tPlane,\r\n\tShaderMaterial,\r\n\tUniformsUtils,\r\n\tVector3,\r\n\tVector4,\r\n\tWebGLRenderTarget,\r\n\tHalfFloatType\r\n} from 'three';\r\n\r\nclass Reflector extends Mesh {\r\n\r\n\tconstructor( geometry, options = {} ) {\r\n\r\n\t\tsuper( geometry );\r\n\r\n\t\tthis.isReflector = true;\r\n\r\n\t\tthis.type = 'Reflector';\r\n\t\tthis.camera = new PerspectiveCamera();\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0x7F7F7F );\r\n\t\tconst textureWidth = options.textureWidth || 512;\r\n\t\tconst textureHeight = options.textureHeight || 512;\r\n\t\tconst clipBias = options.clipBias || 0;\r\n\t\tconst shader = options.shader || Reflector.ReflectorShader;\r\n\t\tconst multisample = ( options.multisample !== undefined ) ? options.multisample : 4;\r\n\r\n\t\t//\r\n\r\n\t\tconst reflectorPlane = new Plane();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst reflectorWorldPosition = new Vector3();\r\n\t\tconst cameraWorldPosition = new Vector3();\r\n\t\tconst rotationMatrix = new Matrix4();\r\n\t\tconst lookAtPosition = new Vector3( 0, 0, - 1 );\r\n\t\tconst clipPlane = new Vector4();\r\n\r\n\t\tconst view = new Vector3();\r\n\t\tconst target = new Vector3();\r\n\t\tconst q = new Vector4();\r\n\r\n\t\tconst textureMatrix = new Matrix4();\r\n\t\tconst virtualCamera = this.camera;\r\n\r\n\t\tconst renderTarget = new WebGLRenderTarget( textureWidth, textureHeight, { samples: multisample, type: HalfFloatType } );\r\n\r\n\t\tconst material = new ShaderMaterial( {\r\n\t\t\tname: ( shader.name !== undefined ) ? shader.name : 'unspecified',\r\n\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\tvertexShader: shader.vertexShader\r\n\t\t} );\r\n\r\n\t\tmaterial.uniforms[ 'tDiffuse' ].value = renderTarget.texture;\r\n\t\tmaterial.uniforms[ 'color' ].value = color;\r\n\t\tmaterial.uniforms[ 'textureMatrix' ].value = textureMatrix;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\treflectorWorldPosition.setFromMatrixPosition( scope.matrixWorld );\r\n\t\t\tcameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\r\n\r\n\t\t\trotationMatrix.extractRotation( scope.matrixWorld );\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t\tnormal.applyMatrix4( rotationMatrix );\r\n\r\n\t\t\tview.subVectors( reflectorWorldPosition, cameraWorldPosition );\r\n\r\n\t\t\t// Avoid rendering when reflector is facing away\r\n\r\n\t\t\tif ( view.dot( normal ) > 0 ) return;\r\n\r\n\t\t\tview.reflect( normal ).negate();\r\n\t\t\tview.add( reflectorWorldPosition );\r\n\r\n\t\t\trotationMatrix.extractRotation( camera.matrixWorld );\r\n\r\n\t\t\tlookAtPosition.set( 0, 0, - 1 );\r\n\t\t\tlookAtPosition.applyMatrix4( rotationMatrix );\r\n\t\t\tlookAtPosition.add( cameraWorldPosition );\r\n\r\n\t\t\ttarget.subVectors( reflectorWorldPosition, lookAtPosition );\r\n\t\t\ttarget.reflect( normal ).negate();\r\n\t\t\ttarget.add( reflectorWorldPosition );\r\n\r\n\t\t\tvirtualCamera.position.copy( view );\r\n\t\t\tvirtualCamera.up.set( 0, 1, 0 );\r\n\t\t\tvirtualCamera.up.applyMatrix4( rotationMatrix );\r\n\t\t\tvirtualCamera.up.reflect( normal );\r\n\t\t\tvirtualCamera.lookAt( target );\r\n\r\n\t\t\tvirtualCamera.far = camera.far; // Used in WebGLBackground\r\n\r\n\t\t\tvirtualCamera.updateMatrixWorld();\r\n\t\t\tvirtualCamera.projectionMatrix.copy( camera.projectionMatrix );\r\n\r\n\t\t\t// Update the texture matrix\r\n\t\t\ttextureMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\t\t\ttextureMatrix.multiply( virtualCamera.projectionMatrix );\r\n\t\t\ttextureMatrix.multiply( virtualCamera.matrixWorldInverse );\r\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t\t\t// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\r\n\t\t\t// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\r\n\t\t\treflectorPlane.setFromNormalAndCoplanarPoint( normal, reflectorWorldPosition );\r\n\t\t\treflectorPlane.applyMatrix4( virtualCamera.matrixWorldInverse );\r\n\r\n\t\t\tclipPlane.set( reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant );\r\n\r\n\t\t\tconst projectionMatrix = virtualCamera.projectionMatrix;\r\n\r\n\t\t\tq.x = ( Math.sign( clipPlane.x ) + projectionMatrix.elements[ 8 ] ) / projectionMatrix.elements[ 0 ];\r\n\t\t\tq.y = ( Math.sign( clipPlane.y ) + projectionMatrix.elements[ 9 ] ) / projectionMatrix.elements[ 5 ];\r\n\t\t\tq.z = - 1.0;\r\n\t\t\tq.w = ( 1.0 + projectionMatrix.elements[ 10 ] ) / projectionMatrix.elements[ 14 ];\r\n\r\n\t\t\t// Calculate the scaled plane vector\r\n\t\t\tclipPlane.multiplyScalar( 2.0 / clipPlane.dot( q ) );\r\n\r\n\t\t\t// Replacing the third row of the projection matrix\r\n\t\t\tprojectionMatrix.elements[ 2 ] = clipPlane.x;\r\n\t\t\tprojectionMatrix.elements[ 6 ] = clipPlane.y;\r\n\t\t\tprojectionMatrix.elements[ 10 ] = clipPlane.z + 1.0 - clipBias;\r\n\t\t\tprojectionMatrix.elements[ 14 ] = clipPlane.w;\r\n\r\n\t\t\t// Render\r\n\t\t\tscope.visible = false;\r\n\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\t\t\tconst currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\r\n\r\n\t\t\trenderer.xr.enabled = false; // Avoid camera modification\r\n\t\t\trenderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget );\r\n\r\n\t\t\trenderer.state.buffers.depth.setMask( true ); // make sure the depth buffer is writable so it can be properly cleared, see #18897\r\n\r\n\t\t\tif ( renderer.autoClear === false ) renderer.clear();\r\n\t\t\trenderer.render( scene, virtualCamera );\r\n\r\n\t\t\trenderer.xr.enabled = currentXrEnabled;\r\n\t\t\trenderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\r\n\r\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t\t// Restore viewport\r\n\r\n\t\t\tconst viewport = camera.viewport;\r\n\r\n\t\t\tif ( viewport !== undefined ) {\r\n\r\n\t\t\t\trenderer.state.viewport( viewport );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.visible = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn renderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\trenderTarget.dispose();\r\n\t\t\tscope.material.dispose();\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nReflector.ReflectorShader = {\r\n\r\n\tname: 'ReflectorShader',\r\n\r\n\tuniforms: {\r\n\r\n\t\t'color': {\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tDiffuse': {\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\tvalue: null\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\t\tuniform mat4 textureMatrix;\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\t#include <common>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\t\tuniform vec3 color;\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\r\n\t\tfloat blendOverlay( float base, float blend ) {\r\n\r\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\r\n\r\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\r\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\r\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <colorspace_fragment>\r\n\r\n\t\t}`\r\n};\r\n\r\nexport { Reflector };\r\n", "import {\r\n\tColor,\r\n\tMatrix4,\r\n\tMesh,\r\n\tPerspectiveCamera,\r\n\tPlane,\r\n\tQuaternion,\r\n\tShaderMaterial,\r\n\tUniformsUtils,\r\n\tVector3,\r\n\tVector4,\r\n\tWebGLRenderTarget,\r\n\tHalfFloatType\r\n} from 'three';\r\n\r\nclass Refractor extends Mesh {\r\n\r\n\tconstructor( geometry, options = {} ) {\r\n\r\n\t\tsuper( geometry );\r\n\r\n\t\tthis.isRefractor = true;\r\n\r\n\t\tthis.type = 'Refractor';\r\n\t\tthis.camera = new PerspectiveCamera();\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0x7F7F7F );\r\n\t\tconst textureWidth = options.textureWidth || 512;\r\n\t\tconst textureHeight = options.textureHeight || 512;\r\n\t\tconst clipBias = options.clipBias || 0;\r\n\t\tconst shader = options.shader || Refractor.RefractorShader;\r\n\t\tconst multisample = ( options.multisample !== undefined ) ? options.multisample : 4;\r\n\r\n\t\t//\r\n\r\n\t\tconst virtualCamera = this.camera;\r\n\t\tvirtualCamera.matrixAutoUpdate = false;\r\n\t\tvirtualCamera.userData.refractor = true;\r\n\r\n\t\t//\r\n\r\n\t\tconst refractorPlane = new Plane();\r\n\t\tconst textureMatrix = new Matrix4();\r\n\r\n\t\t// render target\r\n\r\n\t\tconst renderTarget = new WebGLRenderTarget( textureWidth, textureHeight, { samples: multisample, type: HalfFloatType } );\r\n\r\n\t\t// material\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\ttransparent: true // ensures, refractors are drawn from farthest to closest\r\n\t\t} );\r\n\r\n\t\tthis.material.uniforms[ 'color' ].value = color;\r\n\t\tthis.material.uniforms[ 'tDiffuse' ].value = renderTarget.texture;\r\n\t\tthis.material.uniforms[ 'textureMatrix' ].value = textureMatrix;\r\n\r\n\t\t// functions\r\n\r\n\t\tconst visible = ( function () {\r\n\r\n\t\t\tconst refractorWorldPosition = new Vector3();\r\n\t\t\tconst cameraWorldPosition = new Vector3();\r\n\t\t\tconst rotationMatrix = new Matrix4();\r\n\r\n\t\t\tconst view = new Vector3();\r\n\t\t\tconst normal = new Vector3();\r\n\r\n\t\t\treturn function visible( camera ) {\r\n\r\n\t\t\t\trefractorWorldPosition.setFromMatrixPosition( scope.matrixWorld );\r\n\t\t\t\tcameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\r\n\r\n\t\t\t\tview.subVectors( refractorWorldPosition, cameraWorldPosition );\r\n\r\n\t\t\t\trotationMatrix.extractRotation( scope.matrixWorld );\r\n\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t\t\tnormal.applyMatrix4( rotationMatrix );\r\n\r\n\t\t\t\treturn view.dot( normal ) < 0;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )();\r\n\r\n\t\tconst updateRefractorPlane = ( function () {\r\n\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst position = new Vector3();\r\n\t\t\tconst quaternion = new Quaternion();\r\n\t\t\tconst scale = new Vector3();\r\n\r\n\t\t\treturn function updateRefractorPlane() {\r\n\r\n\t\t\t\tscope.matrixWorld.decompose( position, quaternion, scale );\r\n\t\t\t\tnormal.set( 0, 0, 1 ).applyQuaternion( quaternion ).normalize();\r\n\r\n\t\t\t\t// flip the normal because we want to cull everything above the plane\r\n\r\n\t\t\t\tnormal.negate();\r\n\r\n\t\t\t\trefractorPlane.setFromNormalAndCoplanarPoint( normal, position );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )();\r\n\r\n\t\tconst updateVirtualCamera = ( function () {\r\n\r\n\t\t\tconst clipPlane = new Plane();\r\n\t\t\tconst clipVector = new Vector4();\r\n\t\t\tconst q = new Vector4();\r\n\r\n\t\t\treturn function updateVirtualCamera( camera ) {\r\n\r\n\t\t\t\tvirtualCamera.matrixWorld.copy( camera.matrixWorld );\r\n\t\t\t\tvirtualCamera.matrixWorldInverse.copy( virtualCamera.matrixWorld ).invert();\r\n\t\t\t\tvirtualCamera.projectionMatrix.copy( camera.projectionMatrix );\r\n\t\t\t\tvirtualCamera.far = camera.far; // used in WebGLBackground\r\n\r\n\t\t\t\t// The following code creates an oblique view frustum for clipping.\r\n\t\t\t\t// see: Lengyel, Eric. “Oblique View Frustum Depth Projection and Clipping”.\r\n\t\t\t\t// Journal of Game Development, Vol. 1, No. 2 (2005), Charles River Media, pp. 5–16\r\n\r\n\t\t\t\tclipPlane.copy( refractorPlane );\r\n\t\t\t\tclipPlane.applyMatrix4( virtualCamera.matrixWorldInverse );\r\n\r\n\t\t\t\tclipVector.set( clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.constant );\r\n\r\n\t\t\t\t// calculate the clip-space corner point opposite the clipping plane and\r\n\t\t\t\t// transform it into camera space by multiplying it by the inverse of the projection matrix\r\n\r\n\t\t\t\tconst projectionMatrix = virtualCamera.projectionMatrix;\r\n\r\n\t\t\t\tq.x = ( Math.sign( clipVector.x ) + projectionMatrix.elements[ 8 ] ) / projectionMatrix.elements[ 0 ];\r\n\t\t\t\tq.y = ( Math.sign( clipVector.y ) + projectionMatrix.elements[ 9 ] ) / projectionMatrix.elements[ 5 ];\r\n\t\t\t\tq.z = - 1.0;\r\n\t\t\t\tq.w = ( 1.0 + projectionMatrix.elements[ 10 ] ) / projectionMatrix.elements[ 14 ];\r\n\r\n\t\t\t\t// calculate the scaled plane vector\r\n\r\n\t\t\t\tclipVector.multiplyScalar( 2.0 / clipVector.dot( q ) );\r\n\r\n\t\t\t\t// replacing the third row of the projection matrix\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 2 ] = clipVector.x;\r\n\t\t\t\tprojectionMatrix.elements[ 6 ] = clipVector.y;\r\n\t\t\t\tprojectionMatrix.elements[ 10 ] = clipVector.z + 1.0 - clipBias;\r\n\t\t\t\tprojectionMatrix.elements[ 14 ] = clipVector.w;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )();\r\n\r\n\t\t// This will update the texture matrix that is used for projective texture mapping in the shader.\r\n\t\t// see: http://developer.download.nvidia.com/assets/gamedev/docs/projective_texture_mapping.pdf\r\n\r\n\t\tfunction updateTextureMatrix( camera ) {\r\n\r\n\t\t\t// this matrix does range mapping to [ 0, 1 ]\r\n\r\n\t\t\ttextureMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\t// we use \"Object Linear Texgen\", so we need to multiply the texture matrix T\r\n\t\t\t// (matrix above) with the projection and view matrix of the virtual camera\r\n\t\t\t// and the model matrix of the refractor\r\n\r\n\t\t\ttextureMatrix.multiply( camera.projectionMatrix );\r\n\t\t\ttextureMatrix.multiply( camera.matrixWorldInverse );\r\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction render( renderer, scene, camera ) {\r\n\r\n\t\t\tscope.visible = false;\r\n\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\t\t\tconst currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\r\n\r\n\t\t\trenderer.xr.enabled = false; // avoid camera modification\r\n\t\t\trenderer.shadowMap.autoUpdate = false; // avoid re-computing shadows\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget );\r\n\t\t\tif ( renderer.autoClear === false ) renderer.clear();\r\n\t\t\trenderer.render( scene, virtualCamera );\r\n\r\n\t\t\trenderer.xr.enabled = currentXrEnabled;\r\n\t\t\trenderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\r\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t\t// restore viewport\r\n\r\n\t\t\tconst viewport = camera.viewport;\r\n\r\n\t\t\tif ( viewport !== undefined ) {\r\n\r\n\t\t\t\trenderer.state.viewport( viewport );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.visible = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\t// ensure refractors are rendered only once per frame\r\n\r\n\t\t\tif ( camera.userData.refractor === true ) return;\r\n\r\n\t\t\t// avoid rendering when the refractor is viewed from behind\r\n\r\n\t\t\tif ( ! visible( camera ) === true ) return;\r\n\r\n\t\t\t// update\r\n\r\n\t\t\tupdateRefractorPlane();\r\n\r\n\t\t\tupdateTextureMatrix( camera );\r\n\r\n\t\t\tupdateVirtualCamera( camera );\r\n\r\n\t\t\trender( renderer, scene, camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn renderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\trenderTarget.dispose();\r\n\t\t\tscope.material.dispose();\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nRefractor.RefractorShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'color': {\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tDiffuse': {\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\tvalue: null\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tuniform mat4 textureMatrix;\r\n\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform vec3 color;\r\n\t\tuniform sampler2D tDiffuse;\r\n\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\tfloat blendOverlay( float base, float blend ) {\r\n\r\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\r\n\r\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\r\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <colorspace_fragment>\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { Refractor };\r\n", "import {\r\n\tClock,\r\n\tColor,\r\n\tMatrix4,\r\n\tMesh,\r\n\tRepeatWrapping,\r\n\tShaderMaterial,\r\n\tTextureLoader,\r\n\tUniformsLib,\r\n\tUniformsUtils,\r\n\tVector2,\r\n\tVector4\r\n} from 'three';\r\nimport { Reflector } from '../objects/Reflector.js';\r\nimport { Refractor } from '../objects/Refractor.js';\r\n\r\n/**\r\n * References:\r\n *\thttps://alex.vlachos.com/graphics/Vlachos-SIGGRAPH10-WaterFlow.pdf\r\n *\thttp://graphicsrunner.blogspot.de/2010/08/water-using-flow-maps.html\r\n *\r\n */\r\n\r\nclass Water extends Mesh {\r\n\r\n\tconstructor( geometry, options = {} ) {\r\n\r\n\t\tsuper( geometry );\r\n\r\n\t\tthis.isWater = true;\r\n\r\n\t\tthis.type = 'Water';\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0xFFFFFF );\r\n\t\tconst textureWidth = options.textureWidth || 512;\r\n\t\tconst textureHeight = options.textureHeight || 512;\r\n\t\tconst clipBias = options.clipBias || 0;\r\n\t\tconst flowDirection = options.flowDirection || new Vector2( 1, 0 );\r\n\t\tconst flowSpeed = options.flowSpeed || 0.03;\r\n\t\tconst reflectivity = options.reflectivity || 0.02;\r\n\t\tconst scale = options.scale || 1;\r\n\t\tconst shader = options.shader || Water.WaterShader;\r\n\r\n\t\tconst textureLoader = new TextureLoader();\r\n\r\n\t\tconst flowMap = options.flowMap || undefined;\r\n\t\tconst normalMap0 = options.normalMap0 || textureLoader.load( 'textures/water/Water_1_M_Normal.jpg' );\r\n\t\tconst normalMap1 = options.normalMap1 || textureLoader.load( 'textures/water/Water_2_M_Normal.jpg' );\r\n\r\n\t\tconst cycle = 0.15; // a cycle of a flow map phase\r\n\t\tconst halfCycle = cycle * 0.5;\r\n\t\tconst textureMatrix = new Matrix4();\r\n\t\tconst clock = new Clock();\r\n\r\n\t\t// internal components\r\n\r\n\t\tif ( Reflector === undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Water: Required component Reflector not found.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( Refractor === undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Water: Required component Refractor not found.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst reflector = new Reflector( geometry, {\r\n\t\t\ttextureWidth: textureWidth,\r\n\t\t\ttextureHeight: textureHeight,\r\n\t\t\tclipBias: clipBias\r\n\t\t} );\r\n\r\n\t\tconst refractor = new Refractor( geometry, {\r\n\t\t\ttextureWidth: textureWidth,\r\n\t\t\ttextureHeight: textureHeight,\r\n\t\t\tclipBias: clipBias\r\n\t\t} );\r\n\r\n\t\treflector.matrixAutoUpdate = false;\r\n\t\trefractor.matrixAutoUpdate = false;\r\n\r\n\t\t// material\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib[ 'fog' ],\r\n\t\t\t\tshader.uniforms\r\n\t\t\t] ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\ttransparent: true,\r\n\t\t\tfog: true\r\n\t\t} );\r\n\r\n\t\tif ( flowMap !== undefined ) {\r\n\r\n\t\t\tthis.material.defines.USE_FLOWMAP = '';\r\n\t\t\tthis.material.uniforms[ 'tFlowMap' ] = {\r\n\t\t\t\ttype: 't',\r\n\t\t\t\tvalue: flowMap\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.uniforms[ 'flowDirection' ] = {\r\n\t\t\t\ttype: 'v2',\r\n\t\t\t\tvalue: flowDirection\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// maps\r\n\r\n\t\tnormalMap0.wrapS = normalMap0.wrapT = RepeatWrapping;\r\n\t\tnormalMap1.wrapS = normalMap1.wrapT = RepeatWrapping;\r\n\r\n\t\tthis.material.uniforms[ 'tReflectionMap' ].value = reflector.getRenderTarget().texture;\r\n\t\tthis.material.uniforms[ 'tRefractionMap' ].value = refractor.getRenderTarget().texture;\r\n\t\tthis.material.uniforms[ 'tNormalMap0' ].value = normalMap0;\r\n\t\tthis.material.uniforms[ 'tNormalMap1' ].value = normalMap1;\r\n\r\n\t\t// water\r\n\r\n\t\tthis.material.uniforms[ 'color' ].value = color;\r\n\t\tthis.material.uniforms[ 'reflectivity' ].value = reflectivity;\r\n\t\tthis.material.uniforms[ 'textureMatrix' ].value = textureMatrix;\r\n\r\n\t\t// inital values\r\n\r\n\t\tthis.material.uniforms[ 'config' ].value.x = 0; // flowMapOffset0\r\n\t\tthis.material.uniforms[ 'config' ].value.y = halfCycle; // flowMapOffset1\r\n\t\tthis.material.uniforms[ 'config' ].value.z = halfCycle; // halfCycle\r\n\t\tthis.material.uniforms[ 'config' ].value.w = scale; // scale\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction updateTextureMatrix( camera ) {\r\n\r\n\t\t\ttextureMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\ttextureMatrix.multiply( camera.projectionMatrix );\r\n\t\t\ttextureMatrix.multiply( camera.matrixWorldInverse );\r\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateFlow() {\r\n\r\n\t\t\tconst delta = clock.getDelta();\r\n\t\t\tconst config = scope.material.uniforms[ 'config' ];\r\n\r\n\t\t\tconfig.value.x += flowSpeed * delta; // flowMapOffset0\r\n\t\t\tconfig.value.y = config.value.x + halfCycle; // flowMapOffset1\r\n\r\n\t\t\t// Important: The distance between offsets should be always the value of \"halfCycle\".\r\n\t\t\t// Moreover, both offsets should be in the range of [ 0, cycle ].\r\n\t\t\t// This approach ensures a smooth water flow and avoids \"reset\" effects.\r\n\r\n\t\t\tif ( config.value.x >= cycle ) {\r\n\r\n\t\t\t\tconfig.value.x = 0;\r\n\t\t\t\tconfig.value.y = halfCycle;\r\n\r\n\t\t\t} else if ( config.value.y >= cycle ) {\r\n\r\n\t\t\t\tconfig.value.y = config.value.y - cycle;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\tupdateTextureMatrix( camera );\r\n\t\t\tupdateFlow();\r\n\r\n\t\t\tscope.visible = false;\r\n\r\n\t\t\treflector.matrixWorld.copy( scope.matrixWorld );\r\n\t\t\trefractor.matrixWorld.copy( scope.matrixWorld );\r\n\r\n\t\t\treflector.onBeforeRender( renderer, scene, camera );\r\n\t\t\trefractor.onBeforeRender( renderer, scene, camera );\r\n\r\n\t\t\tscope.visible = true;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nWater.WaterShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'color': {\r\n\t\t\ttype: 'c',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'reflectivity': {\r\n\t\t\ttype: 'f',\r\n\t\t\tvalue: 0\r\n\t\t},\r\n\r\n\t\t'tReflectionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tRefractionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap0': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap1': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\ttype: 'm4',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'config': {\r\n\t\t\ttype: 'v4',\r\n\t\t\tvalue: new Vector4()\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\t#include <common>\r\n\t\t#include <fog_pars_vertex>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\r\n\t\tuniform mat4 textureMatrix;\r\n\r\n\t\tvarying vec4 vCoord;\r\n\t\tvarying vec2 vUv;\r\n\t\tvarying vec3 vToEye;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tvCoord = textureMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\t\tvToEye = cameraPosition - worldPosition.xyz;\r\n\r\n\t\t\tvec4 mvPosition =  viewMatrix * worldPosition; // used in fog_vertex\r\n\t\t\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t#include <fog_vertex>\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\t#include <common>\r\n\t\t#include <fog_pars_fragment>\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\r\n\t\tuniform sampler2D tReflectionMap;\r\n\t\tuniform sampler2D tRefractionMap;\r\n\t\tuniform sampler2D tNormalMap0;\r\n\t\tuniform sampler2D tNormalMap1;\r\n\r\n\t\t#ifdef USE_FLOWMAP\r\n\t\t\tuniform sampler2D tFlowMap;\r\n\t\t#else\r\n\t\t\tuniform vec2 flowDirection;\r\n\t\t#endif\r\n\r\n\t\tuniform vec3 color;\r\n\t\tuniform float reflectivity;\r\n\t\tuniform vec4 config;\r\n\r\n\t\tvarying vec4 vCoord;\r\n\t\tvarying vec2 vUv;\r\n\t\tvarying vec3 vToEye;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\r\n\t\t\tfloat flowMapOffset0 = config.x;\r\n\t\t\tfloat flowMapOffset1 = config.y;\r\n\t\t\tfloat halfCycle = config.z;\r\n\t\t\tfloat scale = config.w;\r\n\r\n\t\t\tvec3 toEye = normalize( vToEye );\r\n\r\n\t\t\t// determine flow direction\r\n\t\t\tvec2 flow;\r\n\t\t\t#ifdef USE_FLOWMAP\r\n\t\t\t\tflow = texture2D( tFlowMap, vUv ).rg * 2.0 - 1.0;\r\n\t\t\t#else\r\n\t\t\t\tflow = flowDirection;\r\n\t\t\t#endif\r\n\t\t\tflow.x *= - 1.0;\r\n\r\n\t\t\t// sample normal maps (distort uvs with flowdata)\r\n\t\t\tvec4 normalColor0 = texture2D( tNormalMap0, ( vUv * scale ) + flow * flowMapOffset0 );\r\n\t\t\tvec4 normalColor1 = texture2D( tNormalMap1, ( vUv * scale ) + flow * flowMapOffset1 );\r\n\r\n\t\t\t// linear interpolate to get the final normal color\r\n\t\t\tfloat flowLerp = abs( halfCycle - flowMapOffset0 ) / halfCycle;\r\n\t\t\tvec4 normalColor = mix( normalColor0, normalColor1, flowLerp );\r\n\r\n\t\t\t// calculate normal vector\r\n\t\t\tvec3 normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\r\n\r\n\t\t\t// calculate the fresnel term to blend reflection and refraction maps\r\n\t\t\tfloat theta = max( dot( toEye, normal ), 0.0 );\r\n\t\t\tfloat reflectance = reflectivity + ( 1.0 - reflectivity ) * pow( ( 1.0 - theta ), 5.0 );\r\n\r\n\t\t\t// calculate final uv coords\r\n\t\t\tvec3 coord = vCoord.xyz / vCoord.w;\r\n\t\t\tvec2 uv = coord.xy + coord.z * normal.xz * 0.05;\r\n\r\n\t\t\tvec4 reflectColor = texture2D( tReflectionMap, vec2( 1.0 - uv.x, uv.y ) );\r\n\t\t\tvec4 refractColor = texture2D( tRefractionMap, uv );\r\n\r\n\t\t\t// multiply water color with the mix of both textures\r\n\t\t\tgl_FragColor = vec4( color, 1.0 ) * mix( refractColor, reflectColor, reflectance );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <colorspace_fragment>\r\n\t\t\t#include <fog_fragment>\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { Water };\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, "import {\r\n\tLine3,\r\n\tPlane,\r\n\tTriangle,\r\n\tVector3\r\n} from 'three';\r\n\r\n/**\r\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\r\n */\r\n\r\nconst Visible = 0;\r\nconst Deleted = 1;\r\n\r\nconst _v1 = new Vector3();\r\nconst _line3 = new Line3();\r\nconst _plane = new Plane();\r\nconst _closestPoint = new Vector3();\r\nconst _triangle = new Triangle();\r\n\r\nclass ConvexHull {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.tolerance = - 1;\r\n\r\n\t\tthis.faces = []; // the generated faces of the convex hull\r\n\t\tthis.newFaces = []; // this array holds the faces that are generated within a single iteration\r\n\r\n\t\t// the vertex lists work as follows:\r\n\t\t//\r\n\t\t// let 'a' and 'b' be 'Face' instances\r\n\t\t// let 'v' be points wrapped as instance of 'Vertex'\r\n\t\t//\r\n\t\t//     [v, v, ..., v, v, v, ...]\r\n\t\t//      ^             ^\r\n\t\t//      |             |\r\n\t\t//  a.outside     b.outside\r\n\t\t//\r\n\t\tthis.assigned = new VertexList();\r\n\t\tthis.unassigned = new VertexList();\r\n\r\n\t\tthis.vertices = []; \t// vertices of the hull (internal representation of given geometry data)\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\t// The algorithm needs at least four points.\r\n\r\n\t\tif ( points.length >= 4 ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.vertices.push( new VertexNode( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.compute();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromObject( object ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\tconst geometry = node.geometry;\r\n\r\n\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\tconst attribute = geometry.attributes.position;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst point = new Vector3();\r\n\r\n\t\t\t\t\t\tpoint.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\tpoints.push( point );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn this.setFromPoints( points );\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\tconst faces = this.faces;\r\n\r\n\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst face = faces[ i ];\r\n\r\n\t\t\t// compute signed distance and check on what half space the point lies\r\n\r\n\t\t\tif ( face.distanceToPoint( point ) > this.tolerance ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tintersectRay( ray, target ) {\r\n\r\n\t\t// based on \"Fast Ray-Convex Polyhedron Intersection\" by Eric Haines, GRAPHICS GEMS II\r\n\r\n\t\tconst faces = this.faces;\r\n\r\n\t\tlet tNear = - Infinity;\r\n\t\tlet tFar = Infinity;\r\n\r\n\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst face = faces[ i ];\r\n\r\n\t\t\t// interpret faces as planes for the further computation\r\n\r\n\t\t\tconst vN = face.distanceToPoint( ray.origin );\r\n\t\t\tconst vD = face.normal.dot( ray.direction );\r\n\r\n\t\t\t// if the origin is on the positive side of a plane (so the plane can \"see\" the origin) and\r\n\t\t\t// the ray is turned away or parallel to the plane, there is no intersection\r\n\r\n\t\t\tif ( vN > 0 && vD >= 0 ) return null;\r\n\r\n\t\t\t// compute the distance from the ray’s origin to the intersection with the plane\r\n\r\n\t\t\tconst t = ( vD !== 0 ) ? ( - vN / vD ) : 0;\r\n\r\n\t\t\t// only proceed if the distance is positive. a negative distance means the intersection point\r\n\t\t\t// lies \"behind\" the origin\r\n\r\n\t\t\tif ( t <= 0 ) continue;\r\n\r\n\t\t\t// now categorized plane as front-facing or back-facing\r\n\r\n\t\t\tif ( vD > 0 ) {\r\n\r\n\t\t\t\t// plane faces away from the ray, so this plane is a back-face\r\n\r\n\t\t\t\ttFar = Math.min( t, tFar );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// front-face\r\n\r\n\t\t\t\ttNear = Math.max( t, tNear );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tNear > tFar ) {\r\n\r\n\t\t\t\t// if tNear ever is greater than tFar, the ray must miss the convex hull\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// evaluate intersection point\r\n\r\n\t\t// always try tNear first since its the closer intersection point\r\n\r\n\t\tif ( tNear !== - Infinity ) {\r\n\r\n\t\t\tray.at( tNear, target );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tray.at( tFar, target );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tintersectsRay( ray ) {\r\n\r\n\t\treturn this.intersectRay( ray, _v1 ) !== null;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.faces = [];\r\n\t\tthis.vertices = [];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\r\n\r\n\taddVertexToFace( vertex, face ) {\r\n\r\n\t\tvertex.face = face;\r\n\r\n\t\tif ( face.outside === null ) {\r\n\r\n\t\t\tthis.assigned.append( vertex );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.assigned.insertBefore( face.outside, vertex );\r\n\r\n\t\t}\r\n\r\n\t\tface.outside = vertex;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Removes a vertex from the 'assigned' list of vertices and from the given face\r\n\r\n\tremoveVertexFromFace( vertex, face ) {\r\n\r\n\t\tif ( vertex === face.outside ) {\r\n\r\n\t\t\t// fix face.outside link\r\n\r\n\t\t\tif ( vertex.next !== null && vertex.next.face === face ) {\r\n\r\n\t\t\t\t// face has at least 2 outside vertices, move the 'outside' reference\r\n\r\n\t\t\t\tface.outside = vertex.next;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// vertex was the only outside vertex that face had\r\n\r\n\t\t\t\tface.outside = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.assigned.remove( vertex );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertex list\r\n\r\n\tremoveAllVerticesFromFace( face ) {\r\n\r\n\t\tif ( face.outside !== null ) {\r\n\r\n\t\t\t// reference to the first and last vertex of this face\r\n\r\n\t\t\tconst start = face.outside;\r\n\t\t\tlet end = face.outside;\r\n\r\n\t\t\twhile ( end.next !== null && end.next.face === face ) {\r\n\r\n\t\t\t\tend = end.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.assigned.removeSubList( start, end );\r\n\r\n\t\t\t// fix references\r\n\r\n\t\t\tstart.prev = end.next = null;\r\n\t\t\tface.outside = null;\r\n\r\n\t\t\treturn start;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Removes all the visible vertices that 'face' is able to see\r\n\r\n\tdeleteFaceVertices( face, absorbingFace ) {\r\n\r\n\t\tconst faceVertices = this.removeAllVerticesFromFace( face );\r\n\r\n\t\tif ( faceVertices !== undefined ) {\r\n\r\n\t\t\tif ( absorbingFace === undefined ) {\r\n\r\n\t\t\t\t// mark the vertices to be reassigned to some other face\r\n\r\n\t\t\t\tthis.unassigned.appendChain( faceVertices );\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// if there's an absorbing face try to assign as many vertices as possible to it\r\n\r\n\t\t\t\tlet vertex = faceVertices;\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\t// we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\r\n\t\t\t\t\t// will be changed by upcoming method calls\r\n\r\n\t\t\t\t\tconst nextVertex = vertex.next;\r\n\r\n\t\t\t\t\tconst distance = absorbingFace.distanceToPoint( vertex.point );\r\n\r\n\t\t\t\t\t// check if 'vertex' is able to see 'absorbingFace'\r\n\r\n\t\t\t\t\tif ( distance > this.tolerance ) {\r\n\r\n\t\t\t\t\t\tthis.addVertexToFace( vertex, absorbingFace );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis.unassigned.append( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// now assign next vertex\r\n\r\n\t\t\t\t\tvertex = nextVertex;\r\n\r\n\t\t\t\t} while ( vertex !== null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Reassigns as many vertices as possible from the unassigned list to the new faces\r\n\r\n\tresolveUnassignedPoints( newFaces ) {\r\n\r\n\t\tif ( this.unassigned.isEmpty() === false ) {\r\n\r\n\t\t\tlet vertex = this.unassigned.first();\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\t// buffer 'next' reference, see .deleteFaceVertices()\r\n\r\n\t\t\t\tconst nextVertex = vertex.next;\r\n\r\n\t\t\t\tlet maxDistance = this.tolerance;\r\n\r\n\t\t\t\tlet maxFace = null;\r\n\r\n\t\t\t\tfor ( let i = 0; i < newFaces.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst face = newFaces[ i ];\r\n\r\n\t\t\t\t\tif ( face.mark === Visible ) {\r\n\r\n\t\t\t\t\t\tconst distance = face.distanceToPoint( vertex.point );\r\n\r\n\t\t\t\t\t\tif ( distance > maxDistance ) {\r\n\r\n\t\t\t\t\t\t\tmaxDistance = distance;\r\n\t\t\t\t\t\t\tmaxFace = face;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( maxDistance > 1000 * this.tolerance ) break;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 'maxFace' can be null e.g. if there are identical vertices\r\n\r\n\t\t\t\tif ( maxFace !== null ) {\r\n\r\n\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvertex = nextVertex;\r\n\r\n\t\t\t} while ( vertex !== null );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Computes the extremes of a simplex which will be the initial hull\r\n\r\n\tcomputeExtremes() {\r\n\r\n\t\tconst min = new Vector3();\r\n\t\tconst max = new Vector3();\r\n\r\n\t\tconst minVertices = [];\r\n\t\tconst maxVertices = [];\r\n\r\n\t\t// initially assume that the first vertex is the min/max\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tminVertices[ i ] = maxVertices[ i ] = this.vertices[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t\tmin.copy( this.vertices[ 0 ].point );\r\n\t\tmax.copy( this.vertices[ 0 ].point );\r\n\r\n\t\t// compute the min/max vertex on all six directions\r\n\r\n\t\tfor ( let i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst vertex = this.vertices[ i ];\r\n\t\t\tconst point = vertex.point;\r\n\r\n\t\t\t// update the min coordinates\r\n\r\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tif ( point.getComponent( j ) < min.getComponent( j ) ) {\r\n\r\n\t\t\t\t\tmin.setComponent( j, point.getComponent( j ) );\r\n\t\t\t\t\tminVertices[ j ] = vertex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update the max coordinates\r\n\r\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tif ( point.getComponent( j ) > max.getComponent( j ) ) {\r\n\r\n\t\t\t\t\tmax.setComponent( j, point.getComponent( j ) );\r\n\t\t\t\t\tmaxVertices[ j ] = vertex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use min/max vectors to compute an optimal epsilon\r\n\r\n\t\tthis.tolerance = 3 * Number.EPSILON * (\r\n\t\t\tMath.max( Math.abs( min.x ), Math.abs( max.x ) ) +\r\n\t\t\tMath.max( Math.abs( min.y ), Math.abs( max.y ) ) +\r\n\t\t\tMath.max( Math.abs( min.z ), Math.abs( max.z ) )\r\n\t\t);\r\n\r\n\t\treturn { min: minVertices, max: maxVertices };\r\n\r\n\t}\r\n\r\n\t// Computes the initial simplex assigning to its faces all the points\r\n\t// that are candidates to form part of the hull\r\n\r\n\tcomputeInitialHull() {\r\n\r\n\t\tconst vertices = this.vertices;\r\n\t\tconst extremes = this.computeExtremes();\r\n\t\tconst min = extremes.min;\r\n\t\tconst max = extremes.max;\r\n\r\n\t\t// 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\r\n\t\t// (max.x - min.x)\r\n\t\t// (max.y - min.y)\r\n\t\t// (max.z - min.z)\r\n\r\n\t\tlet maxDistance = 0;\r\n\t\tlet index = 0;\r\n\r\n\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\tconst distance = max[ i ].point.getComponent( i ) - min[ i ].point.getComponent( i );\r\n\r\n\t\t\tif ( distance > maxDistance ) {\r\n\r\n\t\t\t\tmaxDistance = distance;\r\n\t\t\t\tindex = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst v0 = min[ index ];\r\n\t\tconst v1 = max[ index ];\r\n\t\tlet v2;\r\n\t\tlet v3;\r\n\r\n\t\t// 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\r\n\r\n\t\tmaxDistance = 0;\r\n\t\t_line3.set( v0.point, v1.point );\r\n\r\n\t\tfor ( let i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst vertex = vertices[ i ];\r\n\r\n\t\t\tif ( vertex !== v0 && vertex !== v1 ) {\r\n\r\n\t\t\t\t_line3.closestPointToPoint( vertex.point, true, _closestPoint );\r\n\r\n\t\t\t\tconst distance = _closestPoint.distanceToSquared( vertex.point );\r\n\r\n\t\t\t\tif ( distance > maxDistance ) {\r\n\r\n\t\t\t\t\tmaxDistance = distance;\r\n\t\t\t\t\tv2 = vertex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\r\n\r\n\t\tmaxDistance = - 1;\r\n\t\t_plane.setFromCoplanarPoints( v0.point, v1.point, v2.point );\r\n\r\n\t\tfor ( let i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst vertex = vertices[ i ];\r\n\r\n\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 ) {\r\n\r\n\t\t\t\tconst distance = Math.abs( _plane.distanceToPoint( vertex.point ) );\r\n\r\n\t\t\t\tif ( distance > maxDistance ) {\r\n\r\n\t\t\t\t\tmaxDistance = distance;\r\n\t\t\t\t\tv3 = vertex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst faces = [];\r\n\r\n\t\tif ( _plane.distanceToPoint( v3.point ) < 0 ) {\r\n\r\n\t\t\t// the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\r\n\r\n\t\t\tfaces.push(\r\n\t\t\t\tFace.create( v0, v1, v2 ),\r\n\t\t\t\tFace.create( v3, v1, v0 ),\r\n\t\t\t\tFace.create( v3, v2, v1 ),\r\n\t\t\t\tFace.create( v3, v0, v2 )\r\n\t\t\t);\r\n\r\n\t\t\t// set the twin edge\r\n\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tconst j = ( i + 1 ) % 3;\r\n\r\n\t\t\t\t// join face[ i ] i > 0, with the first face\r\n\r\n\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( j ) );\r\n\r\n\t\t\t\t// join face[ i ] with face[ i + 1 ], 1 <= i <= 3\r\n\r\n\t\t\t\tfaces[ i + 1 ].getEdge( 1 ).setTwin( faces[ j + 1 ].getEdge( 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\r\n\r\n\t\t\tfaces.push(\r\n\t\t\t\tFace.create( v0, v2, v1 ),\r\n\t\t\t\tFace.create( v3, v0, v1 ),\r\n\t\t\t\tFace.create( v3, v1, v2 ),\r\n\t\t\t\tFace.create( v3, v2, v0 )\r\n\t\t\t);\r\n\r\n\t\t\t// set the twin edge\r\n\r\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tconst j = ( i + 1 ) % 3;\r\n\r\n\t\t\t\t// join face[ i ] i > 0, with the first face\r\n\r\n\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( ( 3 - i ) % 3 ) );\r\n\r\n\t\t\t\t// join face[ i ] with face[ i + 1 ]\r\n\r\n\t\t\t\tfaces[ i + 1 ].getEdge( 0 ).setTwin( faces[ j + 1 ].getEdge( 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// the initial hull is the tetrahedron\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\t// initial assignment of vertices to the faces of the tetrahedron\r\n\r\n\t\tfor ( let i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst vertex = vertices[ i ];\r\n\r\n\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3 ) {\r\n\r\n\t\t\t\tmaxDistance = this.tolerance;\r\n\t\t\t\tlet maxFace = null;\r\n\r\n\t\t\t\tfor ( let j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\tconst distance = this.faces[ j ].distanceToPoint( vertex.point );\r\n\r\n\t\t\t\t\tif ( distance > maxDistance ) {\r\n\r\n\t\t\t\t\t\tmaxDistance = distance;\r\n\t\t\t\t\t\tmaxFace = this.faces[ j ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( maxFace !== null ) {\r\n\r\n\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Removes inactive faces\r\n\r\n\treindexFaces() {\r\n\r\n\t\tconst activeFaces = [];\r\n\r\n\t\tfor ( let i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tconst face = this.faces[ i ];\r\n\r\n\t\t\tif ( face.mark === Visible ) {\r\n\r\n\t\t\t\tactiveFaces.push( face );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.faces = activeFaces;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Finds the next vertex to create faces with the current hull\r\n\r\n\tnextVertexToAdd() {\r\n\r\n\t\t// if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\r\n\r\n\t\tif ( this.assigned.isEmpty() === false ) {\r\n\r\n\t\t\tlet eyeVertex, maxDistance = 0;\r\n\r\n\t\t\t// grap the first available face and start with the first visible vertex of that face\r\n\r\n\t\t\tconst eyeFace = this.assigned.first().face;\r\n\t\t\tlet vertex = eyeFace.outside;\r\n\r\n\t\t\t// now calculate the farthest vertex that face can see\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tconst distance = eyeFace.distanceToPoint( vertex.point );\r\n\r\n\t\t\t\tif ( distance > maxDistance ) {\r\n\r\n\t\t\t\t\tmaxDistance = distance;\r\n\t\t\t\t\teyeVertex = vertex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvertex = vertex.next;\r\n\r\n\t\t\t} while ( vertex !== null && vertex.face === eyeFace );\r\n\r\n\t\t\treturn eyeVertex;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Computes a chain of half edges in CCW order called the 'horizon'.\r\n\t// For an edge to be part of the horizon it must join a face that can see\r\n\t// 'eyePoint' and a face that cannot see 'eyePoint'.\r\n\r\n\tcomputeHorizon( eyePoint, crossEdge, face, horizon ) {\r\n\r\n\t\t// moves face's vertices to the 'unassigned' vertex list\r\n\r\n\t\tthis.deleteFaceVertices( face );\r\n\r\n\t\tface.mark = Deleted;\r\n\r\n\t\tlet edge;\r\n\r\n\t\tif ( crossEdge === null ) {\r\n\r\n\t\t\tedge = crossEdge = face.getEdge( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// start from the next edge since 'crossEdge' was already analyzed\r\n\t\t\t// (actually 'crossEdge.twin' was the edge who called this method recursively)\r\n\r\n\t\t\tedge = crossEdge.next;\r\n\r\n\t\t}\r\n\r\n\t\tdo {\r\n\r\n\t\t\tconst twinEdge = edge.twin;\r\n\t\t\tconst oppositeFace = twinEdge.face;\r\n\r\n\t\t\tif ( oppositeFace.mark === Visible ) {\r\n\r\n\t\t\t\tif ( oppositeFace.distanceToPoint( eyePoint ) > this.tolerance ) {\r\n\r\n\t\t\t\t\t// the opposite face can see the vertex, so proceed with next edge\r\n\r\n\t\t\t\t\tthis.computeHorizon( eyePoint, twinEdge, oppositeFace, horizon );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the opposite face can't see the vertex, so this edge is part of the horizon\r\n\r\n\t\t\t\t\thorizon.push( edge );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tedge = edge.next;\r\n\r\n\t\t} while ( edge !== crossEdge );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\r\n\r\n\taddAdjoiningFace( eyeVertex, horizonEdge ) {\r\n\r\n\t\t// all the half edges are created in ccw order thus the face is always pointing outside the hull\r\n\r\n\t\tconst face = Face.create( eyeVertex, horizonEdge.tail(), horizonEdge.head() );\r\n\r\n\t\tthis.faces.push( face );\r\n\r\n\t\t// join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\r\n\r\n\t\tface.getEdge( - 1 ).setTwin( horizonEdge.twin );\r\n\r\n\t\treturn face.getEdge( 0 ); // the half edge whose vertex is the eyeVertex\r\n\r\n\r\n\t}\r\n\r\n\t//  Adds 'horizon.length' faces to the hull, each face will be linked with the\r\n\t//  horizon opposite face and the face on the left/right\r\n\r\n\taddNewFaces( eyeVertex, horizon ) {\r\n\r\n\t\tthis.newFaces = [];\r\n\r\n\t\tlet firstSideEdge = null;\r\n\t\tlet previousSideEdge = null;\r\n\r\n\t\tfor ( let i = 0; i < horizon.length; i ++ ) {\r\n\r\n\t\t\tconst horizonEdge = horizon[ i ];\r\n\r\n\t\t\t// returns the right side edge\r\n\r\n\t\t\tconst sideEdge = this.addAdjoiningFace( eyeVertex, horizonEdge );\r\n\r\n\t\t\tif ( firstSideEdge === null ) {\r\n\r\n\t\t\t\tfirstSideEdge = sideEdge;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\r\n\r\n\t\t\t\tsideEdge.next.setTwin( previousSideEdge );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.newFaces.push( sideEdge.face );\r\n\t\t\tpreviousSideEdge = sideEdge;\r\n\r\n\t\t}\r\n\r\n\t\t// perform final join of new faces\r\n\r\n\t\tfirstSideEdge.next.setTwin( previousSideEdge );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Adds a vertex to the hull\r\n\r\n\taddVertexToHull( eyeVertex ) {\r\n\r\n\t\tconst horizon = [];\r\n\r\n\t\tthis.unassigned.clear();\r\n\r\n\t\t// remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\r\n\r\n\t\tthis.removeVertexFromFace( eyeVertex, eyeVertex.face );\r\n\r\n\t\tthis.computeHorizon( eyeVertex.point, null, eyeVertex.face, horizon );\r\n\r\n\t\tthis.addNewFaces( eyeVertex, horizon );\r\n\r\n\t\t// reassign 'unassigned' vertices to the new faces\r\n\r\n\t\tthis.resolveUnassignedPoints( this.newFaces );\r\n\r\n\t\treturn\tthis;\r\n\r\n\t}\r\n\r\n\tcleanup() {\r\n\r\n\t\tthis.assigned.clear();\r\n\t\tthis.unassigned.clear();\r\n\t\tthis.newFaces = [];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcompute() {\r\n\r\n\t\tlet vertex;\r\n\r\n\t\tthis.computeInitialHull();\r\n\r\n\t\t// add all available vertices gradually to the hull\r\n\r\n\t\twhile ( ( vertex = this.nextVertexToAdd() ) !== undefined ) {\r\n\r\n\t\t\tthis.addVertexToHull( vertex );\r\n\r\n\t\t}\r\n\r\n\t\tthis.reindexFaces();\r\n\r\n\t\tthis.cleanup();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//\r\n\r\nclass Face {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.normal = new Vector3();\r\n\t\tthis.midpoint = new Vector3();\r\n\t\tthis.area = 0;\r\n\r\n\t\tthis.constant = 0; // signed distance from face to the origin\r\n\t\tthis.outside = null; // reference to a vertex in a vertex list this face can see\r\n\t\tthis.mark = Visible;\r\n\t\tthis.edge = null;\r\n\r\n\t}\r\n\r\n\tstatic create( a, b, c ) {\r\n\r\n\t\tconst face = new Face();\r\n\r\n\t\tconst e0 = new HalfEdge( a, face );\r\n\t\tconst e1 = new HalfEdge( b, face );\r\n\t\tconst e2 = new HalfEdge( c, face );\r\n\r\n\t\t// join edges\r\n\r\n\t\te0.next = e2.prev = e1;\r\n\t\te1.next = e0.prev = e2;\r\n\t\te2.next = e1.prev = e0;\r\n\r\n\t\t// main half edge reference\r\n\r\n\t\tface.edge = e0;\r\n\r\n\t\treturn face.compute();\r\n\r\n\t}\r\n\r\n\tgetEdge( i ) {\r\n\r\n\t\tlet edge = this.edge;\r\n\r\n\t\twhile ( i > 0 ) {\r\n\r\n\t\t\tedge = edge.next;\r\n\t\t\ti --;\r\n\r\n\t\t}\r\n\r\n\t\twhile ( i < 0 ) {\r\n\r\n\t\t\tedge = edge.prev;\r\n\t\t\ti ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn edge;\r\n\r\n\t}\r\n\r\n\tcompute() {\r\n\r\n\t\tconst a = this.edge.tail();\r\n\t\tconst b = this.edge.head();\r\n\t\tconst c = this.edge.next.head();\r\n\r\n\t\t_triangle.set( a.point, b.point, c.point );\r\n\r\n\t\t_triangle.getNormal( this.normal );\r\n\t\t_triangle.getMidpoint( this.midpoint );\r\n\t\tthis.area = _triangle.getArea();\r\n\r\n\t\tthis.constant = this.normal.dot( this.midpoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) - this.constant;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Entity for a Doubly-Connected Edge List (DCEL).\r\n\r\nclass HalfEdge {\r\n\r\n\r\n\tconstructor( vertex, face ) {\r\n\r\n\t\tthis.vertex = vertex;\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null;\r\n\t\tthis.twin = null;\r\n\t\tthis.face = face;\r\n\r\n\t}\r\n\r\n\thead() {\r\n\r\n\t\treturn this.vertex;\r\n\r\n\t}\r\n\r\n\ttail() {\r\n\r\n\t\treturn this.prev ? this.prev.vertex : null;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\tconst head = this.head();\r\n\t\tconst tail = this.tail();\r\n\r\n\t\tif ( tail !== null ) {\r\n\r\n\t\t\treturn tail.point.distanceTo( head.point );\r\n\r\n\t\t}\r\n\r\n\t\treturn - 1;\r\n\r\n\t}\r\n\r\n\tlengthSquared() {\r\n\r\n\t\tconst head = this.head();\r\n\t\tconst tail = this.tail();\r\n\r\n\t\tif ( tail !== null ) {\r\n\r\n\t\t\treturn tail.point.distanceToSquared( head.point );\r\n\r\n\t\t}\r\n\r\n\t\treturn - 1;\r\n\r\n\t}\r\n\r\n\tsetTwin( edge ) {\r\n\r\n\t\tthis.twin = edge;\r\n\t\tedge.twin = this;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// A vertex as a double linked list node.\r\n\r\nclass VertexNode {\r\n\r\n\tconstructor( point ) {\r\n\r\n\t\tthis.point = point;\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null;\r\n\t\tthis.face = null; // the face that is able to see this vertex\r\n\r\n\t}\r\n\r\n}\r\n\r\n// A double linked list that contains vertex nodes.\r\n\r\nclass VertexList {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.head = null;\r\n\t\tthis.tail = null;\r\n\r\n\t}\r\n\r\n\tfirst() {\r\n\r\n\t\treturn this.head;\r\n\r\n\t}\r\n\r\n\tlast() {\r\n\r\n\t\treturn this.tail;\r\n\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\tthis.head = this.tail = null;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Inserts a vertex before the target vertex\r\n\r\n\tinsertBefore( target, vertex ) {\r\n\r\n\t\tvertex.prev = target.prev;\r\n\t\tvertex.next = target;\r\n\r\n\t\tif ( vertex.prev === null ) {\r\n\r\n\t\t\tthis.head = vertex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvertex.prev.next = vertex;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.prev = vertex;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Inserts a vertex after the target vertex\r\n\r\n\tinsertAfter( target, vertex ) {\r\n\r\n\t\tvertex.prev = target;\r\n\t\tvertex.next = target.next;\r\n\r\n\t\tif ( vertex.next === null ) {\r\n\r\n\t\t\tthis.tail = vertex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvertex.next.prev = vertex;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.next = vertex;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Appends a vertex to the end of the linked list\r\n\r\n\tappend( vertex ) {\r\n\r\n\t\tif ( this.head === null ) {\r\n\r\n\t\t\tthis.head = vertex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.tail.next = vertex;\r\n\r\n\t\t}\r\n\r\n\t\tvertex.prev = this.tail;\r\n\t\tvertex.next = null; // the tail has no subsequent vertex\r\n\r\n\t\tthis.tail = vertex;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Appends a chain of vertices where 'vertex' is the head.\r\n\r\n\tappendChain( vertex ) {\r\n\r\n\t\tif ( this.head === null ) {\r\n\r\n\t\t\tthis.head = vertex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.tail.next = vertex;\r\n\r\n\t\t}\r\n\r\n\t\tvertex.prev = this.tail;\r\n\r\n\t\t// ensure that the 'tail' reference points to the last vertex of the chain\r\n\r\n\t\twhile ( vertex.next !== null ) {\r\n\r\n\t\t\tvertex = vertex.next;\r\n\r\n\t\t}\r\n\r\n\t\tthis.tail = vertex;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Removes a vertex from the linked list\r\n\r\n\tremove( vertex ) {\r\n\r\n\t\tif ( vertex.prev === null ) {\r\n\r\n\t\t\tthis.head = vertex.next;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvertex.prev.next = vertex.next;\r\n\r\n\t\t}\r\n\r\n\t\tif ( vertex.next === null ) {\r\n\r\n\t\t\tthis.tail = vertex.prev;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvertex.next.prev = vertex.prev;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\r\n\r\n\tremoveSubList( a, b ) {\r\n\r\n\t\tif ( a.prev === null ) {\r\n\r\n\t\t\tthis.head = b.next;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ta.prev.next = b.next;\r\n\r\n\t\t}\r\n\r\n\t\tif ( b.next === null ) {\r\n\r\n\t\t\tthis.tail = a.prev;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tb.next.prev = a.prev;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\treturn this.head === null;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ConvexHull, Face, HalfEdge, VertexNode, VertexList };\r\n", "import {\r\n\tBufferGeometry,\r\n\tFloat32BufferAttribute\r\n} from 'three';\r\nimport { ConvexHull } from '../math/ConvexHull.js';\r\n\r\nclass ConvexGeometry extends BufferGeometry {\r\n\r\n\tconstructor( points = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\r\n\t\tconst convexHull = new ConvexHull().setFromPoints( points );\r\n\r\n\t\t// generate vertices and normals\r\n\r\n\t\tconst faces = convexHull.faces;\r\n\r\n\t\tfor ( let i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tconst face = faces[ i ];\r\n\t\t\tlet edge = face.edge;\r\n\r\n\t\t\t// we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tconst point = edge.head().point;\r\n\r\n\t\t\t\tvertices.push( point.x, point.y, point.z );\r\n\t\t\t\tnormals.push( face.normal.x, face.normal.y, face.normal.z );\r\n\r\n\t\t\t\tedge = edge.next;\r\n\r\n\t\t\t} while ( edge !== face.edge );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ConvexGeometry };\r\n", null, null, null, null, null, null, null, null, "class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.xrSessionIsGranted = false;\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };\r\n", "/**\r\n * @webxr-input-profiles/motion-controllers 1.0.0 https://github.com/immersive-web/webxr-input-profiles\r\n */\r\n\r\nconst Constants = {\r\n  Handedness: Object.freeze({\r\n    NONE: 'none',\r\n    LEFT: 'left',\r\n    RIGHT: 'right'\r\n  }),\r\n\r\n  ComponentState: Object.freeze({\r\n    DEFAULT: 'default',\r\n    TOUCHED: 'touched',\r\n    PRESSED: 'pressed'\r\n  }),\r\n\r\n  ComponentProperty: Object.freeze({\r\n    BUTTON: 'button',\r\n    X_AXIS: 'xAxis',\r\n    Y_AXIS: 'yAxis',\r\n    STATE: 'state'\r\n  }),\r\n\r\n  ComponentType: Object.freeze({\r\n    TRIGGER: 'trigger',\r\n    SQUEEZE: 'squeeze',\r\n    TOUCHPAD: 'touchpad',\r\n    THUMBSTICK: 'thumbstick',\r\n    BUTTON: 'button'\r\n  }),\r\n\r\n  ButtonTouchThreshold: 0.05,\r\n\r\n  AxisTouchThreshold: 0.1,\r\n\r\n  VisualResponseProperty: Object.freeze({\r\n    TRANSFORM: 'transform',\r\n    VISIBILITY: 'visibility'\r\n  })\r\n};\r\n\r\n/**\r\n * @description Static helper function to fetch a JSON file and turn it into a JS object\r\n * @param {string} path - Path to JSON file to be fetched\r\n */\r\nasync function fetchJsonFile(path) {\r\n  const response = await fetch(path);\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  } else {\r\n    return response.json();\r\n  }\r\n}\r\n\r\nasync function fetchProfilesList(basePath) {\r\n  if (!basePath) {\r\n    throw new Error('No basePath supplied');\r\n  }\r\n\r\n  const profileListFileName = 'profilesList.json';\r\n  const profilesList = await fetchJsonFile(`${basePath}/${profileListFileName}`);\r\n  return profilesList;\r\n}\r\n\r\nasync function fetchProfile(xrInputSource, basePath, defaultProfile = null, getAssetPath = true) {\r\n  if (!xrInputSource) {\r\n    throw new Error('No xrInputSource supplied');\r\n  }\r\n\r\n  if (!basePath) {\r\n    throw new Error('No basePath supplied');\r\n  }\r\n\r\n  // Get the list of profiles\r\n  const supportedProfilesList = await fetchProfilesList(basePath);\r\n\r\n  // Find the relative path to the first requested profile that is recognized\r\n  let match;\r\n  xrInputSource.profiles.some((profileId) => {\r\n    const supportedProfile = supportedProfilesList[profileId];\r\n    if (supportedProfile) {\r\n      match = {\r\n        profileId,\r\n        profilePath: `${basePath}/${supportedProfile.path}`,\r\n        deprecated: !!supportedProfile.deprecated\r\n      };\r\n    }\r\n    return !!match;\r\n  });\r\n\r\n  if (!match) {\r\n    if (!defaultProfile) {\r\n      throw new Error('No matching profile name found');\r\n    }\r\n\r\n    const supportedProfile = supportedProfilesList[defaultProfile];\r\n    if (!supportedProfile) {\r\n      throw new Error(`No matching profile name found and default profile \"${defaultProfile}\" missing.`);\r\n    }\r\n\r\n    match = {\r\n      profileId: defaultProfile,\r\n      profilePath: `${basePath}/${supportedProfile.path}`,\r\n      deprecated: !!supportedProfile.deprecated\r\n    };\r\n  }\r\n\r\n  const profile = await fetchJsonFile(match.profilePath);\r\n\r\n  let assetPath;\r\n  if (getAssetPath) {\r\n    let layout;\r\n    if (xrInputSource.handedness === 'any') {\r\n      layout = profile.layouts[Object.keys(profile.layouts)[0]];\r\n    } else {\r\n      layout = profile.layouts[xrInputSource.handedness];\r\n    }\r\n    if (!layout) {\r\n      throw new Error(\r\n        `No matching handedness, ${xrInputSource.handedness}, in profile ${match.profileId}`\r\n      );\r\n    }\r\n\r\n    if (layout.assetPath) {\r\n      assetPath = match.profilePath.replace('profile.json', layout.assetPath);\r\n    }\r\n  }\r\n\r\n  return { profile, assetPath };\r\n}\r\n\r\n/** @constant {Object} */\r\nconst defaultComponentValues = {\r\n  xAxis: 0,\r\n  yAxis: 0,\r\n  button: 0,\r\n  state: Constants.ComponentState.DEFAULT\r\n};\r\n\r\n/**\r\n * @description Converts an X, Y coordinate from the range -1 to 1 (as reported by the Gamepad\r\n * API) to the range 0 to 1 (for interpolation). Also caps the X, Y values to be bounded within\r\n * a circle. This ensures that thumbsticks are not animated outside the bounds of their physical\r\n * range of motion and touchpads do not report touch locations off their physical bounds.\r\n * @param {number} x The original x coordinate in the range -1 to 1\r\n * @param {number} y The original y coordinate in the range -1 to 1\r\n */\r\nfunction normalizeAxes(x = 0, y = 0) {\r\n  let xAxis = x;\r\n  let yAxis = y;\r\n\r\n  // Determine if the point is outside the bounds of the circle\r\n  // and, if so, place it on the edge of the circle\r\n  const hypotenuse = Math.sqrt((x * x) + (y * y));\r\n  if (hypotenuse > 1) {\r\n    const theta = Math.atan2(y, x);\r\n    xAxis = Math.cos(theta);\r\n    yAxis = Math.sin(theta);\r\n  }\r\n\r\n  // Scale and move the circle so values are in the interpolation range.  The circle's origin moves\r\n  // from (0, 0) to (0.5, 0.5). The circle's radius scales from 1 to be 0.5.\r\n  const result = {\r\n    normalizedXAxis: (xAxis * 0.5) + 0.5,\r\n    normalizedYAxis: (yAxis * 0.5) + 0.5\r\n  };\r\n  return result;\r\n}\r\n\r\n/**\r\n * Contains the description of how the 3D model should visually respond to a specific user input.\r\n * This is accomplished by initializing the object with the name of a node in the 3D model and\r\n * property that need to be modified in response to user input, the name of the nodes representing\r\n * the allowable range of motion, and the name of the input which triggers the change. In response\r\n * to the named input changing, this object computes the appropriate weighting to use for\r\n * interpolating between the range of motion nodes.\r\n */\r\nclass VisualResponse {\r\n  constructor(visualResponseDescription) {\r\n    this.componentProperty = visualResponseDescription.componentProperty;\r\n    this.states = visualResponseDescription.states;\r\n    this.valueNodeName = visualResponseDescription.valueNodeName;\r\n    this.valueNodeProperty = visualResponseDescription.valueNodeProperty;\r\n\r\n    if (this.valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\r\n      this.minNodeName = visualResponseDescription.minNodeName;\r\n      this.maxNodeName = visualResponseDescription.maxNodeName;\r\n    }\r\n\r\n    // Initializes the response's current value based on default data\r\n    this.value = 0;\r\n    this.updateFromComponent(defaultComponentValues);\r\n  }\r\n\r\n  /**\r\n   * Computes the visual response's interpolation weight based on component state\r\n   * @param {Object} componentValues - The component from which to update\r\n   * @param {number} xAxis - The reported X axis value of the component\r\n   * @param {number} yAxis - The reported Y axis value of the component\r\n   * @param {number} button - The reported value of the component's button\r\n   * @param {string} state - The component's active state\r\n   */\r\n  updateFromComponent({\r\n    xAxis, yAxis, button, state\r\n  }) {\r\n    const { normalizedXAxis, normalizedYAxis } = normalizeAxes(xAxis, yAxis);\r\n    switch (this.componentProperty) {\r\n      case Constants.ComponentProperty.X_AXIS:\r\n        this.value = (this.states.includes(state)) ? normalizedXAxis : 0.5;\r\n        break;\r\n      case Constants.ComponentProperty.Y_AXIS:\r\n        this.value = (this.states.includes(state)) ? normalizedYAxis : 0.5;\r\n        break;\r\n      case Constants.ComponentProperty.BUTTON:\r\n        this.value = (this.states.includes(state)) ? button : 0;\r\n        break;\r\n      case Constants.ComponentProperty.STATE:\r\n        if (this.valueNodeProperty === Constants.VisualResponseProperty.VISIBILITY) {\r\n          this.value = (this.states.includes(state));\r\n        } else {\r\n          this.value = this.states.includes(state) ? 1.0 : 0.0;\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`);\r\n    }\r\n  }\r\n}\r\n\r\nclass Component {\r\n  /**\r\n   * @param {Object} componentId - Id of the component\r\n   * @param {Object} componentDescription - Description of the component to be created\r\n   */\r\n  constructor(componentId, componentDescription) {\r\n    if (!componentId\r\n     || !componentDescription\r\n     || !componentDescription.visualResponses\r\n     || !componentDescription.gamepadIndices\r\n     || Object.keys(componentDescription.gamepadIndices).length === 0) {\r\n      throw new Error('Invalid arguments supplied');\r\n    }\r\n\r\n    this.id = componentId;\r\n    this.type = componentDescription.type;\r\n    this.rootNodeName = componentDescription.rootNodeName;\r\n    this.touchPointNodeName = componentDescription.touchPointNodeName;\r\n\r\n    // Build all the visual responses for this component\r\n    this.visualResponses = {};\r\n    Object.keys(componentDescription.visualResponses).forEach((responseName) => {\r\n      const visualResponse = new VisualResponse(componentDescription.visualResponses[responseName]);\r\n      this.visualResponses[responseName] = visualResponse;\r\n    });\r\n\r\n    // Set default values\r\n    this.gamepadIndices = Object.assign({}, componentDescription.gamepadIndices);\r\n\r\n    this.values = {\r\n      state: Constants.ComponentState.DEFAULT,\r\n      button: (this.gamepadIndices.button !== undefined) ? 0 : undefined,\r\n      xAxis: (this.gamepadIndices.xAxis !== undefined) ? 0 : undefined,\r\n      yAxis: (this.gamepadIndices.yAxis !== undefined) ? 0 : undefined\r\n    };\r\n  }\r\n\r\n  get data() {\r\n    const data = { id: this.id, ...this.values };\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @description Poll for updated data based on current gamepad state\r\n   * @param {Object} gamepad - The gamepad object from which the component data should be polled\r\n   */\r\n  updateFromGamepad(gamepad) {\r\n    // Set the state to default before processing other data sources\r\n    this.values.state = Constants.ComponentState.DEFAULT;\r\n\r\n    // Get and normalize button\r\n    if (this.gamepadIndices.button !== undefined\r\n        && gamepad.buttons.length > this.gamepadIndices.button) {\r\n      const gamepadButton = gamepad.buttons[this.gamepadIndices.button];\r\n      this.values.button = gamepadButton.value;\r\n      this.values.button = (this.values.button < 0) ? 0 : this.values.button;\r\n      this.values.button = (this.values.button > 1) ? 1 : this.values.button;\r\n\r\n      // Set the state based on the button\r\n      if (gamepadButton.pressed || this.values.button === 1) {\r\n        this.values.state = Constants.ComponentState.PRESSED;\r\n      } else if (gamepadButton.touched || this.values.button > Constants.ButtonTouchThreshold) {\r\n        this.values.state = Constants.ComponentState.TOUCHED;\r\n      }\r\n    }\r\n\r\n    // Get and normalize x axis value\r\n    if (this.gamepadIndices.xAxis !== undefined\r\n        && gamepad.axes.length > this.gamepadIndices.xAxis) {\r\n      this.values.xAxis = gamepad.axes[this.gamepadIndices.xAxis];\r\n      this.values.xAxis = (this.values.xAxis < -1) ? -1 : this.values.xAxis;\r\n      this.values.xAxis = (this.values.xAxis > 1) ? 1 : this.values.xAxis;\r\n\r\n      // If the state is still default, check if the xAxis makes it touched\r\n      if (this.values.state === Constants.ComponentState.DEFAULT\r\n        && Math.abs(this.values.xAxis) > Constants.AxisTouchThreshold) {\r\n        this.values.state = Constants.ComponentState.TOUCHED;\r\n      }\r\n    }\r\n\r\n    // Get and normalize Y axis value\r\n    if (this.gamepadIndices.yAxis !== undefined\r\n        && gamepad.axes.length > this.gamepadIndices.yAxis) {\r\n      this.values.yAxis = gamepad.axes[this.gamepadIndices.yAxis];\r\n      this.values.yAxis = (this.values.yAxis < -1) ? -1 : this.values.yAxis;\r\n      this.values.yAxis = (this.values.yAxis > 1) ? 1 : this.values.yAxis;\r\n\r\n      // If the state is still default, check if the yAxis makes it touched\r\n      if (this.values.state === Constants.ComponentState.DEFAULT\r\n        && Math.abs(this.values.yAxis) > Constants.AxisTouchThreshold) {\r\n        this.values.state = Constants.ComponentState.TOUCHED;\r\n      }\r\n    }\r\n\r\n    // Update the visual response weights based on the current component data\r\n    Object.values(this.visualResponses).forEach((visualResponse) => {\r\n      visualResponse.updateFromComponent(this.values);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n  * @description Builds a motion controller with components and visual responses based on the\r\n  * supplied profile description. Data is polled from the xrInputSource's gamepad.\r\n  * @author Nell Waliczek / https://github.com/NellWaliczek\r\n*/\r\nclass MotionController {\r\n  /**\r\n   * @param {Object} xrInputSource - The XRInputSource to build the MotionController around\r\n   * @param {Object} profile - The best matched profile description for the supplied xrInputSource\r\n   * @param {Object} assetUrl\r\n   */\r\n  constructor(xrInputSource, profile, assetUrl) {\r\n    if (!xrInputSource) {\r\n      throw new Error('No xrInputSource supplied');\r\n    }\r\n\r\n    if (!profile) {\r\n      throw new Error('No profile supplied');\r\n    }\r\n\r\n    this.xrInputSource = xrInputSource;\r\n    this.assetUrl = assetUrl;\r\n    this.id = profile.profileId;\r\n\r\n    // Build child components as described in the profile description\r\n    this.layoutDescription = profile.layouts[xrInputSource.handedness];\r\n    this.components = {};\r\n    Object.keys(this.layoutDescription.components).forEach((componentId) => {\r\n      const componentDescription = this.layoutDescription.components[componentId];\r\n      this.components[componentId] = new Component(componentId, componentDescription);\r\n    });\r\n\r\n    // Initialize components based on current gamepad state\r\n    this.updateFromGamepad();\r\n  }\r\n\r\n  get gripSpace() {\r\n    return this.xrInputSource.gripSpace;\r\n  }\r\n\r\n  get targetRaySpace() {\r\n    return this.xrInputSource.targetRaySpace;\r\n  }\r\n\r\n  /**\r\n   * @description Returns a subset of component data for simplified debugging\r\n   */\r\n  get data() {\r\n    const data = [];\r\n    Object.values(this.components).forEach((component) => {\r\n      data.push(component.data);\r\n    });\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @description Poll for updated data based on current gamepad state\r\n   */\r\n  updateFromGamepad() {\r\n    Object.values(this.components).forEach((component) => {\r\n      component.updateFromGamepad(this.xrInputSource.gamepad);\r\n    });\r\n  }\r\n}\r\n\r\nexport { Constants, MotionController, fetchProfile, fetchProfilesList };\r\n", "import {\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tObject3D,\r\n\tSphereGeometry,\r\n} from 'three';\r\n\r\nimport { GLTFLoader } from '../loaders/GLTFLoader.js';\r\n\r\nimport {\r\n\tConstants as MotionControllerConstants,\r\n\tfetchProfile,\r\n\tMotionController\r\n} from '../libs/motion-controllers.module.js';\r\n\r\nconst DEFAULT_PROFILES_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles';\r\nconst DEFAULT_PROFILE = 'generic-trigger';\r\n\r\nclass XRControllerModel extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.motionController = null;\r\n\t\tthis.envMap = null;\r\n\r\n\t}\r\n\r\n\tsetEnvironmentMap( envMap ) {\r\n\r\n\t\tif ( this.envMap == envMap ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.envMap = envMap;\r\n\t\tthis.traverse( ( child ) => {\r\n\r\n\t\t\tif ( child.isMesh ) {\r\n\r\n\t\t\t\tchild.material.envMap = this.envMap;\r\n\t\t\t\tchild.material.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Polls data from the XRInputSource and updates the model's components to match\r\n\t * the real world data\r\n\t */\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tif ( ! this.motionController ) return;\r\n\r\n\t\t// Cause the MotionController to poll the Gamepad for data\r\n\t\tthis.motionController.updateFromGamepad();\r\n\r\n\t\t// Update the 3D model to reflect the button, thumbstick, and touchpad state\r\n\t\tObject.values( this.motionController.components ).forEach( ( component ) => {\r\n\r\n\t\t\t// Update node data based on the visual responses' current states\r\n\t\t\tObject.values( component.visualResponses ).forEach( ( visualResponse ) => {\r\n\r\n\t\t\t\tconst { valueNode, minNode, maxNode, value, valueNodeProperty } = visualResponse;\r\n\r\n\t\t\t\t// Skip if the visual response node is not found. No error is needed,\r\n\t\t\t\t// because it will have been reported at load time.\r\n\t\t\t\tif ( ! valueNode ) return;\r\n\r\n\t\t\t\t// Calculate the new properties based on the weight supplied\r\n\t\t\t\tif ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.VISIBILITY ) {\r\n\r\n\t\t\t\t\tvalueNode.visible = value;\r\n\r\n\t\t\t\t} else if ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM ) {\r\n\r\n\t\t\t\t\tvalueNode.quaternion.slerpQuaternions(\r\n\t\t\t\t\t\tminNode.quaternion,\r\n\t\t\t\t\t\tmaxNode.quaternion,\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tvalueNode.position.lerpVectors(\r\n\t\t\t\t\t\tminNode.position,\r\n\t\t\t\t\t\tmaxNode.position,\r\n\t\t\t\t\t\tvalue\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Walks the model's tree to find the nodes needed to animate the components and\r\n * saves them to the motionContoller components for use in the frame loop. When\r\n * touchpads are found, attaches a touch dot to them.\r\n */\r\nfunction findNodes( motionController, scene ) {\r\n\r\n\t// Loop through the components and find the nodes needed for each components' visual responses\r\n\tObject.values( motionController.components ).forEach( ( component ) => {\r\n\r\n\t\tconst { type, touchPointNodeName, visualResponses } = component;\r\n\r\n\t\tif ( type === MotionControllerConstants.ComponentType.TOUCHPAD ) {\r\n\r\n\t\t\tcomponent.touchPointNode = scene.getObjectByName( touchPointNodeName );\r\n\t\t\tif ( component.touchPointNode ) {\r\n\r\n\t\t\t\t// Attach a touch dot to the touchpad.\r\n\t\t\t\tconst sphereGeometry = new SphereGeometry( 0.001 );\r\n\t\t\t\tconst material = new MeshBasicMaterial( { color: 0x0000FF } );\r\n\t\t\t\tconst sphere = new Mesh( sphereGeometry, material );\r\n\t\t\t\tcomponent.touchPointNode.add( sphere );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( `Could not find touch dot, ${component.touchPointNodeName}, in touchpad component ${component.id}` );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Loop through all the visual responses to be applied to this component\r\n\t\tObject.values( visualResponses ).forEach( ( visualResponse ) => {\r\n\r\n\t\t\tconst { valueNodeName, minNodeName, maxNodeName, valueNodeProperty } = visualResponse;\r\n\r\n\t\t\t// If animating a transform, find the two nodes to be interpolated between.\r\n\t\t\tif ( valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM ) {\r\n\r\n\t\t\t\tvisualResponse.minNode = scene.getObjectByName( minNodeName );\r\n\t\t\t\tvisualResponse.maxNode = scene.getObjectByName( maxNodeName );\r\n\r\n\t\t\t\t// If the extents cannot be found, skip this animation\r\n\t\t\t\tif ( ! visualResponse.minNode ) {\r\n\r\n\t\t\t\t\tconsole.warn( `Could not find ${minNodeName} in the model` );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! visualResponse.maxNode ) {\r\n\r\n\t\t\t\t\tconsole.warn( `Could not find ${maxNodeName} in the model` );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// If the target node cannot be found, skip this animation\r\n\t\t\tvisualResponse.valueNode = scene.getObjectByName( valueNodeName );\r\n\t\t\tif ( ! visualResponse.valueNode ) {\r\n\r\n\t\t\t\tconsole.warn( `Could not find ${valueNodeName} in the model` );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction addAssetSceneToControllerModel( controllerModel, scene ) {\r\n\r\n\t// Find the nodes needed for animation and cache them on the motionController.\r\n\tfindNodes( controllerModel.motionController, scene );\r\n\r\n\t// Apply any environment map that the mesh already has set.\r\n\tif ( controllerModel.envMap ) {\r\n\r\n\t\tscene.traverse( ( child ) => {\r\n\r\n\t\t\tif ( child.isMesh ) {\r\n\r\n\t\t\t\tchild.material.envMap = controllerModel.envMap;\r\n\t\t\t\tchild.material.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// Add the glTF scene to the controllerModel.\r\n\tcontrollerModel.add( scene );\r\n\r\n}\r\n\r\nclass XRControllerModelFactory {\r\n\r\n\tconstructor( gltfLoader = null ) {\r\n\r\n\t\tthis.gltfLoader = gltfLoader;\r\n\t\tthis.path = DEFAULT_PROFILES_PATH;\r\n\t\tthis._assetCache = {};\r\n\r\n\t\t// If a GLTFLoader wasn't supplied to the constructor create a new one.\r\n\t\tif ( ! this.gltfLoader ) {\r\n\r\n\t\t\tthis.gltfLoader = new GLTFLoader();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcreateControllerModel( controller ) {\r\n\r\n\t\tconst controllerModel = new XRControllerModel();\r\n\t\tlet scene = null;\r\n\r\n\t\tcontroller.addEventListener( 'connected', ( event ) => {\r\n\r\n\t\t\tconst xrInputSource = event.data;\r\n\r\n\t\t\tif ( xrInputSource.targetRayMode !== 'tracked-pointer' || ! xrInputSource.gamepad ) return;\r\n\r\n\t\t\tfetchProfile( xrInputSource, this.path, DEFAULT_PROFILE ).then( ( { profile, assetPath } ) => {\r\n\r\n\t\t\t\tcontrollerModel.motionController = new MotionController(\r\n\t\t\t\t\txrInputSource,\r\n\t\t\t\t\tprofile,\r\n\t\t\t\t\tassetPath\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst cachedAsset = this._assetCache[ controllerModel.motionController.assetUrl ];\r\n\t\t\t\tif ( cachedAsset ) {\r\n\r\n\t\t\t\t\tscene = cachedAsset.scene.clone();\r\n\r\n\t\t\t\t\taddAssetSceneToControllerModel( controllerModel, scene );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ! this.gltfLoader ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'GLTFLoader not set.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.gltfLoader.setPath( '' );\r\n\t\t\t\t\tthis.gltfLoader.load( controllerModel.motionController.assetUrl, ( asset ) => {\r\n\r\n\t\t\t\t\t\tthis._assetCache[ controllerModel.motionController.assetUrl ] = asset;\r\n\r\n\t\t\t\t\t\tscene = asset.scene.clone();\r\n\r\n\t\t\t\t\t\taddAssetSceneToControllerModel( controllerModel, scene );\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\t() => {\r\n\r\n\t\t\t\t\t\tthrow new Error( `Asset ${controllerModel.motionController.assetUrl} missing or malformed.` );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( ( err ) => {\r\n\r\n\t\t\t\tconsole.warn( err );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\tcontroller.addEventListener( 'disconnected', () => {\r\n\r\n\t\t\tcontrollerModel.motionController = null;\r\n\t\t\tcontrollerModel.remove( scene );\r\n\t\t\tscene = null;\r\n\r\n\t\t} );\r\n\r\n\t\treturn controllerModel;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { XRControllerModelFactory };\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/**\r\n * Full-screen textured quad shader\r\n */\r\n\r\nconst CopyShader = {\r\n\r\n\tname: 'CopyShader',\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'opacity': { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform float opacity;\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\r\n\t\t\tgl_FragColor = opacity * texel;\r\n\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { CopyShader };\r\n", "import {\r\n\tBufferGeometry,\r\n\tFloat32BufferAttribute,\r\n\tOrthographicCamera,\r\n\tMesh\r\n} from 'three';\r\n\r\nclass Pass {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.isPass = true;\r\n\r\n\t\t// if set to true, the pass is processed by the composer\r\n\t\tthis.enabled = true;\r\n\r\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\t\tthis.needsSwap = true;\r\n\r\n\t\t// if set to true, the pass clears its buffer before rendering\r\n\t\tthis.clear = false;\r\n\r\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\t\tthis.renderToScreen = false;\r\n\r\n\t}\r\n\r\n\tsetSize( /* width, height */ ) {}\r\n\r\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n\tdispose() {}\r\n\r\n}\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\n\r\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\r\n// https://github.com/mrdoob/three.js/pull/21358\r\n\r\nconst _geometry = new BufferGeometry();\r\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\r\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\r\n\r\nclass FullScreenQuad {\r\n\r\n\tconstructor( material ) {\r\n\r\n\t\tthis._mesh = new Mesh( _geometry, material );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis._mesh.geometry.dispose();\r\n\r\n\t}\r\n\r\n\trender( renderer ) {\r\n\r\n\t\trenderer.render( this._mesh, _camera );\r\n\r\n\t}\r\n\r\n\tget material() {\r\n\r\n\t\treturn this._mesh.material;\r\n\r\n\t}\r\n\r\n\tset material( value ) {\r\n\r\n\t\tthis._mesh.material = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Pass, FullScreenQuad };\r\n", "import {\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from 'three';\r\nimport { Pass, FullScreenQuad } from './Pass.js';\r\n\r\nclass ShaderPass extends Pass {\r\n\r\n\tconstructor( shader, textureID ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\r\n\r\n\t\tif ( shader instanceof ShaderMaterial ) {\r\n\r\n\t\t\tthis.uniforms = shader.uniforms;\r\n\r\n\t\t\tthis.material = shader;\r\n\r\n\t\t} else if ( shader ) {\r\n\r\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\tthis.material = new ShaderMaterial( {\r\n\r\n\t\t\t\tname: ( shader.name !== undefined ) ? shader.name : 'unspecified',\r\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\r\n\t\t\t\tuniforms: this.uniforms,\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.material.dispose();\r\n\r\n\t\tthis.fsQuad.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ShaderPass };\r\n", "import { Pass } from './Pass.js';\r\n\r\nclass MaskPass extends Pass {\r\n\r\n\tconstructor( scene, camera ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.clear = true;\r\n\t\tthis.needsSwap = false;\r\n\r\n\t\tthis.inverse = false;\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tconst context = renderer.getContext();\r\n\t\tconst state = renderer.state;\r\n\r\n\t\t// don't update color or depth\r\n\r\n\t\tstate.buffers.color.setMask( false );\r\n\t\tstate.buffers.depth.setMask( false );\r\n\r\n\t\t// lock buffers\r\n\r\n\t\tstate.buffers.color.setLocked( true );\r\n\t\tstate.buffers.depth.setLocked( true );\r\n\r\n\t\t// set up stencil\r\n\r\n\t\tlet writeValue, clearValue;\r\n\r\n\t\tif ( this.inverse ) {\r\n\r\n\t\t\twriteValue = 0;\r\n\t\t\tclearValue = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\twriteValue = 1;\r\n\t\t\tclearValue = 0;\r\n\r\n\t\t}\r\n\r\n\t\tstate.buffers.stencil.setTest( true );\r\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\r\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\r\n\t\tstate.buffers.stencil.setClear( clearValue );\r\n\t\tstate.buffers.stencil.setLocked( true );\r\n\r\n\t\t// draw into the stencil buffer\r\n\r\n\t\trenderer.setRenderTarget( readBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t// unlock color and depth buffer and make them writable for subsequent rendering/clearing\r\n\r\n\t\tstate.buffers.color.setLocked( false );\r\n\t\tstate.buffers.depth.setLocked( false );\r\n\r\n\t\tstate.buffers.color.setMask( true );\r\n\t\tstate.buffers.depth.setMask( true );\r\n\r\n\t\t// only render where stencil is set to 1\r\n\r\n\t\tstate.buffers.stencil.setLocked( false );\r\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\r\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\r\n\t\tstate.buffers.stencil.setLocked( true );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ClearMaskPass extends Pass {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.needsSwap = false;\r\n\r\n\t}\r\n\r\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\trenderer.state.buffers.stencil.setLocked( false );\r\n\t\trenderer.state.buffers.stencil.setTest( false );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { MaskPass, ClearMaskPass };\r\n", "import {\r\n\tClock,\r\n\tHalfFloatType,\r\n\tNoBlending,\r\n\tVector2,\r\n\tWebGLRenderTarget\r\n} from 'three';\r\nimport { CopyShader } from '../shaders/CopyShader.js';\r\nimport { ShaderPass } from './ShaderPass.js';\r\nimport { MaskPass } from './MaskPass.js';\r\nimport { ClearMaskPass } from './MaskPass.js';\r\n\r\nclass EffectComposer {\r\n\r\n\tconstructor( renderer, renderTarget ) {\r\n\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\tthis._pixelRatio = renderer.getPixelRatio();\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tconst size = renderer.getSize( new Vector2() );\r\n\t\t\tthis._width = size.width;\r\n\t\t\tthis._height = size.height;\r\n\r\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\r\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._width = renderTarget.width;\r\n\t\t\tthis._height = renderTarget.height;\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t\tthis.renderToScreen = true;\r\n\r\n\t\tthis.passes = [];\r\n\r\n\t\tthis.copyPass = new ShaderPass( CopyShader );\r\n\t\tthis.copyPass.material.blending = NoBlending;\r\n\r\n\t\tthis.clock = new Clock();\r\n\r\n\t}\r\n\r\n\tswapBuffers() {\r\n\r\n\t\tconst tmp = this.readBuffer;\r\n\t\tthis.readBuffer = this.writeBuffer;\r\n\t\tthis.writeBuffer = tmp;\r\n\r\n\t}\r\n\r\n\taddPass( pass ) {\r\n\r\n\t\tthis.passes.push( pass );\r\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t}\r\n\r\n\tinsertPass( pass, index ) {\r\n\r\n\t\tthis.passes.splice( index, 0, pass );\r\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t}\r\n\r\n\tremovePass( pass ) {\r\n\r\n\t\tconst index = this.passes.indexOf( pass );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.passes.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tisLastEnabledPass( passIndex ) {\r\n\r\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tif ( this.passes[ i ].enabled ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\trender( deltaTime ) {\r\n\r\n\t\t// deltaTime value is in seconds\r\n\r\n\t\tif ( deltaTime === undefined ) {\r\n\r\n\t\t\tdeltaTime = this.clock.getDelta();\r\n\r\n\t\t}\r\n\r\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\r\n\r\n\t\tlet maskActive = false;\r\n\r\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst pass = this.passes[ i ];\r\n\r\n\t\t\tif ( pass.enabled === false ) continue;\r\n\r\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\r\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\r\n\r\n\t\t\tif ( pass.needsSwap ) {\r\n\r\n\t\t\t\tif ( maskActive ) {\r\n\r\n\t\t\t\t\tconst context = this.renderer.getContext();\r\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\r\n\r\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\r\n\r\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.swapBuffers();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( MaskPass !== undefined ) {\r\n\r\n\t\t\t\tif ( pass instanceof MaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = true;\r\n\r\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t}\r\n\r\n\treset( renderTarget ) {\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\r\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\r\n\t\t\tthis._width = size.width;\r\n\t\t\tthis._height = size.height;\r\n\r\n\t\t\trenderTarget = this.renderTarget1.clone();\r\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\r\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\r\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\r\n\r\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\r\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetPixelRatio( pixelRatio ) {\r\n\r\n\t\tthis._pixelRatio = pixelRatio;\r\n\r\n\t\tthis.setSize( this._width, this._height );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\r\n\t\tthis.copyPass.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { EffectComposer };\r\n", "import {\r\n\tColor\r\n} from 'three';\r\nimport { Pass } from './Pass.js';\r\n\r\nclass RenderPass extends Pass {\r\n\r\n\tconstructor( scene, camera, overrideMaterial = null, clearColor = null, clearAlpha = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.overrideMaterial = overrideMaterial;\r\n\r\n\t\tthis.clearColor = clearColor;\r\n\t\tthis.clearAlpha = clearAlpha;\r\n\r\n\t\tthis.clear = true;\r\n\t\tthis.clearDepth = false;\r\n\t\tthis.needsSwap = false;\r\n\t\tthis._oldClearColor = new Color();\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tconst oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tlet oldClearAlpha, oldOverrideMaterial;\r\n\r\n\t\tif ( this.overrideMaterial !== null ) {\r\n\r\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\r\n\r\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearColor !== null ) {\r\n\r\n\t\t\trenderer.getClearColor( this._oldClearColor );\r\n\t\t\trenderer.setClearColor( this.clearColor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearAlpha !== null ) {\r\n\r\n\t\t\toldClearAlpha = renderer.getClearAlpha();\r\n\t\t\trenderer.setClearAlpha( this.clearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearDepth == true ) {\r\n\r\n\t\t\trenderer.clearDepth();\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\r\n\r\n\t\tif ( this.clear === true ) {\r\n\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t// restore\r\n\r\n\t\tif ( this.clearColor !== null ) {\r\n\r\n\t\t\trenderer.setClearColor( this._oldClearColor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearAlpha !== null ) {\r\n\r\n\t\t\trenderer.setClearAlpha( oldClearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.overrideMaterial !== null ) {\r\n\r\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { RenderPass };\r\n", "/**\r\n * RGB Shift Shader\r\n * Shifts red and blue channels from center in opposite directions\r\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\r\n * by Tom Butterworth / http://kriss.cx/tom/\r\n *\r\n * amount: shift distance (1 is width of input)\r\n * angle: shift angle in radians\r\n */\r\n\r\nconst DigitalGlitch = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null }, //diffuse texture\r\n\t\t'tDisp': { value: null }, //displacement texture for digital glitch squares\r\n\t\t'byp': { value: 0 }, //apply the glitch ?\r\n\t\t'amount': { value: 0.08 },\r\n\t\t'angle': { value: 0.02 },\r\n\t\t'seed': { value: 0.02 },\r\n\t\t'seed_x': { value: 0.02 }, //-1,1\r\n\t\t'seed_y': { value: 0.02 }, //-1,1\r\n\t\t'distortion_x': { value: 0.5 },\r\n\t\t'distortion_y': { value: 0.6 },\r\n\t\t'col_s': { value: 0.05 }\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\t\tvoid main() {\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform int byp; //should we apply the glitch ?\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tuniform sampler2D tDisp;\r\n\r\n\t\tuniform float amount;\r\n\t\tuniform float angle;\r\n\t\tuniform float seed;\r\n\t\tuniform float seed_x;\r\n\t\tuniform float seed_y;\r\n\t\tuniform float distortion_x;\r\n\t\tuniform float distortion_y;\r\n\t\tuniform float col_s;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\r\n\t\tfloat rand(vec2 co){\r\n\t\t\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\t\t\tif(byp<1) {\r\n\t\t\t\tvec2 p = vUv;\r\n\t\t\t\tfloat xs = floor(gl_FragCoord.x / 0.5);\r\n\t\t\t\tfloat ys = floor(gl_FragCoord.y / 0.5);\r\n\t\t\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n\t\t\t\tfloat disp = texture2D(tDisp, p*seed*seed).r;\r\n\t\t\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\r\n\t\t\t\t\tif(seed_x>0.){\r\n\t\t\t\t\t\tp.y = 1. - (p.y + distortion_y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tp.y = distortion_y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\r\n\t\t\t\t\tif(seed_y>0.){\r\n\t\t\t\t\t\tp.x=distortion_x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tp.x = 1. - (p.x + distortion_x);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp.x+=disp*seed_x*(seed/5.);\r\n\t\t\t\tp.y+=disp*seed_y*(seed/5.);\r\n\t\t\t\t//base from RGB shift shader\r\n\t\t\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));\r\n\t\t\t\tvec4 cr = texture2D(tDiffuse, p + offset);\r\n\t\t\t\tvec4 cga = texture2D(tDiffuse, p);\r\n\t\t\t\tvec4 cb = texture2D(tDiffuse, p - offset);\r\n\t\t\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\r\n\t\t\t\t//add noise\r\n\t\t\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\r\n\t\t\t\tgl_FragColor = gl_FragColor+ snow;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgl_FragColor=texture2D (tDiffuse, vUv);\r\n\t\t\t}\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { DigitalGlitch };\r\n", "import {\r\n\tDataTexture,\r\n\tFloatType,\r\n\tMathUtils,\r\n\tRedFormat,\r\n\tLuminanceFormat,\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from 'three';\r\nimport { Pass, FullScreenQuad } from './Pass.js';\r\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\r\n\r\nclass GlitchPass extends Pass {\r\n\r\n\tconstructor( dt_size = 64 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst shader = DigitalGlitch;\r\n\r\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\tthis.heightMap = this.generateHeightmap( dt_size );\r\n\r\n\t\tthis.uniforms[ 'tDisp' ].value = this.heightMap;\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t} );\r\n\r\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\r\n\r\n\t\tthis.goWild = false;\r\n\t\tthis.curF = 0;\r\n\t\tthis.generateTrigger();\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( renderer.capabilities.isWebGL2 === false ) this.uniforms[ 'tDisp' ].value.format = LuminanceFormat;\r\n\r\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\r\n\t\tthis.uniforms[ 'byp' ].value = 0;\r\n\r\n\t\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\r\n\r\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\r\n\t\t\tthis.uniforms[ 'angle' ].value = MathUtils.randFloat( - Math.PI, Math.PI );\r\n\t\t\tthis.uniforms[ 'seed_x' ].value = MathUtils.randFloat( - 1, 1 );\r\n\t\t\tthis.uniforms[ 'seed_y' ].value = MathUtils.randFloat( - 1, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_x' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_y' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.curF = 0;\r\n\t\t\tthis.generateTrigger();\r\n\r\n\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\r\n\r\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\r\n\t\t\tthis.uniforms[ 'angle' ].value = MathUtils.randFloat( - Math.PI, Math.PI );\r\n\t\t\tthis.uniforms[ 'distortion_x' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_y' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'seed_x' ].value = MathUtils.randFloat( - 0.3, 0.3 );\r\n\t\t\tthis.uniforms[ 'seed_y' ].value = MathUtils.randFloat( - 0.3, 0.3 );\r\n\r\n\t\t} else if ( this.goWild == false ) {\r\n\r\n\t\t\tthis.uniforms[ 'byp' ].value = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.curF ++;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\tif ( this.clear ) renderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerateTrigger() {\r\n\r\n\t\tthis.randX = MathUtils.randInt( 120, 240 );\r\n\r\n\t}\r\n\r\n\tgenerateHeightmap( dt_size ) {\r\n\r\n\t\tconst data_arr = new Float32Array( dt_size * dt_size );\r\n\t\tconst length = dt_size * dt_size;\r\n\r\n\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tconst val = MathUtils.randFloat( 0, 1 );\r\n\t\t\tdata_arr[ i ] = val;\r\n\r\n\t\t}\r\n\r\n\t\tconst texture = new DataTexture( data_arr, dt_size, dt_size, RedFormat, FloatType );\r\n\t\ttexture.needsUpdate = true;\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.material.dispose();\r\n\r\n\t\tthis.heightMap.dispose();\r\n\r\n\t\tthis.fsQuad.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { GlitchPass };\r\n", "import {\r\n\tVector2\r\n} from 'three';\r\n\r\n/**\r\n * Dot screen shader\r\n * based on glfx.js sepia shader\r\n * https://github.com/evanw/glfx.js\r\n */\r\n\r\nconst DotScreenShader = {\r\n\r\n\tname: 'DotScreenShader',\r\n\r\n\tuniforms: {\r\n\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'tSize': { value: new Vector2( 256, 256 ) },\r\n\t\t'center': { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t'angle': { value: 1.57 },\r\n\t\t'scale': { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\tuniform vec2 center;\r\n\t\tuniform float angle;\r\n\t\tuniform float scale;\r\n\t\tuniform vec2 tSize;\r\n\r\n\t\tuniform sampler2D tDiffuse;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tfloat pattern() {\r\n\r\n\t\t\tfloat s = sin( angle ), c = cos( angle );\r\n\r\n\t\t\tvec2 tex = vUv * tSize - center;\r\n\t\t\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\r\n\r\n\t\t\treturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvec4 color = texture2D( tDiffuse, vUv );\r\n\r\n\t\t\tfloat average = ( color.r + color.g + color.b ) / 3.0;\r\n\r\n\t\t\tgl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { DotScreenShader };\r\n"],
  "mappings": "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",
  "names": ["EE", "Events", "_a", "_b", "module", "exports", "key", "max", "i", "Vector", "Vertices", "Events", "Body", "objects", "object", "Render", "Bodies", "vertices", "mouse", "canvas", "Engine", "size", "Runner", "point", "segment", "World", "Plane", "Plane", "pos", "l", "pos", "_a", "_b", "i", "td", "init", "_a", "init", "fl", "Deflate", "AsyncDeflate", "Inflate", "AsyncInflate", "Gzip", "Gunzip", "AsyncGunzip", "Zlib", "Unzlib", "AsyncUnzlib", "Decompress", "AsyncDecompress", "DecodeUTF8", "_a", "ch", "EncodeUTF8", "_a", "fl", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "Zip", "fl", "_a", "_b", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "Unzip", "_a", "dat", "final", "r", "j", "child", "parent", "material", "pos", "skeleton", "size", "node", "data", "i", "current", "currentTransform", "te", "scanlineMinX", "scanlineMaxX", "p", "joinIsOnLeftSide", "innerSideModified", "points", "size", "canvas", "height", "domElement", "max", "mouse", "panLeft", "panUp", "pan", "_a", "visible", "updateRefractorPlane", "updateVirtualCamera", "canvas", "_a", "center", "transformB", "import_events", "pptr", "ch", "import_events", "_a", "_b", "_plane", "max", "b2", "objects", "Raycaster", "_a", "parent", "_b", "el", "object", "pos", "collisionShapes", "localTransform", "rigidBody", "_a", "_b", "max", "parent", "canvas", "_a", "_b", "_a", "import_events", "VERSION", "VERSION", "_a", "canvas", "x", "y", "import_events", "size", "canvas", "_a", "body", "canvas", "import_events", "size", "evt", "mouse", "size"]
}
